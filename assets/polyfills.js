/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	__webpack_require__(390);
	__webpack_require__(697);
	__webpack_require__(699);
	__webpack_require__(722);
	//require('core-js/client/shim.min');
	//require('zone.js/dist/zone');
	//require('systemjs/dist/system.src');


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */,
/* 115 */,
/* 116 */,
/* 117 */,
/* 118 */,
/* 119 */,
/* 120 */,
/* 121 */,
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */,
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(391);
	__webpack_require__(683);
	__webpack_require__(554);
	__webpack_require__(684);
	__webpack_require__(613);
	__webpack_require__(685);
	__webpack_require__(686);
	__webpack_require__(687);
	__webpack_require__(688);
	__webpack_require__(689);
	__webpack_require__(691);
	__webpack_require__(692);
	__webpack_require__(693);
	__webpack_require__(695);
	__webpack_require__(696);
	module.exports = __webpack_require__(398);

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(392);
	__webpack_require__(441);
	__webpack_require__(442);
	__webpack_require__(443);
	__webpack_require__(444);
	__webpack_require__(446);
	__webpack_require__(449);
	__webpack_require__(450);
	__webpack_require__(451);
	__webpack_require__(452);
	__webpack_require__(453);
	__webpack_require__(454);
	__webpack_require__(455);
	__webpack_require__(456);
	__webpack_require__(457);
	__webpack_require__(459);
	__webpack_require__(461);
	__webpack_require__(463);
	__webpack_require__(465);
	__webpack_require__(468);
	__webpack_require__(469);
	__webpack_require__(470);
	__webpack_require__(474);
	__webpack_require__(476);
	__webpack_require__(478);
	__webpack_require__(482);
	__webpack_require__(483);
	__webpack_require__(484);
	__webpack_require__(485);
	__webpack_require__(487);
	__webpack_require__(488);
	__webpack_require__(489);
	__webpack_require__(490);
	__webpack_require__(491);
	__webpack_require__(492);
	__webpack_require__(493);
	__webpack_require__(495);
	__webpack_require__(496);
	__webpack_require__(497);
	__webpack_require__(499);
	__webpack_require__(500);
	__webpack_require__(501);
	__webpack_require__(503);
	__webpack_require__(504);
	__webpack_require__(505);
	__webpack_require__(506);
	__webpack_require__(507);
	__webpack_require__(508);
	__webpack_require__(509);
	__webpack_require__(510);
	__webpack_require__(511);
	__webpack_require__(512);
	__webpack_require__(513);
	__webpack_require__(514);
	__webpack_require__(515);
	__webpack_require__(516);
	__webpack_require__(521);
	__webpack_require__(522);
	__webpack_require__(526);
	__webpack_require__(527);
	__webpack_require__(528);
	__webpack_require__(529);
	__webpack_require__(531);
	__webpack_require__(532);
	__webpack_require__(533);
	__webpack_require__(534);
	__webpack_require__(535);
	__webpack_require__(536);
	__webpack_require__(537);
	__webpack_require__(538);
	__webpack_require__(539);
	__webpack_require__(540);
	__webpack_require__(541);
	__webpack_require__(542);
	__webpack_require__(543);
	__webpack_require__(544);
	__webpack_require__(545);
	__webpack_require__(546);
	__webpack_require__(547);
	__webpack_require__(549);
	__webpack_require__(550);
	__webpack_require__(556);
	__webpack_require__(557);
	__webpack_require__(559);
	__webpack_require__(560);
	__webpack_require__(561);
	__webpack_require__(565);
	__webpack_require__(566);
	__webpack_require__(567);
	__webpack_require__(568);
	__webpack_require__(569);
	__webpack_require__(571);
	__webpack_require__(572);
	__webpack_require__(573);
	__webpack_require__(574);
	__webpack_require__(577);
	__webpack_require__(579);
	__webpack_require__(580);
	__webpack_require__(581);
	__webpack_require__(583);
	__webpack_require__(585);
	__webpack_require__(587);
	__webpack_require__(588);
	__webpack_require__(589);
	__webpack_require__(591);
	__webpack_require__(592);
	__webpack_require__(593);
	__webpack_require__(594);
	__webpack_require__(600);
	__webpack_require__(603);
	__webpack_require__(604);
	__webpack_require__(606);
	__webpack_require__(607);
	__webpack_require__(610);
	__webpack_require__(611);
	__webpack_require__(614);
	__webpack_require__(615);
	__webpack_require__(616);
	__webpack_require__(617);
	__webpack_require__(618);
	__webpack_require__(619);
	__webpack_require__(620);
	__webpack_require__(621);
	__webpack_require__(622);
	__webpack_require__(623);
	__webpack_require__(624);
	__webpack_require__(625);
	__webpack_require__(626);
	__webpack_require__(627);
	__webpack_require__(628);
	__webpack_require__(629);
	__webpack_require__(630);
	__webpack_require__(631);
	__webpack_require__(632);
	__webpack_require__(634);
	__webpack_require__(635);
	__webpack_require__(636);
	__webpack_require__(637);
	__webpack_require__(638);
	__webpack_require__(639);
	__webpack_require__(641);
	__webpack_require__(642);
	__webpack_require__(643);
	__webpack_require__(644);
	__webpack_require__(645);
	__webpack_require__(646);
	__webpack_require__(647);
	__webpack_require__(648);
	__webpack_require__(650);
	__webpack_require__(651);
	__webpack_require__(653);
	__webpack_require__(654);
	__webpack_require__(655);
	__webpack_require__(656);
	__webpack_require__(659);
	__webpack_require__(660);
	__webpack_require__(661);
	__webpack_require__(662);
	__webpack_require__(663);
	__webpack_require__(664);
	__webpack_require__(665);
	__webpack_require__(666);
	__webpack_require__(668);
	__webpack_require__(669);
	__webpack_require__(670);
	__webpack_require__(671);
	__webpack_require__(672);
	__webpack_require__(673);
	__webpack_require__(674);
	__webpack_require__(675);
	__webpack_require__(676);
	__webpack_require__(677);
	__webpack_require__(678);
	__webpack_require__(681);
	__webpack_require__(682);
	module.exports = __webpack_require__(398);

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(393)
	  , has            = __webpack_require__(394)
	  , DESCRIPTORS    = __webpack_require__(395)
	  , $export        = __webpack_require__(397)
	  , redefine       = __webpack_require__(407)
	  , META           = __webpack_require__(411).KEY
	  , $fails         = __webpack_require__(396)
	  , shared         = __webpack_require__(412)
	  , setToStringTag = __webpack_require__(413)
	  , uid            = __webpack_require__(408)
	  , wks            = __webpack_require__(414)
	  , wksExt         = __webpack_require__(415)
	  , wksDefine      = __webpack_require__(416)
	  , keyOf          = __webpack_require__(418)
	  , enumKeys       = __webpack_require__(431)
	  , isArray        = __webpack_require__(434)
	  , anObject       = __webpack_require__(401)
	  , toIObject      = __webpack_require__(421)
	  , toPrimitive    = __webpack_require__(405)
	  , createDesc     = __webpack_require__(406)
	  , _create        = __webpack_require__(435)
	  , gOPNExt        = __webpack_require__(438)
	  , $GOPD          = __webpack_require__(440)
	  , $DP            = __webpack_require__(400)
	  , $keys          = __webpack_require__(419)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(439).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(433).f  = $propertyIsEnumerable;
	  __webpack_require__(432).f = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(417)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(399)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 393 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 394 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(396)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 396 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(393)
	  , core      = __webpack_require__(398)
	  , hide      = __webpack_require__(399)
	  , redefine  = __webpack_require__(407)
	  , ctx       = __webpack_require__(409)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 398 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(400)
	  , createDesc = __webpack_require__(406);
	module.exports = __webpack_require__(395) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(401)
	  , IE8_DOM_DEFINE = __webpack_require__(403)
	  , toPrimitive    = __webpack_require__(405)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(395) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(402);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 402 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(395) && !__webpack_require__(396)(function(){
	  return Object.defineProperty(__webpack_require__(404)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(402)
	  , document = __webpack_require__(393).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(402);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 406 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(393)
	  , hide      = __webpack_require__(399)
	  , has       = __webpack_require__(394)
	  , SRC       = __webpack_require__(408)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);

	__webpack_require__(398).inspectSource = function(it){
	  return $toString.call(it);
	};

	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 408 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(410);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 410 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(408)('meta')
	  , isObject = __webpack_require__(402)
	  , has      = __webpack_require__(394)
	  , setDesc  = __webpack_require__(400).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(396)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(393)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(400).f
	  , has = __webpack_require__(394)
	  , TAG = __webpack_require__(414)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(412)('wks')
	  , uid        = __webpack_require__(408)
	  , Symbol     = __webpack_require__(393).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(414);

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(393)
	  , core           = __webpack_require__(398)
	  , LIBRARY        = __webpack_require__(417)
	  , wksExt         = __webpack_require__(415)
	  , defineProperty = __webpack_require__(400).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 417 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(419)
	  , toIObject = __webpack_require__(421);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(420)
	  , enumBugKeys = __webpack_require__(430);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(394)
	  , toIObject    = __webpack_require__(421)
	  , arrayIndexOf = __webpack_require__(425)(false)
	  , IE_PROTO     = __webpack_require__(429)('IE_PROTO');

	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(422)
	  , defined = __webpack_require__(424);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(423);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 423 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 424 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(421)
	  , toLength  = __webpack_require__(426)
	  , toIndex   = __webpack_require__(428);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(427)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 427 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(427)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(412)('keys')
	  , uid    = __webpack_require__(408);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 430 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(419)
	  , gOPS    = __webpack_require__(432)
	  , pIE     = __webpack_require__(433);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 432 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 433 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(423);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(401)
	  , dPs         = __webpack_require__(436)
	  , enumBugKeys = __webpack_require__(430)
	  , IE_PROTO    = __webpack_require__(429)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(404)('iframe')
	    , i      = enumBugKeys.length
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(437).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write('<script>document.F=Object</script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(400)
	  , anObject = __webpack_require__(401)
	  , getKeys  = __webpack_require__(419);

	module.exports = __webpack_require__(395) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(393).document && document.documentElement;

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(421)
	  , gOPN      = __webpack_require__(439).f
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(420)
	  , hiddenKeys = __webpack_require__(430).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(433)
	  , createDesc     = __webpack_require__(406)
	  , toIObject      = __webpack_require__(421)
	  , toPrimitive    = __webpack_require__(405)
	  , has            = __webpack_require__(394)
	  , IE8_DOM_DEFINE = __webpack_require__(403)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(395) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(435)});

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(395), 'Object', {defineProperty: __webpack_require__(400).f});

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(395), 'Object', {defineProperties: __webpack_require__(436)});

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(421)
	  , $getOwnPropertyDescriptor = __webpack_require__(440).f;

	__webpack_require__(445)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(397)
	  , core    = __webpack_require__(398)
	  , fails   = __webpack_require__(396);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(447)
	  , $getPrototypeOf = __webpack_require__(448);

	__webpack_require__(445)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(424);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(394)
	  , toObject    = __webpack_require__(447)
	  , IE_PROTO    = __webpack_require__(429)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(447)
	  , $keys    = __webpack_require__(419);

	__webpack_require__(445)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 450 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(445)('getOwnPropertyNames', function(){
	  return __webpack_require__(438).f;
	});

/***/ },
/* 451 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(402)
	  , meta     = __webpack_require__(411).onFreeze;

	__webpack_require__(445)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(402)
	  , meta     = __webpack_require__(411).onFreeze;

	__webpack_require__(445)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 453 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(402)
	  , meta     = __webpack_require__(411).onFreeze;

	__webpack_require__(445)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 454 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(402);

	__webpack_require__(445)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(402);

	__webpack_require__(445)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(402);

	__webpack_require__(445)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(397);

	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(458)});

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(419)
	  , gOPS     = __webpack_require__(432)
	  , pIE      = __webpack_require__(433)
	  , toObject = __webpack_require__(447)
	  , IObject  = __webpack_require__(422)
	  , $assign  = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(396)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(397);
	$export($export.S, 'Object', {is: __webpack_require__(460)});

/***/ },
/* 460 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(397);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(462).set});

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(402)
	  , anObject = __webpack_require__(401);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(409)(Function.call, __webpack_require__(440).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(464)
	  , test    = {};
	test[__webpack_require__(414)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(407)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(423)
	  , TAG = __webpack_require__(414)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(397);

	$export($export.P, 'Function', {bind: __webpack_require__(466)});

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(410)
	  , isObject   = __webpack_require__(402)
	  , invoke     = __webpack_require__(467)
	  , arraySlice = [].slice
	  , factories  = {};

	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};

	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 467 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(400).f
	  , createDesc = __webpack_require__(406)
	  , has        = __webpack_require__(394)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';

	var isExtensible = Object.isExtensible || function(){
	  return true;
	};

	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(395) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(402)
	  , getPrototypeOf = __webpack_require__(448)
	  , HAS_INSTANCE   = __webpack_require__(414)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(400).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(397)
	  , $parseInt = __webpack_require__(471);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(393).parseInt
	  , $trim     = __webpack_require__(472).trim
	  , ws        = __webpack_require__(473)
	  , hex       = /^[\-+]?0[xX]/;

	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397)
	  , defined = __webpack_require__(424)
	  , fails   = __webpack_require__(396)
	  , spaces  = __webpack_require__(473)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');

	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};

	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};

	module.exports = exporter;

/***/ },
/* 473 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(397)
	  , $parseFloat = __webpack_require__(475);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(393).parseFloat
	  , $trim       = __webpack_require__(472).trim;

	module.exports = 1 / $parseFloat(__webpack_require__(473) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(393)
	  , has               = __webpack_require__(394)
	  , cof               = __webpack_require__(423)
	  , inheritIfRequired = __webpack_require__(477)
	  , toPrimitive       = __webpack_require__(405)
	  , fails             = __webpack_require__(396)
	  , gOPN              = __webpack_require__(439).f
	  , gOPD              = __webpack_require__(440).f
	  , dP                = __webpack_require__(400).f
	  , $trim             = __webpack_require__(472).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(435)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;

	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};

	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(395) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(407)(global, NUMBER, $Number);
	}

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(402)
	  , setPrototypeOf = __webpack_require__(462).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(397)
	  , anInstance   = __webpack_require__(479)
	  , toInteger    = __webpack_require__(427)
	  , aNumberValue = __webpack_require__(480)
	  , repeat       = __webpack_require__(481)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';

	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};

	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(396)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 479 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(423);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(427)
	  , defined   = __webpack_require__(424);

	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(397)
	  , $fails       = __webpack_require__(396)
	  , aNumberValue = __webpack_require__(480)
	  , $toPrecision = 1..toPrecision;

	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(397);

	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(397)
	  , _isFinite = __webpack_require__(393).isFinite;

	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(397);

	$export($export.S, 'Number', {isInteger: __webpack_require__(486)});

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(402)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(397);

	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(397)
	  , isInteger = __webpack_require__(486)
	  , abs       = Math.abs;

	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(397);

	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(397);

	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(397)
	  , $parseFloat = __webpack_require__(475);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(397)
	  , $parseInt = __webpack_require__(471);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(397)
	  , log1p   = __webpack_require__(494)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;

	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 494 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(397)
	  , $asinh  = Math.asinh;

	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}

	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(397)
	  , $atanh  = Math.atanh;

	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(397)
	  , sign    = __webpack_require__(498);

	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 498 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(397)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(397)
	  , $expm1  = __webpack_require__(502);

	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 502 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(397)
	  , sign      = __webpack_require__(498)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);

	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};


	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(397)
	  , abs     = Math.abs;

	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 505 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(397)
	  , $imul   = Math.imul;

	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(396)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 506 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {log1p: __webpack_require__(494)});

/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 509 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {sign: __webpack_require__(498)});

/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(397)
	  , expm1   = __webpack_require__(502)
	  , exp     = Math.exp;

	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(396)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(397)
	  , expm1   = __webpack_require__(502)
	  , exp     = Math.exp;

	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 512 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(397)
	  , toIndex        = __webpack_require__(428)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;

	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(397)
	  , toIObject = __webpack_require__(421)
	  , toLength  = __webpack_require__(426);

	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(472)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(517)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(518)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(427)
	  , defined   = __webpack_require__(424);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(417)
	  , $export        = __webpack_require__(397)
	  , redefine       = __webpack_require__(407)
	  , hide           = __webpack_require__(399)
	  , has            = __webpack_require__(394)
	  , Iterators      = __webpack_require__(519)
	  , $iterCreate    = __webpack_require__(520)
	  , setToStringTag = __webpack_require__(413)
	  , getPrototypeOf = __webpack_require__(448)
	  , ITERATOR       = __webpack_require__(414)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 519 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(435)
	  , descriptor     = __webpack_require__(406)
	  , setToStringTag = __webpack_require__(413)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(399)(IteratorPrototype, __webpack_require__(414)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 521 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $at     = __webpack_require__(517)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 522 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(397)
	  , toLength  = __webpack_require__(426)
	  , context   = __webpack_require__(523)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];

	$export($export.P + $export.F * __webpack_require__(525)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(524)
	  , defined  = __webpack_require__(424);

	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 524 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(402)
	  , cof      = __webpack_require__(423)
	  , MATCH    = __webpack_require__(414)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(414)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 526 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(397)
	  , context  = __webpack_require__(523)
	  , INCLUDES = 'includes';

	$export($export.P + $export.F * __webpack_require__(525)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397);

	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(481)
	});

/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(397)
	  , toLength    = __webpack_require__(426)
	  , context     = __webpack_require__(523)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];

	$export($export.P + $export.F * __webpack_require__(525)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 529 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(530)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397)
	  , fails   = __webpack_require__(396)
	  , defined = __webpack_require__(424)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 531 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(530)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 532 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(530)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(530)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(530)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 535 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(530)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 536 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(530)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(530)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 538 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(530)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 539 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(530)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(530)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 541 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(530)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(530)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(397);

	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(397)
	  , toObject    = __webpack_require__(447)
	  , toPrimitive = __webpack_require__(405);

	$export($export.P + $export.F * __webpack_require__(396)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 545 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(397)
	  , fails   = __webpack_require__(396)
	  , getTime = Date.prototype.getTime;

	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};

	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 546 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(407)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(414)('toPrimitive')
	  , proto        = Date.prototype;

	if(!(TO_PRIMITIVE in proto))__webpack_require__(399)(proto, TO_PRIMITIVE, __webpack_require__(548));

/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(401)
	  , toPrimitive = __webpack_require__(405)
	  , NUMBER      = 'number';

	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 549 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(397);

	$export($export.S, 'Array', {isArray: __webpack_require__(434)});

/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(409)
	  , $export        = __webpack_require__(397)
	  , toObject       = __webpack_require__(447)
	  , call           = __webpack_require__(551)
	  , isArrayIter    = __webpack_require__(552)
	  , toLength       = __webpack_require__(426)
	  , createProperty = __webpack_require__(553)
	  , getIterFn      = __webpack_require__(554);

	$export($export.S + $export.F * !__webpack_require__(555)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(401);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(519)
	  , ITERATOR   = __webpack_require__(414)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(400)
	  , createDesc      = __webpack_require__(406);

	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(464)
	  , ITERATOR  = __webpack_require__(414)('iterator')
	  , Iterators = __webpack_require__(519);
	module.exports = __webpack_require__(398).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(414)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(397)
	  , createProperty = __webpack_require__(553);

	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(396)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 557 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(397)
	  , toIObject = __webpack_require__(421)
	  , arrayJoin = [].join;

	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(422) != Object || !__webpack_require__(558)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(396);

	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(397)
	  , html       = __webpack_require__(437)
	  , cof        = __webpack_require__(423)
	  , toIndex    = __webpack_require__(428)
	  , toLength   = __webpack_require__(426)
	  , arraySlice = [].slice;

	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(396)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 560 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(397)
	  , aFunction = __webpack_require__(410)
	  , toObject  = __webpack_require__(447)
	  , fails     = __webpack_require__(396)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];

	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(558)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 561 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(397)
	  , $forEach = __webpack_require__(562)(0)
	  , STRICT   = __webpack_require__(558)([].forEach, true);

	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(409)
	  , IObject  = __webpack_require__(422)
	  , toObject = __webpack_require__(447)
	  , toLength = __webpack_require__(426)
	  , asc      = __webpack_require__(563);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(564);

	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(402)
	  , isArray  = __webpack_require__(434)
	  , SPECIES  = __webpack_require__(414)('species');

	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $map    = __webpack_require__(562)(1);

	$export($export.P + $export.F * !__webpack_require__(558)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $filter = __webpack_require__(562)(2);

	$export($export.P + $export.F * !__webpack_require__(558)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 567 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $some   = __webpack_require__(562)(3);

	$export($export.P + $export.F * !__webpack_require__(558)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $every  = __webpack_require__(562)(4);

	$export($export.P + $export.F * !__webpack_require__(558)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $reduce = __webpack_require__(570);

	$export($export.P + $export.F * !__webpack_require__(558)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(410)
	  , toObject  = __webpack_require__(447)
	  , IObject   = __webpack_require__(422)
	  , toLength  = __webpack_require__(426);

	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397)
	  , $reduce = __webpack_require__(570);

	$export($export.P + $export.F * !__webpack_require__(558)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(397)
	  , $indexOf      = __webpack_require__(425)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(558)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(397)
	  , toIObject     = __webpack_require__(421)
	  , toInteger     = __webpack_require__(427)
	  , toLength      = __webpack_require__(426)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(558)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(397);

	$export($export.P, 'Array', {copyWithin: __webpack_require__(575)});

	__webpack_require__(576)('copyWithin');

/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(447)
	  , toIndex  = __webpack_require__(428)
	  , toLength = __webpack_require__(426);

	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(414)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(399)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(397);

	$export($export.P, 'Array', {fill: __webpack_require__(578)});

	__webpack_require__(576)('fill');

/***/ },
/* 578 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(447)
	  , toIndex  = __webpack_require__(428)
	  , toLength = __webpack_require__(426);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 579 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(397)
	  , $find   = __webpack_require__(562)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(576)(KEY);

/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(397)
	  , $find   = __webpack_require__(562)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(576)(KEY);

/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(582)('Array');

/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(393)
	  , dP          = __webpack_require__(400)
	  , DESCRIPTORS = __webpack_require__(395)
	  , SPECIES     = __webpack_require__(414)('species');

	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(576)
	  , step             = __webpack_require__(584)
	  , Iterators        = __webpack_require__(519)
	  , toIObject        = __webpack_require__(421);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(518)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 584 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(393)
	  , inheritIfRequired = __webpack_require__(477)
	  , dP                = __webpack_require__(400).f
	  , gOPN              = __webpack_require__(439).f
	  , isRegExp          = __webpack_require__(524)
	  , $flags            = __webpack_require__(586)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;

	if(__webpack_require__(395) && (!CORRECT_NEW || __webpack_require__(396)(function(){
	  re2[__webpack_require__(414)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(407)(global, 'RegExp', $RegExp);
	}

	__webpack_require__(582)('RegExp');

/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(401);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 587 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(588);
	var anObject    = __webpack_require__(401)
	  , $flags      = __webpack_require__(586)
	  , DESCRIPTORS = __webpack_require__(395)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];

	var define = function(fn){
	  __webpack_require__(407)(RegExp.prototype, TO_STRING, fn, true);
	};

	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(396)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(395) && /./g.flags != 'g')__webpack_require__(400).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(586)
	});

/***/ },
/* 589 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(590)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 590 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(399)
	  , redefine = __webpack_require__(407)
	  , fails    = __webpack_require__(396)
	  , defined  = __webpack_require__(424)
	  , wks      = __webpack_require__(414);

	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(590)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 592 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(590)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(590)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(524)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(417)
	  , global             = __webpack_require__(393)
	  , ctx                = __webpack_require__(409)
	  , classof            = __webpack_require__(464)
	  , $export            = __webpack_require__(397)
	  , isObject           = __webpack_require__(402)
	  , anObject           = __webpack_require__(401)
	  , aFunction          = __webpack_require__(410)
	  , anInstance         = __webpack_require__(479)
	  , forOf              = __webpack_require__(595)
	  , setProto           = __webpack_require__(462).set
	  , speciesConstructor = __webpack_require__(596)
	  , task               = __webpack_require__(597).set
	  , microtask          = __webpack_require__(598)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;

	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(414)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();

	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};

	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(599)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(413)($Promise, PROMISE);
	__webpack_require__(582)(PROMISE);
	Wrapper = __webpack_require__(398)[PROMISE];

	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(555)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(409)
	  , call        = __webpack_require__(551)
	  , isArrayIter = __webpack_require__(552)
	  , anObject    = __webpack_require__(401)
	  , toLength    = __webpack_require__(426)
	  , getIterFn   = __webpack_require__(554)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(401)
	  , aFunction = __webpack_require__(410)
	  , SPECIES   = __webpack_require__(414)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 597 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(409)
	  , invoke             = __webpack_require__(467)
	  , html               = __webpack_require__(437)
	  , cel                = __webpack_require__(404)
	  , global             = __webpack_require__(393)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(423)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(393)
	  , macrotask = __webpack_require__(597).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(423)(process) == 'process';

	module.exports = function(){
	  var head, last, notify;

	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };

	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }

	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(407);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(601);

	// 23.1 Map Objects
	module.exports = __webpack_require__(602)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 601 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(400).f
	  , create      = __webpack_require__(435)
	  , hide        = __webpack_require__(399)
	  , redefineAll = __webpack_require__(599)
	  , ctx         = __webpack_require__(409)
	  , anInstance  = __webpack_require__(479)
	  , defined     = __webpack_require__(424)
	  , forOf       = __webpack_require__(595)
	  , $iterDefine = __webpack_require__(518)
	  , step        = __webpack_require__(584)
	  , setSpecies  = __webpack_require__(582)
	  , DESCRIPTORS = __webpack_require__(395)
	  , fastKey     = __webpack_require__(411).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';

	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);

	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(393)
	  , $export           = __webpack_require__(397)
	  , redefine          = __webpack_require__(407)
	  , redefineAll       = __webpack_require__(599)
	  , meta              = __webpack_require__(411)
	  , forOf             = __webpack_require__(595)
	  , anInstance        = __webpack_require__(479)
	  , isObject          = __webpack_require__(402)
	  , fails             = __webpack_require__(396)
	  , $iterDetect       = __webpack_require__(555)
	  , setToStringTag    = __webpack_require__(413)
	  , inheritIfRequired = __webpack_require__(477);

	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }

	  setToStringTag(C, NAME);

	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);

	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);

	  return C;
	};

/***/ },
/* 603 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(601);

	// 23.2 Set Objects
	module.exports = __webpack_require__(602)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(562)(0)
	  , redefine     = __webpack_require__(407)
	  , meta         = __webpack_require__(411)
	  , assign       = __webpack_require__(458)
	  , weak         = __webpack_require__(605)
	  , isObject     = __webpack_require__(402)
	  , has          = __webpack_require__(394)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;

	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};

	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};

	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(602)('WeakMap', wrapper, methods, weak, true, true);

	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(599)
	  , getWeak           = __webpack_require__(411).getWeak
	  , anObject          = __webpack_require__(401)
	  , isObject          = __webpack_require__(402)
	  , anInstance        = __webpack_require__(479)
	  , forOf             = __webpack_require__(595)
	  , createArrayMethod = __webpack_require__(562)
	  , $has              = __webpack_require__(394)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;

	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};

	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(605);

	// 23.4 WeakSet Objects
	__webpack_require__(602)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 607 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(397)
	  , $typed       = __webpack_require__(608)
	  , buffer       = __webpack_require__(609)
	  , anObject     = __webpack_require__(401)
	  , toIndex      = __webpack_require__(428)
	  , toLength     = __webpack_require__(426)
	  , isObject     = __webpack_require__(402)
	  , TYPED_ARRAY  = __webpack_require__(414)('typed_array')
	  , ArrayBuffer  = __webpack_require__(393).ArrayBuffer
	  , speciesConstructor = __webpack_require__(596)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';

	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});

	$export($export.P + $export.U + $export.F * __webpack_require__(396)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});

	__webpack_require__(582)(ARRAY_BUFFER);

/***/ },
/* 608 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(393)
	  , hide   = __webpack_require__(399)
	  , uid    = __webpack_require__(408)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;

	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');

	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}

	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 609 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(393)
	  , DESCRIPTORS    = __webpack_require__(395)
	  , LIBRARY        = __webpack_require__(417)
	  , $typed         = __webpack_require__(608)
	  , hide           = __webpack_require__(399)
	  , redefineAll    = __webpack_require__(599)
	  , fails          = __webpack_require__(396)
	  , anInstance     = __webpack_require__(479)
	  , toInteger      = __webpack_require__(427)
	  , toLength       = __webpack_require__(426)
	  , gOPN           = __webpack_require__(439).f
	  , dP             = __webpack_require__(400).f
	  , arrayFill      = __webpack_require__(578)
	  , setToStringTag = __webpack_require__(413)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , parseInt       = global.parseInt
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , min            = Math.min
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;

	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};

	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};

	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};

	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};

	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};

	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };

	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };

	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }

	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 610 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397);
	$export($export.G + $export.W + $export.F * !__webpack_require__(608).ABV, {
	  DataView: __webpack_require__(609).DataView
	});

/***/ },
/* 611 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 612 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(395)){
	  var LIBRARY             = __webpack_require__(417)
	    , global              = __webpack_require__(393)
	    , fails               = __webpack_require__(396)
	    , $export             = __webpack_require__(397)
	    , $typed              = __webpack_require__(608)
	    , $buffer             = __webpack_require__(609)
	    , ctx                 = __webpack_require__(409)
	    , anInstance          = __webpack_require__(479)
	    , propertyDesc        = __webpack_require__(406)
	    , hide                = __webpack_require__(399)
	    , redefineAll         = __webpack_require__(599)
	    , isInteger           = __webpack_require__(486)
	    , toInteger           = __webpack_require__(427)
	    , toLength            = __webpack_require__(426)
	    , toIndex             = __webpack_require__(428)
	    , toPrimitive         = __webpack_require__(405)
	    , has                 = __webpack_require__(394)
	    , same                = __webpack_require__(460)
	    , classof             = __webpack_require__(464)
	    , isObject            = __webpack_require__(402)
	    , toObject            = __webpack_require__(447)
	    , isArrayIter         = __webpack_require__(552)
	    , create              = __webpack_require__(435)
	    , getPrototypeOf      = __webpack_require__(448)
	    , gOPN                = __webpack_require__(439).f
	    , isIterable          = __webpack_require__(613)
	    , getIterFn           = __webpack_require__(554)
	    , uid                 = __webpack_require__(408)
	    , wks                 = __webpack_require__(414)
	    , createArrayMethod   = __webpack_require__(562)
	    , createArrayIncludes = __webpack_require__(425)
	    , speciesConstructor  = __webpack_require__(596)
	    , ArrayIterators      = __webpack_require__(583)
	    , Iterators           = __webpack_require__(519)
	    , $iterDetect         = __webpack_require__(555)
	    , setSpecies          = __webpack_require__(582)
	    , arrayFill           = __webpack_require__(578)
	    , arrayCopyWithin     = __webpack_require__(575)
	    , $DP                 = __webpack_require__(400)
	    , $GOPD               = __webpack_require__(440)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';

	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });

	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });

	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });

	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };

	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };

	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };

	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };

	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };

	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };

	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };

	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };

	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };

	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });

	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };

	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };

	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };

	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };

	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };

	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };

	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }

	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });

	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }

	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });

	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }

	    O[NAME] = TypedArray;

	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });

	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

	    $export($export.P, NAME, proto);

	    setSpecies(NAME);

	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});

	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});

	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});

	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 613 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(464)
	  , ITERATOR  = __webpack_require__(414)('iterator')
	  , Iterators = __webpack_require__(519);
	module.exports = __webpack_require__(398).isIterable = function(it){
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    || Iterators.hasOwnProperty(classof(O));
	};

/***/ },
/* 614 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 615 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 616 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 617 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 618 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 619 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 620 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 621 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(612)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 622 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(397)
	  , aFunction = __webpack_require__(410)
	  , anObject  = __webpack_require__(401)
	  , _apply    = Function.apply;

	$export($export.S, 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    return _apply.call(aFunction(target), thisArgument, anObject(argumentsList));
	  }
	});

/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export   = __webpack_require__(397)
	  , create    = __webpack_require__(435)
	  , aFunction = __webpack_require__(410)
	  , anObject  = __webpack_require__(401)
	  , isObject  = __webpack_require__(402)
	  , bind      = __webpack_require__(466);

	// MS Edge supports only 2 arguments
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	$export($export.S + $export.F * __webpack_require__(396)(function(){
	  function F(){}
	  return !(Reflect.construct(function(){}, [], F) instanceof F);
	}), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(400)
	  , $export     = __webpack_require__(397)
	  , anObject    = __webpack_require__(401)
	  , toPrimitive = __webpack_require__(405);

	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(396)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 625 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(397)
	  , gOPD     = __webpack_require__(440).f
	  , anObject = __webpack_require__(401);

	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(397)
	  , anObject = __webpack_require__(401);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(520)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});

	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 627 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(440)
	  , getPrototypeOf = __webpack_require__(448)
	  , has            = __webpack_require__(394)
	  , $export        = __webpack_require__(397)
	  , isObject       = __webpack_require__(402)
	  , anObject       = __webpack_require__(401);

	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}

	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 628 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(440)
	  , $export  = __webpack_require__(397)
	  , anObject = __webpack_require__(401);

	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 629 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(397)
	  , getProto = __webpack_require__(448)
	  , anObject = __webpack_require__(401);

	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(397);

	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(397)
	  , anObject      = __webpack_require__(401)
	  , $isExtensible = Object.isExtensible;

	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(397);

	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(633)});

/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(439)
	  , gOPS     = __webpack_require__(432)
	  , anObject = __webpack_require__(401)
	  , Reflect  = __webpack_require__(393).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(397)
	  , anObject           = __webpack_require__(401)
	  , $preventExtensions = Object.preventExtensions;

	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(400)
	  , gOPD           = __webpack_require__(440)
	  , getPrototypeOf = __webpack_require__(448)
	  , has            = __webpack_require__(394)
	  , $export        = __webpack_require__(397)
	  , createDesc     = __webpack_require__(406)
	  , anObject       = __webpack_require__(401)
	  , isObject       = __webpack_require__(402);

	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}

	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 636 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(397)
	  , setProto = __webpack_require__(462);

	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(397)
	  , $includes = __webpack_require__(425)(true);

	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	__webpack_require__(576)('includes');

/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(397)
	  , $at     = __webpack_require__(517)(true);

	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(397)
	  , $pad    = __webpack_require__(640);

	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 640 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(426)
	  , repeat   = __webpack_require__(481)
	  , defined  = __webpack_require__(424);

	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(397)
	  , $pad    = __webpack_require__(640);

	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(472)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(472)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(397)
	  , defined     = __webpack_require__(424)
	  , toLength    = __webpack_require__(426)
	  , isRegExp    = __webpack_require__(524)
	  , getFlags    = __webpack_require__(586)
	  , RegExpProto = RegExp.prototype;

	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};

	__webpack_require__(520)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});

	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(416)('asyncIterator');

/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(416)('observable');

/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(397)
	  , ownKeys        = __webpack_require__(633)
	  , toIObject      = __webpack_require__(421)
	  , gOPD           = __webpack_require__(440)
	  , createProperty = __webpack_require__(553);

	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key, D;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(397)
	  , $values = __webpack_require__(649)(false);

	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(419)
	  , toIObject = __webpack_require__(421)
	  , isEnum    = __webpack_require__(433).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(397)
	  , $entries = __webpack_require__(649)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(397)
	  , toObject        = __webpack_require__(447)
	  , aFunction       = __webpack_require__(410)
	  , $defineProperty = __webpack_require__(400);

	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(395) && $export($export.P + __webpack_require__(652), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(417)|| !__webpack_require__(396)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(393)[K];
	});

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(397)
	  , toObject        = __webpack_require__(447)
	  , aFunction       = __webpack_require__(410)
	  , $defineProperty = __webpack_require__(400);

	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(395) && $export($export.P + __webpack_require__(652), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(397)
	  , toObject                 = __webpack_require__(447)
	  , toPrimitive              = __webpack_require__(405)
	  , getPrototypeOf           = __webpack_require__(448)
	  , getOwnPropertyDescriptor = __webpack_require__(440).f;

	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(395) && $export($export.P + __webpack_require__(652), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(397)
	  , toObject                 = __webpack_require__(447)
	  , toPrimitive              = __webpack_require__(405)
	  , getPrototypeOf           = __webpack_require__(448)
	  , getOwnPropertyDescriptor = __webpack_require__(440).f;

	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(395) && $export($export.P + __webpack_require__(652), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(397);

	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(657)('Map')});

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(464)
	  , from    = __webpack_require__(658);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(595);

	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(397);

	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(657)('Set')});

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(397);

	$export($export.S, 'System', {global: __webpack_require__(393)});

/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(397)
	  , cof     = __webpack_require__(423);

	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 662 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 665 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(397);

	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 666 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(667)
	  , anObject                  = __webpack_require__(401)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(600)
	  , $export = __webpack_require__(397)
	  , shared  = __webpack_require__(412)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(604)));

	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};

	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 668 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(667)
	  , anObject               = __webpack_require__(401)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;

	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(667)
	  , anObject               = __webpack_require__(401)
	  , getPrototypeOf         = __webpack_require__(448)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;

	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};

	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 670 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(603)
	  , from                    = __webpack_require__(658)
	  , metadata                = __webpack_require__(667)
	  , anObject                = __webpack_require__(401)
	  , getPrototypeOf          = __webpack_require__(448)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;

	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};

	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 671 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(667)
	  , anObject               = __webpack_require__(401)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;

	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 672 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(667)
	  , anObject                = __webpack_require__(401)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;

	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(667)
	  , anObject               = __webpack_require__(401)
	  , getPrototypeOf         = __webpack_require__(448)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;

	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};

	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 674 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(667)
	  , anObject               = __webpack_require__(401)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;

	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 675 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(667)
	  , anObject                  = __webpack_require__(401)
	  , aFunction                 = __webpack_require__(410)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;

	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(397)
	  , microtask = __webpack_require__(598)()
	  , process   = __webpack_require__(393).process
	  , isNode    = __webpack_require__(423)(process) == 'process';

	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(397)
	  , global      = __webpack_require__(393)
	  , core        = __webpack_require__(398)
	  , microtask   = __webpack_require__(598)()
	  , OBSERVABLE  = __webpack_require__(414)('observable')
	  , aFunction   = __webpack_require__(410)
	  , anObject    = __webpack_require__(401)
	  , anInstance  = __webpack_require__(479)
	  , redefineAll = __webpack_require__(599)
	  , hide        = __webpack_require__(399)
	  , forOf       = __webpack_require__(595)
	  , RETURN      = forOf.RETURN;

	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};

	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};

	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};

	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};

	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};

	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});

	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};

	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});

	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};

	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});

	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});

	hide($Observable.prototype, OBSERVABLE, function(){ return this; });

	$export($export.G, {Observable: $Observable});

	__webpack_require__(582)('Observable');

/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(393)
	  , $export    = __webpack_require__(397)
	  , invoke     = __webpack_require__(467)
	  , partial    = __webpack_require__(679)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 679 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(680)
	  , invoke    = __webpack_require__(467)
	  , aFunction = __webpack_require__(410);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 680 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(393);

/***/ },
/* 681 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397)
	  , $task   = __webpack_require__(597);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(583)
	  , redefine      = __webpack_require__(407)
	  , global        = __webpack_require__(393)
	  , hide          = __webpack_require__(399)
	  , Iterators     = __webpack_require__(519)
	  , wks           = __webpack_require__(414)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 683 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(409)
	  , $export        = __webpack_require__(397)
	  , createDesc     = __webpack_require__(406)
	  , assign         = __webpack_require__(458)
	  , create         = __webpack_require__(435)
	  , getPrototypeOf = __webpack_require__(448)
	  , getKeys        = __webpack_require__(419)
	  , dP             = __webpack_require__(400)
	  , keyOf          = __webpack_require__(418)
	  , aFunction      = __webpack_require__(410)
	  , forOf          = __webpack_require__(595)
	  , isIterable     = __webpack_require__(613)
	  , $iterCreate    = __webpack_require__(520)
	  , step           = __webpack_require__(584)
	  , isObject       = __webpack_require__(402)
	  , toIObject      = __webpack_require__(421)
	  , DESCRIPTORS    = __webpack_require__(395)
	  , has            = __webpack_require__(394);

	// 0 -> Dict.forEach
	// 1 -> Dict.map
	// 2 -> Dict.filter
	// 3 -> Dict.some
	// 4 -> Dict.every
	// 5 -> Dict.find
	// 6 -> Dict.findKey
	// 7 -> Dict.mapPairs
	var createDictMethod = function(TYPE){
	  var IS_MAP   = TYPE == 1
	    , IS_EVERY = TYPE == 4;
	  return function(object, callbackfn, that /* = undefined */){
	    var f      = ctx(callbackfn, that, 3)
	      , O      = toIObject(object)
	      , result = IS_MAP || TYPE == 7 || TYPE == 2
	          ? new (typeof this == 'function' ? this : Dict) : undefined
	      , key, val, res;
	    for(key in O)if(has(O, key)){
	      val = O[key];
	      res = f(val, key, object);
	      if(TYPE){
	        if(IS_MAP)result[key] = res;            // map
	        else if(res)switch(TYPE){
	          case 2: result[key] = val; break;     // filter
	          case 3: return true;                  // some
	          case 5: return val;                   // find
	          case 6: return key;                   // findKey
	          case 7: result[res[0]] = res[1];      // mapPairs
	        } else if(IS_EVERY)return false;        // every
	      }
	    }
	    return TYPE == 3 || IS_EVERY ? IS_EVERY : result;
	  };
	};
	var findKey = createDictMethod(6);

	var createDictIter = function(kind){
	  return function(it){
	    return new DictIterator(it, kind);
	  };
	};
	var DictIterator = function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._a = getKeys(iterated);   // keys
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	};
	$iterCreate(DictIterator, 'Dict', function(){
	  var that = this
	    , O    = that._t
	    , keys = that._a
	    , kind = that._k
	    , key;
	  do {
	    if(that._i >= keys.length){
	      that._t = undefined;
	      return step(1);
	    }
	  } while(!has(O, key = keys[that._i++]));
	  if(kind == 'keys'  )return step(0, key);
	  if(kind == 'values')return step(0, O[key]);
	  return step(0, [key, O[key]]);
	});

	function Dict(iterable){
	  var dict = create(null);
	  if(iterable != undefined){
	    if(isIterable(iterable)){
	      forOf(iterable, true, function(key, value){
	        dict[key] = value;
	      });
	    } else assign(dict, iterable);
	  }
	  return dict;
	}
	Dict.prototype = null;

	function reduce(object, mapfn, init){
	  aFunction(mapfn);
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , i      = 0
	    , memo, key;
	  if(arguments.length < 3){
	    if(!length)throw TypeError('Reduce of empty object with no initial value');
	    memo = O[keys[i++]];
	  } else memo = Object(init);
	  while(length > i)if(has(O, key = keys[i++])){
	    memo = mapfn(memo, O[key], key, object);
	  }
	  return memo;
	}

	function includes(object, el){
	  return (el == el ? keyOf(object, el) : findKey(object, function(it){
	    return it != it;
	  })) !== undefined;
	}

	function get(object, key){
	  if(has(object, key))return object[key];
	}
	function set(object, key, value){
	  if(DESCRIPTORS && key in Object)dP.f(object, key, createDesc(0, value));
	  else object[key] = value;
	  return object;
	}

	function isDict(it){
	  return isObject(it) && getPrototypeOf(it) === Dict.prototype;
	}

	$export($export.G + $export.F, {Dict: Dict});

	$export($export.S, 'Dict', {
	  keys:     createDictIter('keys'),
	  values:   createDictIter('values'),
	  entries:  createDictIter('entries'),
	  forEach:  createDictMethod(0),
	  map:      createDictMethod(1),
	  filter:   createDictMethod(2),
	  some:     createDictMethod(3),
	  every:    createDictMethod(4),
	  find:     createDictMethod(5),
	  findKey:  findKey,
	  mapPairs: createDictMethod(7),
	  reduce:   reduce,
	  keyOf:    keyOf,
	  includes: includes,
	  has:      has,
	  get:      get,
	  set:      set,
	  isDict:   isDict
	});

/***/ },
/* 684 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(401)
	  , get      = __webpack_require__(554);
	module.exports = __webpack_require__(398).getIterator = function(it){
	  var iterFn = get(it);
	  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};

/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	var global  = __webpack_require__(393)
	  , core    = __webpack_require__(398)
	  , $export = __webpack_require__(397)
	  , partial = __webpack_require__(679);
	// https://esdiscuss.org/topic/promise-returning-delay-function
	$export($export.G + $export.F, {
	  delay: function delay(time){
	    return new (core.Promise || global.Promise)(function(resolve){
	      setTimeout(partial.call(resolve, true), time);
	    });
	  }
	});

/***/ },
/* 686 */
/***/ function(module, exports, __webpack_require__) {

	var path    = __webpack_require__(680)
	  , $export = __webpack_require__(397);

	// Placeholder
	__webpack_require__(398)._ = path._ = path._ || {};

	$export($export.P + $export.F, 'Function', {part: __webpack_require__(679)});

/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397);

	$export($export.S + $export.F, 'Object', {isObject: __webpack_require__(402)});

/***/ },
/* 688 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397);

	$export($export.S + $export.F, 'Object', {classof: __webpack_require__(464)});

/***/ },
/* 689 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397)
	  , define  = __webpack_require__(690);

	$export($export.S + $export.F, 'Object', {define: define});

/***/ },
/* 690 */
/***/ function(module, exports, __webpack_require__) {

	var dP        = __webpack_require__(400)
	  , gOPD      = __webpack_require__(440)
	  , ownKeys   = __webpack_require__(633)
	  , toIObject = __webpack_require__(421);

	module.exports = function define(target, mixin){
	  var keys   = ownKeys(toIObject(mixin))
	    , length = keys.length
	    , i = 0, key;
	  while(length > i)dP.f(target, key = keys[i++], gOPD.f(mixin, key));
	  return target;
	};

/***/ },
/* 691 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(397)
	  , define  = __webpack_require__(690)
	  , create  = __webpack_require__(435);

	$export($export.S + $export.F, 'Object', {
	  make: function(proto, mixin){
	    return define(create(proto), mixin);
	  }
	});

/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(518)(Number, 'Number', function(iterated){
	  this._l = +iterated;
	  this._i = 0;
	}, function(){
	  var i    = this._i++
	    , done = !(i < this._l);
	  return {done: done, value: done ? undefined : i};
	});

/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(397)
	  , $re     = __webpack_require__(694)(/[\\^$*+?.()|[\]{}]/g, '\\$&');

	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 694 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397);
	var $re = __webpack_require__(694)(/[&<>"']/g, {
	  '&': '&amp;',
	  '<': '&lt;',
	  '>': '&gt;',
	  '"': '&quot;',
	  "'": '&apos;'
	});

	$export($export.P + $export.F, 'String', {escapeHTML: function escapeHTML(){ return $re(this); }});

/***/ },
/* 696 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(397);
	var $re = __webpack_require__(694)(/&(?:amp|lt|gt|quot|apos);/g, {
	  '&amp;':  '&',
	  '&lt;':   '<',
	  '&gt;':   '>',
	  '&quot;': '"',
	  '&apos;': "'"
	});

	$export($export.P + $export.F, 'String', {unescapeHTML:  function unescapeHTML(){ return $re(this); }});

/***/ },
/* 697 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};

	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {

	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;

	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};

	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;

	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}


	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;

	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;

	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";

	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(global) {"use strict";
		__webpack_require__(1);
		var event_target_1 = __webpack_require__(2);
		var define_property_1 = __webpack_require__(4);
		var register_element_1 = __webpack_require__(5);
		var property_descriptor_1 = __webpack_require__(6);
		var timers_1 = __webpack_require__(8);
		var utils_1 = __webpack_require__(3);
		var set = 'set';
		var clear = 'clear';
		var blockingMethods = ['alert', 'prompt', 'confirm'];
		var _global = typeof window == 'undefined' ? global : window;
		timers_1.patchTimer(_global, set, clear, 'Timeout');
		timers_1.patchTimer(_global, set, clear, 'Interval');
		timers_1.patchTimer(_global, set, clear, 'Immediate');
		timers_1.patchTimer(_global, 'request', 'cancelMacroTask', 'AnimationFrame');
		timers_1.patchTimer(_global, 'mozRequest', 'mozCancel', 'AnimationFrame');
		timers_1.patchTimer(_global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');
		for (var i = 0; i < blockingMethods.length; i++) {
		    var name = blockingMethods[i];
		    utils_1.patchMethod(_global, name, function (delegate, symbol, name) {
		        return function (s, args) {
		            return Zone.current.run(delegate, _global, args, name);
		        };
		    });
		}
		event_target_1.eventTargetPatch(_global);
		property_descriptor_1.propertyDescriptorPatch(_global);
		utils_1.patchClass('MutationObserver');
		utils_1.patchClass('WebKitMutationObserver');
		utils_1.patchClass('FileReader');
		define_property_1.propertyPatch();
		register_element_1.registerElementPatch(_global);
		// Treat XMLHTTPRequest as a macrotask.
		patchXHR(_global);
		var XHR_TASK = utils_1.zoneSymbol('xhrTask');
		function patchXHR(window) {
		    function findPendingTask(target) {
		        var pendingTask = target[XHR_TASK];
		        return pendingTask;
		    }
		    function scheduleTask(task) {
		        var data = task.data;
		        data.target.addEventListener('readystatechange', function () {
		            if (data.target.readyState === XMLHttpRequest.DONE) {
		                if (!data.aborted) {
		                    task.invoke();
		                }
		            }
		        });
		        var storedTask = data.target[XHR_TASK];
		        if (!storedTask) {
		            data.target[XHR_TASK] = task;
		        }
		        setNative.apply(data.target, data.args);
		        return task;
		    }
		    function placeholderCallback() {
		    }
		    function clearTask(task) {
		        var data = task.data;
		        // Note - ideally, we would call data.target.removeEventListener here, but it's too late
		        // to prevent it from firing. So instead, we store info for the event listener.
		        data.aborted = true;
		        return clearNative.apply(data.target, data.args);
		    }
		    var setNative = utils_1.patchMethod(window.XMLHttpRequest.prototype, 'send', function () { return function (self, args) {
		        var zone = Zone.current;
		        var options = {
		            target: self,
		            isPeriodic: false,
		            delay: null,
		            args: args,
		            aborted: false
		        };
		        return zone.scheduleMacroTask('XMLHttpRequest.send', placeholderCallback, options, scheduleTask, clearTask);
		    }; });
		    var clearNative = utils_1.patchMethod(window.XMLHttpRequest.prototype, 'abort', function (delegate) { return function (self, args) {
		        var task = findPendingTask(self);
		        if (task && typeof task.type == 'string') {
		            // If the XHR has already completed, do nothing.
		            if (task.cancelFn == null) {
		                return;
		            }
		            task.zone.cancelTask(task);
		        }
		        // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no task to cancel. Do nothing.
		    }; });
		}
		/// GEO_LOCATION
		if (_global['navigator'] && _global['navigator'].geolocation) {
		    utils_1.patchPrototype(_global['navigator'].geolocation, [
		        'getCurrentPosition',
		        'watchPosition'
		    ]);
		}

		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

	/***/ },
	/* 1 */
	/***/ function(module, exports) {

		/* WEBPACK VAR INJECTION */(function(global) {;
		;
		var Zone = (function (global) {
		    var Zone = (function () {
		        function Zone(parent, zoneSpec) {
		            this._properties = null;
		            this._parent = parent;
		            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';
		            this._properties = zoneSpec && zoneSpec.properties || {};
		            this._zoneDelegate = new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);
		        }
		        Object.defineProperty(Zone, "current", {
		            get: function () { return _currentZone; },
		            enumerable: true,
		            configurable: true
		        });
		        ;
		        Object.defineProperty(Zone, "currentTask", {
		            get: function () { return _currentTask; },
		            enumerable: true,
		            configurable: true
		        });
		        ;
		        Object.defineProperty(Zone.prototype, "parent", {
		            get: function () { return this._parent; },
		            enumerable: true,
		            configurable: true
		        });
		        ;
		        Object.defineProperty(Zone.prototype, "name", {
		            get: function () { return this._name; },
		            enumerable: true,
		            configurable: true
		        });
		        ;
		        Zone.prototype.get = function (key) {
		            var current = this;
		            while (current) {
		                if (current._properties.hasOwnProperty(key)) {
		                    return current._properties[key];
		                }
		                current = current._parent;
		            }
		        };
		        Zone.prototype.fork = function (zoneSpec) {
		            if (!zoneSpec)
		                throw new Error('ZoneSpec required!');
		            return this._zoneDelegate.fork(this, zoneSpec);
		        };
		        Zone.prototype.wrap = function (callback, source) {
		            if (typeof callback !== 'function') {
		                throw new Error('Expecting function got: ' + callback);
		            }
		            var _callback = this._zoneDelegate.intercept(this, callback, source);
		            var zone = this;
		            return function () {
		                return zone.runGuarded(_callback, this, arguments, source);
		            };
		        };
		        Zone.prototype.run = function (callback, applyThis, applyArgs, source) {
		            if (applyThis === void 0) { applyThis = null; }
		            if (applyArgs === void 0) { applyArgs = null; }
		            if (source === void 0) { source = null; }
		            var oldZone = _currentZone;
		            _currentZone = this;
		            try {
		                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
		            }
		            finally {
		                _currentZone = oldZone;
		            }
		        };
		        Zone.prototype.runGuarded = function (callback, applyThis, applyArgs, source) {
		            if (applyThis === void 0) { applyThis = null; }
		            if (applyArgs === void 0) { applyArgs = null; }
		            if (source === void 0) { source = null; }
		            var oldZone = _currentZone;
		            _currentZone = this;
		            try {
		                try {
		                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);
		                }
		                catch (error) {
		                    if (this._zoneDelegate.handleError(this, error)) {
		                        throw error;
		                    }
		                }
		            }
		            finally {
		                _currentZone = oldZone;
		            }
		        };
		        Zone.prototype.runTask = function (task, applyThis, applyArgs) {
		            task.runCount++;
		            if (task.zone != this)
		                throw new Error('A task can only be run in the zone which created it! (Creation: ' +
		                    task.zone.name + '; Execution: ' + this.name + ')');
		            var previousTask = _currentTask;
		            _currentTask = task;
		            var oldZone = _currentZone;
		            _currentZone = this;
		            try {
		                if (task.type == 'macroTask' && task.data && !task.data.isPeriodic) {
		                    task.cancelFn = null;
		                }
		                try {
		                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);
		                }
		                catch (error) {
		                    if (this._zoneDelegate.handleError(this, error)) {
		                        throw error;
		                    }
		                }
		            }
		            finally {
		                _currentZone = oldZone;
		                _currentTask = previousTask;
		            }
		        };
		        Zone.prototype.scheduleMicroTask = function (source, callback, data, customSchedule) {
		            return this._zoneDelegate.scheduleTask(this, new ZoneTask('microTask', this, source, callback, data, customSchedule, null));
		        };
		        Zone.prototype.scheduleMacroTask = function (source, callback, data, customSchedule, customCancel) {
		            return this._zoneDelegate.scheduleTask(this, new ZoneTask('macroTask', this, source, callback, data, customSchedule, customCancel));
		        };
		        Zone.prototype.scheduleEventTask = function (source, callback, data, customSchedule, customCancel) {
		            return this._zoneDelegate.scheduleTask(this, new ZoneTask('eventTask', this, source, callback, data, customSchedule, customCancel));
		        };
		        Zone.prototype.cancelTask = function (task) {
		            var value = this._zoneDelegate.cancelTask(this, task);
		            task.runCount = -1;
		            task.cancelFn = null;
		            return value;
		        };
		        Zone.__symbol__ = __symbol__;
		        return Zone;
		    }());
		    ;
		    var ZoneDelegate = (function () {
		        function ZoneDelegate(zone, parentDelegate, zoneSpec) {
		            this._taskCounts = { microTask: 0, macroTask: 0, eventTask: 0 };
		            this.zone = zone;
		            this._parentDelegate = parentDelegate;
		            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);
		            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);
		            this._interceptZS = zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);
		            this._interceptDlgt = zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);
		            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);
		            this._invokeDlgt = zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);
		            this._handleErrorZS = zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);
		            this._handleErrorDlgt = zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);
		            this._scheduleTaskZS = zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);
		            this._scheduleTaskDlgt = zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);
		            this._invokeTaskZS = zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);
		            this._invokeTaskDlgt = zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);
		            this._cancelTaskZS = zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);
		            this._cancelTaskDlgt = zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);
		            this._hasTaskZS = zoneSpec && (zoneSpec.onHasTask ? zoneSpec : parentDelegate._hasTaskZS);
		            this._hasTaskDlgt = zoneSpec && (zoneSpec.onHasTask ? parentDelegate : parentDelegate._hasTaskDlgt);
		        }
		        ZoneDelegate.prototype.fork = function (targetZone, zoneSpec) {
		            return this._forkZS
		                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)
		                : new Zone(targetZone, zoneSpec);
		        };
		        ZoneDelegate.prototype.intercept = function (targetZone, callback, source) {
		            return this._interceptZS
		                ? this._interceptZS.onIntercept(this._interceptDlgt, this.zone, targetZone, callback, source)
		                : callback;
		        };
		        ZoneDelegate.prototype.invoke = function (targetZone, callback, applyThis, applyArgs, source) {
		            return this._invokeZS
		                ? this._invokeZS.onInvoke(this._invokeDlgt, this.zone, targetZone, callback, applyThis, applyArgs, source)
		                : callback.apply(applyThis, applyArgs);
		        };
		        ZoneDelegate.prototype.handleError = function (targetZone, error) {
		            return this._handleErrorZS
		                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this.zone, targetZone, error)
		                : true;
		        };
		        ZoneDelegate.prototype.scheduleTask = function (targetZone, task) {
		            try {
		                if (this._scheduleTaskZS) {
		                    return this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this.zone, targetZone, task);
		                }
		                else if (task.scheduleFn) {
		                    task.scheduleFn(task);
		                }
		                else if (task.type == 'microTask') {
		                    scheduleMicroTask(task);
		                }
		                else {
		                    throw new Error('Task is missing scheduleFn.');
		                }
		                return task;
		            }
		            finally {
		                if (targetZone == this.zone) {
		                    this._updateTaskCount(task.type, 1);
		                }
		            }
		        };
		        ZoneDelegate.prototype.invokeTask = function (targetZone, task, applyThis, applyArgs) {
		            try {
		                return this._invokeTaskZS
		                    ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this.zone, targetZone, task, applyThis, applyArgs)
		                    : task.callback.apply(applyThis, applyArgs);
		            }
		            finally {
		                if (targetZone == this.zone && (task.type != 'eventTask') && !(task.data && task.data.isPeriodic)) {
		                    this._updateTaskCount(task.type, -1);
		                }
		            }
		        };
		        ZoneDelegate.prototype.cancelTask = function (targetZone, task) {
		            var value;
		            if (this._cancelTaskZS) {
		                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this.zone, targetZone, task);
		            }
		            else if (!task.cancelFn) {
		                throw new Error('Task does not support cancellation, or is already canceled.');
		            }
		            else {
		                value = task.cancelFn(task);
		            }
		            if (targetZone == this.zone) {
		                // this should not be in the finally block, because exceptions assume not canceled.
		                this._updateTaskCount(task.type, -1);
		            }
		            return value;
		        };
		        ZoneDelegate.prototype.hasTask = function (targetZone, isEmpty) {
		            return this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this.zone, targetZone, isEmpty);
		        };
		        ZoneDelegate.prototype._updateTaskCount = function (type, count) {
		            var counts = this._taskCounts;
		            var prev = counts[type];
		            var next = counts[type] = prev + count;
		            if (next < 0) {
		                throw new Error('More tasks executed then were scheduled.');
		            }
		            if (prev == 0 || next == 0) {
		                var isEmpty = {
		                    microTask: counts.microTask > 0,
		                    macroTask: counts.macroTask > 0,
		                    eventTask: counts.eventTask > 0,
		                    change: type
		                };
		                try {
		                    this.hasTask(this.zone, isEmpty);
		                }
		                finally {
		                    if (this._parentDelegate) {
		                        this._parentDelegate._updateTaskCount(type, count);
		                    }
		                }
		            }
		        };
		        return ZoneDelegate;
		    }());
		    var ZoneTask = (function () {
		        function ZoneTask(type, zone, source, callback, options, scheduleFn, cancelFn) {
		            this.runCount = 0;
		            this.type = type;
		            this.zone = zone;
		            this.source = source;
		            this.data = options;
		            this.scheduleFn = scheduleFn;
		            this.cancelFn = cancelFn;
		            this.callback = callback;
		            var self = this;
		            this.invoke = function () {
		                try {
		                    return zone.runTask(self, this, arguments);
		                }
		                finally {
		                    drainMicroTaskQueue();
		                }
		            };
		        }
		        return ZoneTask;
		    }());
		    function __symbol__(name) { return '__zone_symbol__' + name; }
		    ;
		    var symbolSetTimeout = __symbol__('setTimeout');
		    var symbolPromise = __symbol__('Promise');
		    var symbolThen = __symbol__('then');
		    var _currentZone = new Zone(null, null);
		    var _currentTask = null;
		    var _microTaskQueue = [];
		    var _isDrainingMicrotaskQueue = false;
		    var _uncaughtPromiseErrors = [];
		    var _drainScheduled = false;
		    function scheduleQueueDrain() {
		        if (!_drainScheduled && !_currentTask && _microTaskQueue.length == 0) {
		            // We are not running in Task, so we need to kickstart the microtask queue.
		            if (global[symbolPromise]) {
		                global[symbolPromise].resolve(0)[symbolThen](drainMicroTaskQueue);
		            }
		            else {
		                global[symbolSetTimeout](drainMicroTaskQueue, 0);
		            }
		        }
		    }
		    function scheduleMicroTask(task) {
		        scheduleQueueDrain();
		        _microTaskQueue.push(task);
		    }
		    function consoleError(e) {
		        var rejection = e && e.rejection;
		        if (rejection) {
		            console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection);
		        }
		        console.error(e);
		    }
		    function drainMicroTaskQueue() {
		        if (!_isDrainingMicrotaskQueue) {
		            _isDrainingMicrotaskQueue = true;
		            while (_microTaskQueue.length) {
		                var queue = _microTaskQueue;
		                _microTaskQueue = [];
		                for (var i = 0; i < queue.length; i++) {
		                    var task = queue[i];
		                    try {
		                        task.zone.runTask(task, null, null);
		                    }
		                    catch (e) {
		                        consoleError(e);
		                    }
		                }
		            }
		            while (_uncaughtPromiseErrors.length) {
		                var uncaughtPromiseErrors = _uncaughtPromiseErrors;
		                _uncaughtPromiseErrors = [];
		                var _loop_1 = function(i) {
		                    var uncaughtPromiseError = uncaughtPromiseErrors[i];
		                    try {
		                        uncaughtPromiseError.zone.runGuarded(function () { throw uncaughtPromiseError; });
		                    }
		                    catch (e) {
		                        consoleError(e);
		                    }
		                };
		                for (var i = 0; i < uncaughtPromiseErrors.length; i++) {
		                    _loop_1(i);
		                }
		            }
		            _isDrainingMicrotaskQueue = false;
		            _drainScheduled = false;
		        }
		    }
		    function isThenable(value) {
		        return value && value.then;
		    }
		    function forwardResolution(value) { return value; }
		    function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }
		    var symbolState = __symbol__('state');
		    var symbolValue = __symbol__('value');
		    var source = 'Promise.then';
		    var UNRESOLVED = null;
		    var RESOLVED = true;
		    var REJECTED = false;
		    var REJECTED_NO_CATCH = 0;
		    function makeResolver(promise, state) {
		        return function (v) {
		            resolvePromise(promise, state, v);
		            // Do not return value or you will break the Promise spec.
		        };
		    }
		    function resolvePromise(promise, state, value) {
		        if (promise[symbolState] === UNRESOLVED) {
		            if (value instanceof ZoneAwarePromise && value[symbolState] !== UNRESOLVED) {
		                clearRejectedNoCatch(value);
		                resolvePromise(promise, value[symbolState], value[symbolValue]);
		            }
		            else if (isThenable(value)) {
		                value.then(makeResolver(promise, state), makeResolver(promise, false));
		            }
		            else {
		                promise[symbolState] = state;
		                var queue = promise[symbolValue];
		                promise[symbolValue] = value;
		                for (var i = 0; i < queue.length;) {
		                    scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);
		                }
		                if (queue.length == 0 && state == REJECTED) {
		                    promise[symbolState] = REJECTED_NO_CATCH;
		                    try {
		                        throw new Error("Uncaught (in promise): " + value);
		                    }
		                    catch (e) {
		                        var error = e;
		                        error.rejection = value;
		                        error.promise = promise;
		                        error.zone = Zone.current;
		                        error.task = Zone.currentTask;
		                        _uncaughtPromiseErrors.push(error);
		                        scheduleQueueDrain();
		                    }
		                }
		            }
		        }
		        // Resolving an already resolved promise is a noop.
		        return promise;
		    }
		    function clearRejectedNoCatch(promise) {
		        if (promise[symbolState] === REJECTED_NO_CATCH) {
		            promise[symbolState] = REJECTED;
		            for (var i = 0; i < _uncaughtPromiseErrors.length; i++) {
		                if (promise === _uncaughtPromiseErrors[i].promise) {
		                    _uncaughtPromiseErrors.splice(i, 1);
		                    break;
		                }
		            }
		        }
		    }
		    function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {
		        clearRejectedNoCatch(promise);
		        var delegate = promise[symbolState] ? onFulfilled || forwardResolution : onRejected || forwardRejection;
		        zone.scheduleMicroTask(source, function () {
		            try {
		                resolvePromise(chainPromise, true, zone.run(delegate, null, [promise[symbolValue]]));
		            }
		            catch (error) {
		                resolvePromise(chainPromise, false, error);
		            }
		        });
		    }
		    var ZoneAwarePromise = (function () {
		        function ZoneAwarePromise(executor) {
		            var promise = this;
		            promise[symbolState] = UNRESOLVED;
		            promise[symbolValue] = []; // queue;
		            try {
		                executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));
		            }
		            catch (e) {
		                resolvePromise(promise, false, e);
		            }
		        }
		        ZoneAwarePromise.resolve = function (value) {
		            return resolvePromise(new this(null), RESOLVED, value);
		        };
		        ZoneAwarePromise.reject = function (error) {
		            return resolvePromise(new this(null), REJECTED, error);
		        };
		        ZoneAwarePromise.race = function (values) {
		            var resolve;
		            var reject;
		            var promise = new this(function (res, rej) { resolve = res; reject = rej; });
		            function onResolve(value) { promise && (promise = null || resolve(value)); }
		            function onReject(error) { promise && (promise = null || reject(error)); }
		            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
		                var value = values_1[_i];
		                if (!isThenable(value)) {
		                    value = this.resolve(value);
		                }
		                value.then(onResolve, onReject);
		            }
		            return promise;
		        };
		        ZoneAwarePromise.all = function (values) {
		            var resolve;
		            var reject;
		            var promise = new this(function (res, rej) { resolve = res; reject = rej; });
		            var count = 0;
		            var resolvedValues = [];
		            function onReject(error) { promise && reject(error); promise = null; }
		            for (var _i = 0, values_2 = values; _i < values_2.length; _i++) {
		                var value = values_2[_i];
		                if (!isThenable(value)) {
		                    value = this.resolve(value);
		                }
		                value.then((function (index) { return function (value) {
		                    resolvedValues[index] = value;
		                    count--;
		                    if (promise && !count) {
		                        resolve(resolvedValues);
		                    }
		                    promise == null;
		                }; })(count), onReject);
		                count++;
		            }
		            if (!count)
		                resolve(resolvedValues);
		            return promise;
		        };
		        ZoneAwarePromise.prototype.then = function (onFulfilled, onRejected) {
		            var chainPromise = new ZoneAwarePromise(null);
		            var zone = Zone.current;
		            if (this[symbolState] == UNRESOLVED) {
		                this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);
		            }
		            else {
		                scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);
		            }
		            return chainPromise;
		        };
		        ZoneAwarePromise.prototype.catch = function (onRejected) {
		            return this.then(null, onRejected);
		        };
		        return ZoneAwarePromise;
		    }());
		    var NativePromise = global[__symbol__('Promise')] = global.Promise;
		    global.Promise = ZoneAwarePromise;
		    if (NativePromise) {
		        var NativePromiseProtototype = NativePromise.prototype;
		        var NativePromiseThen_1 = NativePromiseProtototype[__symbol__('then')]
		            = NativePromiseProtototype.then;
		        NativePromiseProtototype.then = function (onResolve, onReject) {
		            var nativePromise = this;
		            return new ZoneAwarePromise(function (resolve, reject) {
		                NativePromiseThen_1.call(nativePromise, resolve, reject);
		            }).then(onResolve, onReject);
		        };
		    }
		    return global.Zone = Zone;
		})(typeof window === 'undefined' ? global : window);

		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		var utils_1 = __webpack_require__(3);
		var WTF_ISSUE_555 = 'Anchor,Area,Audio,BR,Base,BaseFont,Body,Button,Canvas,Content,DList,Directory,Div,Embed,FieldSet,Font,Form,Frame,FrameSet,HR,Head,Heading,Html,IFrame,Image,Input,Keygen,LI,Label,Legend,Link,Map,Marquee,Media,Menu,Meta,Meter,Mod,OList,Object,OptGroup,Option,Output,Paragraph,Pre,Progress,Quote,Script,Select,Source,Span,Style,TableCaption,TableCell,TableCol,Table,TableRow,TableSection,TextArea,Title,Track,UList,Unknown,Video';
		var NO_EVENT_TARGET = 'ApplicationCache,EventSource,FileReader,InputMethodContext,MediaController,MessagePort,Node,Performance,SVGElementInstance,SharedWorker,TextTrack,TextTrackCue,TextTrackList,WebKitNamedFlow,Worker,WorkerGlobalScope,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload,IDBRequest,IDBOpenDBRequest,IDBDatabase,IDBTransaction,IDBCursor,DBIndex'.split(',');
		var EVENT_TARGET = 'EventTarget';
		function eventTargetPatch(_global) {
		    var apis = [];
		    var isWtf = _global['wtf'];
		    if (isWtf) {
		        // Workaround for: https://github.com/google/tracing-framework/issues/555
		        apis = WTF_ISSUE_555.split(',').map(function (v) { return 'HTML' + v + 'Element'; }).concat(NO_EVENT_TARGET);
		    }
		    else if (_global[EVENT_TARGET]) {
		        apis.push(EVENT_TARGET);
		    }
		    else {
		        // Note: EventTarget is not available in all browsers,
		        // if it's not available, we instead patch the APIs in the IDL that inherit from EventTarget
		        apis = NO_EVENT_TARGET;
		    }
		    for (var i = 0; i < apis.length; i++) {
		        var type = _global[apis[i]];
		        utils_1.patchEventTargetMethods(type && type.prototype);
		    }
		}
		exports.eventTargetPatch = eventTargetPatch;


	/***/ },
	/* 3 */
	/***/ function(module, exports) {

		/* WEBPACK VAR INJECTION */(function(global) {/**
		 * Suppress closure compiler errors about unknown 'process' variable
		 * @fileoverview
		 * @suppress {undefinedVars}
		 */
		"use strict";
		exports.zoneSymbol = Zone['__symbol__'];
		var _global = typeof window == 'undefined' ? global : window;
		function bindArguments(args, source) {
		    for (var i = args.length - 1; i >= 0; i--) {
		        if (typeof args[i] === 'function') {
		            args[i] = Zone.current.wrap(args[i], source + '_' + i);
		        }
		    }
		    return args;
		}
		exports.bindArguments = bindArguments;
		;
		function patchPrototype(prototype, fnNames) {
		    var source = prototype.constructor['name'];
		    var _loop_1 = function(i) {
		        var name_1 = fnNames[i];
		        var delegate = prototype[name_1];
		        if (delegate) {
		            prototype[name_1] = (function (delegate) {
		                return function () {
		                    return delegate.apply(this, bindArguments(arguments, source + '.' + name_1));
		                };
		            })(delegate);
		        }
		    };
		    for (var i = 0; i < fnNames.length; i++) {
		        _loop_1(i);
		    }
		}
		exports.patchPrototype = patchPrototype;
		;
		exports.isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);
		exports.isNode = (typeof process !== 'undefined' && {}.toString.call(process) === '[object process]');
		exports.isBrowser = !exports.isNode && !exports.isWebWorker && !!(typeof window !== 'undefined' && window['HTMLElement']);
		function patchProperty(obj, prop) {
		    var desc = Object.getOwnPropertyDescriptor(obj, prop) || {
		        enumerable: true,
		        configurable: true
		    };
		    // A property descriptor cannot have getter/setter and be writable
		    // deleting the writable and value properties avoids this error:
		    //
		    // TypeError: property descriptors must not specify a value or be writable when a
		    // getter or setter has been specified
		    delete desc.writable;
		    delete desc.value;
		    // substr(2) cuz 'onclick' -> 'click', etc
		    var eventName = prop.substr(2);
		    var _prop = '_' + prop;
		    desc.set = function (fn) {
		        if (this[_prop]) {
		            this.removeEventListener(eventName, this[_prop]);
		        }
		        if (typeof fn === 'function') {
		            var wrapFn = function (event) {
		                var result;
		                result = fn.apply(this, arguments);
		                if (result != undefined && !result)
		                    event.preventDefault();
		            };
		            this[_prop] = wrapFn;
		            this.addEventListener(eventName, wrapFn, false);
		        }
		        else {
		            this[_prop] = null;
		        }
		    };
		    desc.get = function () {
		        return this[_prop];
		    };
		    Object.defineProperty(obj, prop, desc);
		}
		exports.patchProperty = patchProperty;
		;
		function patchOnProperties(obj, properties) {
		    var onProperties = [];
		    for (var prop in obj) {
		        if (prop.substr(0, 2) == 'on') {
		            onProperties.push(prop);
		        }
		    }
		    for (var j = 0; j < onProperties.length; j++) {
		        patchProperty(obj, onProperties[j]);
		    }
		    if (properties) {
		        for (var i = 0; i < properties.length; i++) {
		            patchProperty(obj, 'on' + properties[i]);
		        }
		    }
		}
		exports.patchOnProperties = patchOnProperties;
		;
		var EVENT_TASKS = exports.zoneSymbol('eventTasks');
		var ADD_EVENT_LISTENER = 'addEventListener';
		var REMOVE_EVENT_LISTENER = 'removeEventListener';
		var SYMBOL_ADD_EVENT_LISTENER = exports.zoneSymbol(ADD_EVENT_LISTENER);
		var SYMBOL_REMOVE_EVENT_LISTENER = exports.zoneSymbol(REMOVE_EVENT_LISTENER);
		function findExistingRegisteredTask(target, handler, name, capture, remove) {
		    var eventTasks = target[EVENT_TASKS];
		    if (eventTasks) {
		        for (var i = 0; i < eventTasks.length; i++) {
		            var eventTask = eventTasks[i];
		            var data = eventTask.data;
		            if (data.handler === handler
		                && data.useCapturing === capture
		                && data.eventName === name) {
		                if (remove) {
		                    eventTasks.splice(i, 1);
		                }
		                return eventTask;
		            }
		        }
		    }
		    return null;
		}
		function attachRegisteredEvent(target, eventTask) {
		    var eventTasks = target[EVENT_TASKS];
		    if (!eventTasks) {
		        eventTasks = target[EVENT_TASKS] = [];
		    }
		    eventTasks.push(eventTask);
		}
		function scheduleEventListener(eventTask) {
		    var meta = eventTask.data;
		    attachRegisteredEvent(meta.target, eventTask);
		    return meta.target[SYMBOL_ADD_EVENT_LISTENER](meta.eventName, eventTask.invoke, meta.useCapturing);
		}
		function cancelEventListener(eventTask) {
		    var meta = eventTask.data;
		    findExistingRegisteredTask(meta.target, eventTask.invoke, meta.eventName, meta.useCapturing, true);
		    meta.target[SYMBOL_REMOVE_EVENT_LISTENER](meta.eventName, eventTask.invoke, meta.useCapturing);
		}
		function zoneAwareAddEventListener(self, args) {
		    var eventName = args[0];
		    var handler = args[1];
		    var useCapturing = args[2] || false;
		    // - Inside a Web Worker, `this` is undefined, the context is `global`
		    // - When `addEventListener` is called on the global context in strict mode, `this` is undefined
		    // see https://github.com/angular/zone.js/issues/190
		    var target = self || _global;
		    var delegate = null;
		    if (typeof handler == 'function') {
		        delegate = handler;
		    }
		    else if (handler && handler.handleEvent) {
		        delegate = function (event) { return handler.handleEvent(event); };
		    }
		    var validZoneHandler = false;
		    try {
		        // In cross site contexts (such as WebDriver frameworks like Selenium),
		        // accessing the handler object here will cause an exception to be thrown which
		        // will fail tests prematurely.
		        validZoneHandler = handler && handler.toString() === "[object FunctionWrapper]";
		    }
		    catch (e) {
		        // Returning nothing here is fine, because objects in a cross-site context are unusable
		        return;
		    }
		    // Ignore special listeners of IE11 & Edge dev tools, see https://github.com/angular/zone.js/issues/150
		    if (!delegate || validZoneHandler) {
		        return target[SYMBOL_ADD_EVENT_LISTENER](eventName, handler, useCapturing);
		    }
		    var eventTask = findExistingRegisteredTask(target, handler, eventName, useCapturing, false);
		    if (eventTask) {
		        // we already registered, so this will have noop.
		        return target[SYMBOL_ADD_EVENT_LISTENER](eventName, eventTask.invoke, useCapturing);
		    }
		    var zone = Zone.current;
		    var source = target.constructor['name'] + '.addEventListener:' + eventName;
		    var data = {
		        target: target,
		        eventName: eventName,
		        name: eventName,
		        useCapturing: useCapturing,
		        handler: handler
		    };
		    zone.scheduleEventTask(source, delegate, data, scheduleEventListener, cancelEventListener);
		}
		function zoneAwareRemoveEventListener(self, args) {
		    var eventName = args[0];
		    var handler = args[1];
		    var useCapturing = args[2] || false;
		    // - Inside a Web Worker, `this` is undefined, the context is `global`
		    // - When `addEventListener` is called on the global context in strict mode, `this` is undefined
		    // see https://github.com/angular/zone.js/issues/190
		    var target = self || _global;
		    var eventTask = findExistingRegisteredTask(target, handler, eventName, useCapturing, true);
		    if (eventTask) {
		        eventTask.zone.cancelTask(eventTask);
		    }
		    else {
		        target[SYMBOL_REMOVE_EVENT_LISTENER](eventName, handler, useCapturing);
		    }
		}
		function patchEventTargetMethods(obj) {
		    if (obj && obj.addEventListener) {
		        patchMethod(obj, ADD_EVENT_LISTENER, function () { return zoneAwareAddEventListener; });
		        patchMethod(obj, REMOVE_EVENT_LISTENER, function () { return zoneAwareRemoveEventListener; });
		        return true;
		    }
		    else {
		        return false;
		    }
		}
		exports.patchEventTargetMethods = patchEventTargetMethods;
		;
		var originalInstanceKey = exports.zoneSymbol('originalInstance');
		// wrap some native API on `window`
		function patchClass(className) {
		    var OriginalClass = _global[className];
		    if (!OriginalClass)
		        return;
		    _global[className] = function () {
		        var a = bindArguments(arguments, className);
		        switch (a.length) {
		            case 0:
		                this[originalInstanceKey] = new OriginalClass();
		                break;
		            case 1:
		                this[originalInstanceKey] = new OriginalClass(a[0]);
		                break;
		            case 2:
		                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);
		                break;
		            case 3:
		                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);
		                break;
		            case 4:
		                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);
		                break;
		            default: throw new Error('Arg list too long.');
		        }
		    };
		    var instance = new OriginalClass(function () { });
		    var prop;
		    for (prop in instance) {
		        (function (prop) {
		            if (typeof instance[prop] === 'function') {
		                _global[className].prototype[prop] = function () {
		                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);
		                };
		            }
		            else {
		                Object.defineProperty(_global[className].prototype, prop, {
		                    set: function (fn) {
		                        if (typeof fn === 'function') {
		                            this[originalInstanceKey][prop] = Zone.current.wrap(fn, className + '.' + prop);
		                        }
		                        else {
		                            this[originalInstanceKey][prop] = fn;
		                        }
		                    },
		                    get: function () {
		                        return this[originalInstanceKey][prop];
		                    }
		                });
		            }
		        }(prop));
		    }
		    for (prop in OriginalClass) {
		        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {
		            _global[className][prop] = OriginalClass[prop];
		        }
		    }
		}
		exports.patchClass = patchClass;
		;
		function createNamedFn(name, delegate) {
		    try {
		        return (Function('f', "return function " + name + "(){return f(this, arguments)}"))(delegate);
		    }
		    catch (e) {
		        // if we fail, we must be CSP, just return delegate.
		        return function () {
		            return delegate(this, arguments);
		        };
		    }
		}
		exports.createNamedFn = createNamedFn;
		function patchMethod(target, name, patchFn) {
		    var proto = target;
		    while (proto && !proto.hasOwnProperty(name)) {
		        proto = Object.getPrototypeOf(proto);
		    }
		    if (!proto && target[name]) {
		        // somehow we did not find it, but we can see it. This happens on IE for Window properties.
		        proto = target;
		    }
		    var delegateName = exports.zoneSymbol(name);
		    var delegate;
		    if (proto && !(delegate = proto[delegateName])) {
		        delegate = proto[delegateName] = proto[name];
		        proto[name] = createNamedFn(name, patchFn(delegate, delegateName, name));
		    }
		    return delegate;
		}
		exports.patchMethod = patchMethod;

		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		var utils_1 = __webpack_require__(3);
		/*
		 * This is necessary for Chrome and Chrome mobile, to enable
		 * things like redefining `createdCallback` on an element.
		 */
		var _defineProperty = Object.defineProperty;
		var _getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
		var _create = Object.create;
		var unconfigurablesKey = utils_1.zoneSymbol('unconfigurables');
		function propertyPatch() {
		    Object.defineProperty = function (obj, prop, desc) {
		        if (isUnconfigurable(obj, prop)) {
		            throw new TypeError('Cannot assign to read only property \'' + prop + '\' of ' + obj);
		        }
		        if (prop !== 'prototype') {
		            desc = rewriteDescriptor(obj, prop, desc);
		        }
		        return _defineProperty(obj, prop, desc);
		    };
		    Object.defineProperties = function (obj, props) {
		        Object.keys(props).forEach(function (prop) {
		            Object.defineProperty(obj, prop, props[prop]);
		        });
		        return obj;
		    };
		    Object.create = function (obj, proto) {
		        if (typeof proto === 'object') {
		            Object.keys(proto).forEach(function (prop) {
		                proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);
		            });
		        }
		        return _create(obj, proto);
		    };
		    Object.getOwnPropertyDescriptor = function (obj, prop) {
		        var desc = _getOwnPropertyDescriptor(obj, prop);
		        if (isUnconfigurable(obj, prop)) {
		            desc.configurable = false;
		        }
		        return desc;
		    };
		}
		exports.propertyPatch = propertyPatch;
		;
		function _redefineProperty(obj, prop, desc) {
		    desc = rewriteDescriptor(obj, prop, desc);
		    return _defineProperty(obj, prop, desc);
		}
		exports._redefineProperty = _redefineProperty;
		;
		function isUnconfigurable(obj, prop) {
		    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];
		}
		function rewriteDescriptor(obj, prop, desc) {
		    desc.configurable = true;
		    if (!desc.configurable) {
		        if (!obj[unconfigurablesKey]) {
		            _defineProperty(obj, unconfigurablesKey, { writable: true, value: {} });
		        }
		        obj[unconfigurablesKey][prop] = true;
		    }
		    return desc;
		}


	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		var define_property_1 = __webpack_require__(4);
		var utils_1 = __webpack_require__(3);
		function registerElementPatch(_global) {
		    if (!utils_1.isBrowser || !('registerElement' in _global.document)) {
		        return;
		    }
		    var _registerElement = document.registerElement;
		    var callbacks = [
		        'createdCallback',
		        'attachedCallback',
		        'detachedCallback',
		        'attributeChangedCallback'
		    ];
		    document.registerElement = function (name, opts) {
		        if (opts && opts.prototype) {
		            callbacks.forEach(function (callback) {
		                var source = 'Document.registerElement::' + callback;
		                if (opts.prototype.hasOwnProperty(callback)) {
		                    var descriptor = Object.getOwnPropertyDescriptor(opts.prototype, callback);
		                    if (descriptor && descriptor.value) {
		                        descriptor.value = Zone.current.wrap(descriptor.value, source);
		                        define_property_1._redefineProperty(opts.prototype, callback, descriptor);
		                    }
		                    else {
		                        opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);
		                    }
		                }
		                else if (opts.prototype[callback]) {
		                    opts.prototype[callback] = Zone.current.wrap(opts.prototype[callback], source);
		                }
		            });
		        }
		        return _registerElement.apply(document, [name, opts]);
		    };
		}
		exports.registerElementPatch = registerElementPatch;


	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		var webSocketPatch = __webpack_require__(7);
		var utils_1 = __webpack_require__(3);
		var eventNames = 'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'.split(' ');
		function propertyDescriptorPatch(_global) {
		    if (utils_1.isNode) {
		        return;
		    }
		    var supportsWebSocket = typeof WebSocket !== 'undefined';
		    if (canPatchViaPropertyDescriptor()) {
		        // for browsers that we can patch the descriptor:  Chrome & Firefox
		        if (utils_1.isBrowser) {
		            utils_1.patchOnProperties(HTMLElement.prototype, eventNames);
		        }
		        utils_1.patchOnProperties(XMLHttpRequest.prototype, null);
		        if (typeof IDBIndex !== 'undefined') {
		            utils_1.patchOnProperties(IDBIndex.prototype, null);
		            utils_1.patchOnProperties(IDBRequest.prototype, null);
		            utils_1.patchOnProperties(IDBOpenDBRequest.prototype, null);
		            utils_1.patchOnProperties(IDBDatabase.prototype, null);
		            utils_1.patchOnProperties(IDBTransaction.prototype, null);
		            utils_1.patchOnProperties(IDBCursor.prototype, null);
		        }
		        if (supportsWebSocket) {
		            utils_1.patchOnProperties(WebSocket.prototype, null);
		        }
		    }
		    else {
		        // Safari, Android browsers (Jelly Bean)
		        patchViaCapturingAllTheEvents();
		        utils_1.patchClass('XMLHttpRequest');
		        if (supportsWebSocket) {
		            webSocketPatch.apply(_global);
		        }
		    }
		}
		exports.propertyDescriptorPatch = propertyDescriptorPatch;
		function canPatchViaPropertyDescriptor() {
		    if (utils_1.isBrowser && !Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick')
		        && typeof Element !== 'undefined') {
		        // WebKit https://bugs.webkit.org/show_bug.cgi?id=134364
		        // IDL interface attributes are not configurable
		        var desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');
		        if (desc && !desc.configurable)
		            return false;
		    }
		    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {
		        get: function () {
		            return true;
		        }
		    });
		    var req = new XMLHttpRequest();
		    var result = !!req.onreadystatechange;
		    Object.defineProperty(XMLHttpRequest.prototype, 'onreadystatechange', {});
		    return result;
		}
		;
		var unboundKey = utils_1.zoneSymbol('unbound');
		// Whenever any eventListener fires, we check the eventListener target and all parents
		// for `onwhatever` properties and replace them with zone-bound functions
		// - Chrome (for now)
		function patchViaCapturingAllTheEvents() {
		    var _loop_1 = function(i) {
		        var property = eventNames[i];
		        var onproperty = 'on' + property;
		        document.addEventListener(property, function (event) {
		            var elt = event.target, bound, source;
		            if (elt) {
		                source = elt.constructor['name'] + '.' + onproperty;
		            }
		            else {
		                source = 'unknown.' + onproperty;
		            }
		            while (elt) {
		                if (elt[onproperty] && !elt[onproperty][unboundKey]) {
		                    bound = Zone.current.wrap(elt[onproperty], source);
		                    bound[unboundKey] = elt[onproperty];
		                    elt[onproperty] = bound;
		                }
		                elt = elt.parentElement;
		            }
		        }, true);
		    };
		    for (var i = 0; i < eventNames.length; i++) {
		        _loop_1(i);
		    }
		    ;
		}
		;


	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		var utils_1 = __webpack_require__(3);
		// we have to patch the instance since the proto is non-configurable
		function apply(_global) {
		    var WS = _global.WebSocket;
		    // On Safari window.EventTarget doesn't exist so need to patch WS add/removeEventListener
		    // On older Chrome, no need since EventTarget was already patched
		    if (!_global.EventTarget) {
		        utils_1.patchEventTargetMethods(WS.prototype);
		    }
		    _global.WebSocket = function (a, b) {
		        var socket = arguments.length > 1 ? new WS(a, b) : new WS(a);
		        var proxySocket;
		        // Safari 7.0 has non-configurable own 'onmessage' and friends properties on the socket instance
		        var onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');
		        if (onmessageDesc && onmessageDesc.configurable === false) {
		            proxySocket = Object.create(socket);
		            ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function (propName) {
		                proxySocket[propName] = function () {
		                    return socket[propName].apply(socket, arguments);
		                };
		            });
		        }
		        else {
		            // we can patch the real socket
		            proxySocket = socket;
		        }
		        utils_1.patchOnProperties(proxySocket, ['close', 'error', 'message', 'open']);
		        return proxySocket;
		    };
		    for (var prop in WS) {
		        _global.WebSocket[prop] = WS[prop];
		    }
		}
		exports.apply = apply;


	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		var utils_1 = __webpack_require__(3);
		function patchTimer(window, setName, cancelName, nameSuffix) {
		    var setNative = null;
		    var clearNative = null;
		    setName += nameSuffix;
		    cancelName += nameSuffix;
		    function scheduleTask(task) {
		        var data = task.data;
		        data.args[0] = task.invoke;
		        data.handleId = setNative.apply(window, data.args);
		        return task;
		    }
		    function clearTask(task) {
		        return clearNative(task.data.handleId);
		    }
		    setNative = utils_1.patchMethod(window, setName, function (delegate) { return function (self, args) {
		        if (typeof args[0] === 'function') {
		            var zone = Zone.current;
		            var options = {
		                handleId: null,
		                isPeriodic: nameSuffix === 'Interval',
		                delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 : null,
		                args: args
		            };
		            return zone.scheduleMacroTask(setName, args[0], options, scheduleTask, clearTask);
		        }
		        else {
		            // cause an error by calling it directly.
		            return delegate.apply(window, args);
		        }
		    }; });
		    clearNative = utils_1.patchMethod(window, cancelName, function (delegate) { return function (self, args) {
		        var task = args[0];
		        if (task && typeof task.type === 'string') {
		            if (task.cancelFn && task.data.isPeriodic || task.runCount === 0) {
		                // Do not cancel already canceled functions
		                task.zone.cancelTask(task);
		            }
		        }
		        else {
		            // cause an error by calling it directly.
		            delegate.apply(window, args);
		        }
		    }; });
		}
		exports.patchTimer = patchTimer;


	/***/ }
	/******/ ]);
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(698)))

/***/ },
/* 698 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 699 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/*! *****************************************************************************
	Copyright (C) Microsoft. All rights reserved.
	Licensed under the Apache License, Version 2.0 (the "License"); you may not use
	this file except in compliance with the License. You may obtain a copy of the
	License at http://www.apache.org/licenses/LICENSE-2.0

	THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
	WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
	MERCHANTABLITY OR NON-INFRINGEMENT.

	See the Apache Version 2.0 License for specific language governing permissions
	and limitations under the License.
	***************************************************************************** */
	var Reflect;
	(function (Reflect) {
	    "use strict";
	    // Load global or shim versions of Map, Set, and WeakMap
	    var functionPrototype = Object.getPrototypeOf(Function);
	    var _Map = typeof Map === "function" ? Map : CreateMapPolyfill();
	    var _Set = typeof Set === "function" ? Set : CreateSetPolyfill();
	    var _WeakMap = typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
	    // [[Metadata]] internal slot
	    var __Metadata__ = new _WeakMap();
	    /**
	      * Applies a set of decorators to a property of a target object.
	      * @param decorators An array of decorators.
	      * @param target The target object.
	      * @param targetKey (Optional) The property key to decorate.
	      * @param targetDescriptor (Optional) The property descriptor for the target key
	      * @remarks Decorators are applied in reverse order.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     C = Reflect.decorate(decoratorsArray, C);
	      *
	      *     // property (on constructor)
	      *     Reflect.decorate(decoratorsArray, C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     Reflect.decorate(decoratorsArray, C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     Object.defineProperty(C, "staticMethod",
	      *         Reflect.decorate(decoratorsArray, C, "staticMethod",
	      *             Object.getOwnPropertyDescriptor(C, "staticMethod")));
	      *
	      *     // method (on prototype)
	      *     Object.defineProperty(C.prototype, "method",
	      *         Reflect.decorate(decoratorsArray, C.prototype, "method",
	      *             Object.getOwnPropertyDescriptor(C.prototype, "method")));
	      *
	      */
	    function decorate(decorators, target, targetKey, targetDescriptor) {
	        if (!IsUndefined(targetDescriptor)) {
	            if (!IsArray(decorators)) {
	                throw new TypeError();
	            }
	            else if (!IsObject(target)) {
	                throw new TypeError();
	            }
	            else if (IsUndefined(targetKey)) {
	                throw new TypeError();
	            }
	            else if (!IsObject(targetDescriptor)) {
	                throw new TypeError();
	            }
	            targetKey = ToPropertyKey(targetKey);
	            return DecoratePropertyWithDescriptor(decorators, target, targetKey, targetDescriptor);
	        }
	        else if (!IsUndefined(targetKey)) {
	            if (!IsArray(decorators)) {
	                throw new TypeError();
	            }
	            else if (!IsObject(target)) {
	                throw new TypeError();
	            }
	            targetKey = ToPropertyKey(targetKey);
	            return DecoratePropertyWithoutDescriptor(decorators, target, targetKey);
	        }
	        else {
	            if (!IsArray(decorators)) {
	                throw new TypeError();
	            }
	            else if (!IsConstructor(target)) {
	                throw new TypeError();
	            }
	            return DecorateConstructor(decorators, target);
	        }
	    }
	    Reflect.decorate = decorate;
	    /**
	      * A default metadata decorator factory that can be used on a class, class member, or parameter.
	      * @param metadataKey The key for the metadata entry.
	      * @param metadataValue The value for the metadata entry.
	      * @returns A decorator function.
	      * @remarks
	      * If `metadataKey` is already defined for the target and target key, the
	      * metadataValue for that key will be overwritten.
	      * @example
	      *
	      *     // constructor
	      *     @Reflect.metadata(key, value)
	      *     class C {
	      *     }
	      *
	      *     // property (on constructor, TypeScript only)
	      *     class C {
	      *         @Reflect.metadata(key, value)
	      *         static staticProperty;
	      *     }
	      *
	      *     // property (on prototype, TypeScript only)
	      *     class C {
	      *         @Reflect.metadata(key, value)
	      *         property;
	      *     }
	      *
	      *     // method (on constructor)
	      *     class C {
	      *         @Reflect.metadata(key, value)
	      *         static staticMethod() { }
	      *     }
	      *
	      *     // method (on prototype)
	      *     class C {
	      *         @Reflect.metadata(key, value)
	      *         method() { }
	      *     }
	      *
	      */
	    function metadata(metadataKey, metadataValue) {
	        function decorator(target, targetKey) {
	            if (!IsUndefined(targetKey)) {
	                if (!IsObject(target)) {
	                    throw new TypeError();
	                }
	                targetKey = ToPropertyKey(targetKey);
	                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);
	            }
	            else {
	                if (!IsConstructor(target)) {
	                    throw new TypeError();
	                }
	                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, /*targetKey*/ undefined);
	            }
	        }
	        return decorator;
	    }
	    Reflect.metadata = metadata;
	    /**
	      * Define a unique metadata entry on the target.
	      * @param metadataKey A key used to store and retrieve metadata.
	      * @param metadataValue A value that contains attached metadata.
	      * @param target The target object on which to define metadata.
	      * @param targetKey (Optional) The property key for the target.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     Reflect.defineMetadata("custom:annotation", options, C);
	      *
	      *     // property (on constructor)
	      *     Reflect.defineMetadata("custom:annotation", options, C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     Reflect.defineMetadata("custom:annotation", options, C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     Reflect.defineMetadata("custom:annotation", options, C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     Reflect.defineMetadata("custom:annotation", options, C.prototype, "method");
	      *
	      *     // decorator factory as metadata-producing annotation.
	      *     function MyAnnotation(options): Decorator {
	      *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
	      *     }
	      *
	      */
	    function defineMetadata(metadataKey, metadataValue, target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);
	    }
	    Reflect.defineMetadata = defineMetadata;
	    /**
	      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
	      * @param metadataKey A key used to store and retrieve metadata.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.hasMetadata("custom:annotation", C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.hasMetadata("custom:annotation", C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.hasMetadata("custom:annotation", C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.hasMetadata("custom:annotation", C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.hasMetadata("custom:annotation", C.prototype, "method");
	      *
	      */
	    function hasMetadata(metadataKey, target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryHasMetadata(metadataKey, target, targetKey);
	    }
	    Reflect.hasMetadata = hasMetadata;
	    /**
	      * Gets a value indicating whether the target object has the provided metadata key defined.
	      * @param metadataKey A key used to store and retrieve metadata.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.hasOwnMetadata("custom:annotation", C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.hasOwnMetadata("custom:annotation", C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.hasOwnMetadata("custom:annotation", C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.hasOwnMetadata("custom:annotation", C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.hasOwnMetadata("custom:annotation", C.prototype, "method");
	      *
	      */
	    function hasOwnMetadata(metadataKey, target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);
	    }
	    Reflect.hasOwnMetadata = hasOwnMetadata;
	    /**
	      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
	      * @param metadataKey A key used to store and retrieve metadata.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.getMetadata("custom:annotation", C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.getMetadata("custom:annotation", C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.getMetadata("custom:annotation", C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.getMetadata("custom:annotation", C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.getMetadata("custom:annotation", C.prototype, "method");
	      *
	      */
	    function getMetadata(metadataKey, target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryGetMetadata(metadataKey, target, targetKey);
	    }
	    Reflect.getMetadata = getMetadata;
	    /**
	      * Gets the metadata value for the provided metadata key on the target object.
	      * @param metadataKey A key used to store and retrieve metadata.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.getOwnMetadata("custom:annotation", C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.getOwnMetadata("custom:annotation", C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.getOwnMetadata("custom:annotation", C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.getOwnMetadata("custom:annotation", C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.getOwnMetadata("custom:annotation", C.prototype, "method");
	      *
	      */
	    function getOwnMetadata(metadataKey, target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);
	    }
	    Reflect.getOwnMetadata = getOwnMetadata;
	    /**
	      * Gets the metadata keys defined on the target object or its prototype chain.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns An array of unique metadata keys.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.getMetadataKeys(C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.getMetadataKeys(C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.getMetadataKeys(C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.getMetadataKeys(C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.getMetadataKeys(C.prototype, "method");
	      *
	      */
	    function getMetadataKeys(target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryMetadataKeys(target, targetKey);
	    }
	    Reflect.getMetadataKeys = getMetadataKeys;
	    /**
	      * Gets the unique metadata keys defined on the target object.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns An array of unique metadata keys.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.getOwnMetadataKeys(C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.getOwnMetadataKeys(C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.getOwnMetadataKeys(C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.getOwnMetadataKeys(C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.getOwnMetadataKeys(C.prototype, "method");
	      *
	      */
	    function getOwnMetadataKeys(target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        return OrdinaryOwnMetadataKeys(target, targetKey);
	    }
	    Reflect.getOwnMetadataKeys = getOwnMetadataKeys;
	    /**
	      * Deletes the metadata entry from the target object with the provided key.
	      * @param metadataKey A key used to store and retrieve metadata.
	      * @param target The target object on which the metadata is defined.
	      * @param targetKey (Optional) The property key for the target.
	      * @returns `true` if the metadata entry was found and deleted; otherwise, false.
	      * @example
	      *
	      *     class C {
	      *         // property declarations are not part of ES6, though they are valid in TypeScript:
	      *         // static staticProperty;
	      *         // property;
	      *
	      *         constructor(p) { }
	      *         static staticMethod(p) { }
	      *         method(p) { }
	      *     }
	      *
	      *     // constructor
	      *     result = Reflect.deleteMetadata("custom:annotation", C);
	      *
	      *     // property (on constructor)
	      *     result = Reflect.deleteMetadata("custom:annotation", C, "staticProperty");
	      *
	      *     // property (on prototype)
	      *     result = Reflect.deleteMetadata("custom:annotation", C.prototype, "property");
	      *
	      *     // method (on constructor)
	      *     result = Reflect.deleteMetadata("custom:annotation", C, "staticMethod");
	      *
	      *     // method (on prototype)
	      *     result = Reflect.deleteMetadata("custom:annotation", C.prototype, "method");
	      *
	      */
	    function deleteMetadata(metadataKey, target, targetKey) {
	        if (!IsObject(target)) {
	            throw new TypeError();
	        }
	        else if (!IsUndefined(targetKey)) {
	            targetKey = ToPropertyKey(targetKey);
	        }
	        // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#deletemetadata-metadatakey-p-
	        var metadataMap = GetOrCreateMetadataMap(target, targetKey, /*create*/ false);
	        if (IsUndefined(metadataMap)) {
	            return false;
	        }
	        if (!metadataMap.delete(metadataKey)) {
	            return false;
	        }
	        if (metadataMap.size > 0) {
	            return true;
	        }
	        var targetMetadata = __Metadata__.get(target);
	        targetMetadata.delete(targetKey);
	        if (targetMetadata.size > 0) {
	            return true;
	        }
	        __Metadata__.delete(target);
	        return true;
	    }
	    Reflect.deleteMetadata = deleteMetadata;
	    function DecorateConstructor(decorators, target) {
	        for (var i = decorators.length - 1; i >= 0; --i) {
	            var decorator = decorators[i];
	            var decorated = decorator(target);
	            if (!IsUndefined(decorated)) {
	                if (!IsConstructor(decorated)) {
	                    throw new TypeError();
	                }
	                target = decorated;
	            }
	        }
	        return target;
	    }
	    function DecoratePropertyWithDescriptor(decorators, target, propertyKey, descriptor) {
	        for (var i = decorators.length - 1; i >= 0; --i) {
	            var decorator = decorators[i];
	            var decorated = decorator(target, propertyKey, descriptor);
	            if (!IsUndefined(decorated)) {
	                if (!IsObject(decorated)) {
	                    throw new TypeError();
	                }
	                descriptor = decorated;
	            }
	        }
	        return descriptor;
	    }
	    function DecoratePropertyWithoutDescriptor(decorators, target, propertyKey) {
	        for (var i = decorators.length - 1; i >= 0; --i) {
	            var decorator = decorators[i];
	            decorator(target, propertyKey);
	        }
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#getorcreatemetadatamap--o-p-create-
	    function GetOrCreateMetadataMap(target, targetKey, create) {
	        var targetMetadata = __Metadata__.get(target);
	        if (!targetMetadata) {
	            if (!create) {
	                return undefined;
	            }
	            targetMetadata = new _Map();
	            __Metadata__.set(target, targetMetadata);
	        }
	        var keyMetadata = targetMetadata.get(targetKey);
	        if (!keyMetadata) {
	            if (!create) {
	                return undefined;
	            }
	            keyMetadata = new _Map();
	            targetMetadata.set(targetKey, keyMetadata);
	        }
	        return keyMetadata;
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasmetadata--metadatakey-o-p-
	    function OrdinaryHasMetadata(MetadataKey, O, P) {
	        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
	        if (hasOwn) {
	            return true;
	        }
	        var parent = GetPrototypeOf(O);
	        if (parent !== null) {
	            return OrdinaryHasMetadata(MetadataKey, parent, P);
	        }
	        return false;
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryhasownmetadata--metadatakey-o-p-
	    function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
	        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);
	        if (metadataMap === undefined) {
	            return false;
	        }
	        return Boolean(metadataMap.has(MetadataKey));
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetmetadata--metadatakey-o-p-
	    function OrdinaryGetMetadata(MetadataKey, O, P) {
	        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
	        if (hasOwn) {
	            return OrdinaryGetOwnMetadata(MetadataKey, O, P);
	        }
	        var parent = GetPrototypeOf(O);
	        if (parent !== null) {
	            return OrdinaryGetMetadata(MetadataKey, parent, P);
	        }
	        return undefined;
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarygetownmetadata--metadatakey-o-p-
	    function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
	        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ false);
	        if (metadataMap === undefined) {
	            return undefined;
	        }
	        return metadataMap.get(MetadataKey);
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarydefineownmetadata--metadatakey-metadatavalue-o-p-
	    function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
	        var metadataMap = GetOrCreateMetadataMap(O, P, /*create*/ true);
	        metadataMap.set(MetadataKey, MetadataValue);
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinarymetadatakeys--o-p-
	    function OrdinaryMetadataKeys(O, P) {
	        var ownKeys = OrdinaryOwnMetadataKeys(O, P);
	        var parent = GetPrototypeOf(O);
	        if (parent === null) {
	            return ownKeys;
	        }
	        var parentKeys = OrdinaryMetadataKeys(parent, P);
	        if (parentKeys.length <= 0) {
	            return ownKeys;
	        }
	        if (ownKeys.length <= 0) {
	            return parentKeys;
	        }
	        var set = new _Set();
	        var keys = [];
	        for (var _i = 0; _i < ownKeys.length; _i++) {
	            var key = ownKeys[_i];
	            var hasKey = set.has(key);
	            if (!hasKey) {
	                set.add(key);
	                keys.push(key);
	            }
	        }
	        for (var _a = 0; _a < parentKeys.length; _a++) {
	            var key = parentKeys[_a];
	            var hasKey = set.has(key);
	            if (!hasKey) {
	                set.add(key);
	                keys.push(key);
	            }
	        }
	        return keys;
	    }
	    // https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md#ordinaryownmetadatakeys--o-p-
	    function OrdinaryOwnMetadataKeys(target, targetKey) {
	        var metadataMap = GetOrCreateMetadataMap(target, targetKey, /*create*/ false);
	        var keys = [];
	        if (metadataMap) {
	            metadataMap.forEach(function (_, key) { return keys.push(key); });
	        }
	        return keys;
	    }
	    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-undefined-type
	    function IsUndefined(x) {
	        return x === undefined;
	    }
	    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray
	    function IsArray(x) {
	        return Array.isArray(x);
	    }
	    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object-type
	    function IsObject(x) {
	        return typeof x === "object" ? x !== null : typeof x === "function";
	    }
	    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor
	    function IsConstructor(x) {
	        return typeof x === "function";
	    }
	    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-language-types-symbol-type
	    function IsSymbol(x) {
	        return typeof x === "symbol";
	    }
	    // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey
	    function ToPropertyKey(value) {
	        if (IsSymbol(value)) {
	            return value;
	        }
	        return String(value);
	    }
	    function GetPrototypeOf(O) {
	        var proto = Object.getPrototypeOf(O);
	        if (typeof O !== "function" || O === functionPrototype) {
	            return proto;
	        }
	        // TypeScript doesn't set __proto__ in ES5, as it's non-standard. 
	        // Try to determine the superclass constructor. Compatible implementations
	        // must either set __proto__ on a subclass constructor to the superclass constructor,
	        // or ensure each class has a valid `constructor` property on its prototype that
	        // points back to the constructor.
	        // If this is not the same as Function.[[Prototype]], then this is definately inherited.
	        // This is the case when in ES6 or when using __proto__ in a compatible browser.
	        if (proto !== functionPrototype) {
	            return proto;
	        }
	        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
	        var prototype = O.prototype;
	        var prototypeProto = Object.getPrototypeOf(prototype);
	        if (prototypeProto == null || prototypeProto === Object.prototype) {
	            return proto;
	        }
	        // if the constructor was not a function, then we cannot determine the heritage.
	        var constructor = prototypeProto.constructor;
	        if (typeof constructor !== "function") {
	            return proto;
	        }
	        // if we have some kind of self-reference, then we cannot determine the heritage.
	        if (constructor === O) {
	            return proto;
	        }
	        // we have a pretty good guess at the heritage.
	        return constructor;
	    }
	    // naive Map shim
	    function CreateMapPolyfill() {
	        var cacheSentinel = {};
	        function Map() {
	            this._keys = [];
	            this._values = [];
	            this._cache = cacheSentinel;
	        }
	        Map.prototype = {
	            get size() {
	                return this._keys.length;
	            },
	            has: function (key) {
	                if (key === this._cache) {
	                    return true;
	                }
	                if (this._find(key) >= 0) {
	                    this._cache = key;
	                    return true;
	                }
	                return false;
	            },
	            get: function (key) {
	                var index = this._find(key);
	                if (index >= 0) {
	                    this._cache = key;
	                    return this._values[index];
	                }
	                return undefined;
	            },
	            set: function (key, value) {
	                this.delete(key);
	                this._keys.push(key);
	                this._values.push(value);
	                this._cache = key;
	                return this;
	            },
	            delete: function (key) {
	                var index = this._find(key);
	                if (index >= 0) {
	                    this._keys.splice(index, 1);
	                    this._values.splice(index, 1);
	                    this._cache = cacheSentinel;
	                    return true;
	                }
	                return false;
	            },
	            clear: function () {
	                this._keys.length = 0;
	                this._values.length = 0;
	                this._cache = cacheSentinel;
	            },
	            forEach: function (callback, thisArg) {
	                var size = this.size;
	                for (var i = 0; i < size; ++i) {
	                    var key = this._keys[i];
	                    var value = this._values[i];
	                    this._cache = key;
	                    callback.call(this, value, key, this);
	                }
	            },
	            _find: function (key) {
	                var keys = this._keys;
	                var size = keys.length;
	                for (var i = 0; i < size; ++i) {
	                    if (keys[i] === key) {
	                        return i;
	                    }
	                }
	                return -1;
	            }
	        };
	        return Map;
	    }
	    // naive Set shim
	    function CreateSetPolyfill() {
	        var cacheSentinel = {};
	        function Set() {
	            this._map = new _Map();
	        }
	        Set.prototype = {
	            get size() {
	                return this._map.length;
	            },
	            has: function (value) {
	                return this._map.has(value);
	            },
	            add: function (value) {
	                this._map.set(value, value);
	                return this;
	            },
	            delete: function (value) {
	                return this._map.delete(value);
	            },
	            clear: function () {
	                this._map.clear();
	            },
	            forEach: function (callback, thisArg) {
	                this._map.forEach(callback, thisArg);
	            }
	        };
	        return Set;
	    }
	    // naive WeakMap shim
	    function CreateWeakMapPolyfill() {
	        var UUID_SIZE = 16;
	        var isNode = typeof global !== "undefined" && Object.prototype.toString.call(global.process) === '[object process]';
	        var nodeCrypto = isNode && __webpack_require__(700);
	        var hasOwn = Object.prototype.hasOwnProperty;
	        var keys = {};
	        var rootKey = CreateUniqueKey();
	        function WeakMap() {
	            this._key = CreateUniqueKey();
	        }
	        WeakMap.prototype = {
	            has: function (target) {
	                var table = GetOrCreateWeakMapTable(target, /*create*/ false);
	                if (table) {
	                    return this._key in table;
	                }
	                return false;
	            },
	            get: function (target) {
	                var table = GetOrCreateWeakMapTable(target, /*create*/ false);
	                if (table) {
	                    return table[this._key];
	                }
	                return undefined;
	            },
	            set: function (target, value) {
	                var table = GetOrCreateWeakMapTable(target, /*create*/ true);
	                table[this._key] = value;
	                return this;
	            },
	            delete: function (target) {
	                var table = GetOrCreateWeakMapTable(target, /*create*/ false);
	                if (table && this._key in table) {
	                    return delete table[this._key];
	                }
	                return false;
	            },
	            clear: function () {
	                // NOTE: not a real clear, just makes the previous data unreachable
	                this._key = CreateUniqueKey();
	            }
	        };
	        function FillRandomBytes(buffer, size) {
	            for (var i = 0; i < size; ++i) {
	                buffer[i] = Math.random() * 255 | 0;
	            }
	        }
	        function GenRandomBytes(size) {
	            if (nodeCrypto) {
	                var data = nodeCrypto.randomBytes(size);
	                return data;
	            }
	            else if (typeof Uint8Array === "function") {
	                var data = new Uint8Array(size);
	                if (typeof crypto !== "undefined") {
	                    crypto.getRandomValues(data);
	                }
	                else if (typeof msCrypto !== "undefined") {
	                    msCrypto.getRandomValues(data);
	                }
	                else {
	                    FillRandomBytes(data, size);
	                }
	                return data;
	            }
	            else {
	                var data = new Array(size);
	                FillRandomBytes(data, size);
	                return data;
	            }
	        }
	        function CreateUUID() {
	            var data = GenRandomBytes(UUID_SIZE);
	            // mark as random - RFC 4122 § 4.4
	            data[6] = data[6] & 0x4f | 0x40;
	            data[8] = data[8] & 0xbf | 0x80;
	            var result = "";
	            for (var offset = 0; offset < UUID_SIZE; ++offset) {
	                var byte = data[offset];
	                if (offset === 4 || offset === 6 || offset === 8) {
	                    result += "-";
	                }
	                if (byte < 16) {
	                    result += "0";
	                }
	                result += byte.toString(16).toLowerCase();
	            }
	            return result;
	        }
	        function CreateUniqueKey() {
	            var key;
	            do {
	                key = "@@WeakMap@@" + CreateUUID();
	            } while (hasOwn.call(keys, key));
	            keys[key] = true;
	            return key;
	        }
	        function GetOrCreateWeakMapTable(target, create) {
	            if (!hasOwn.call(target, rootKey)) {
	                if (!create) {
	                    return undefined;
	                }
	                Object.defineProperty(target, rootKey, { value: Object.create(null) });
	            }
	            return target[rootKey];
	        }
	        return WeakMap;
	    }
	    // hook global Reflect
	    (function (__global) {
	        if (typeof __global.Reflect !== "undefined") {
	            if (__global.Reflect !== Reflect) {
	                for (var p in Reflect) {
	                    __global.Reflect[p] = Reflect[p];
	                }
	            }
	        }
	        else {
	            __global.Reflect = Reflect;
	        }
	    })(typeof window !== "undefined" ? window :
	        typeof WorkerGlobalScope !== "undefined" ? self :
	            typeof global !== "undefined" ? global :
	                Function("return this;")());
	})(Reflect || (Reflect = {}));
	//# sourceMappingURL=Reflect.js.map
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 700 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var rng = __webpack_require__(705)

	function error () {
	  var m = [].slice.call(arguments).join(' ')
	  throw new Error([
	    m,
	    'we accept pull requests',
	    'http://github.com/dominictarr/crypto-browserify'
	    ].join('\n'))
	}

	exports.createHash = __webpack_require__(707)

	exports.createHmac = __webpack_require__(719)

	exports.randomBytes = function(size, callback) {
	  if (callback && callback.call) {
	    try {
	      callback.call(this, undefined, new Buffer(rng(size)))
	    } catch (err) { callback(err) }
	  } else {
	    return new Buffer(rng(size))
	  }
	}

	function each(a, f) {
	  for(var i in a)
	    f(a[i], i)
	}

	exports.getHashes = function () {
	  return ['sha1', 'sha256', 'sha512', 'md5', 'rmd160']
	}

	var p = __webpack_require__(720)(exports)
	exports.pbkdf2 = p.pbkdf2
	exports.pbkdf2Sync = p.pbkdf2Sync


	// the least I can do is make error messages for the rest of the node.js/crypto api.
	each(['createCredentials'
	, 'createCipher'
	, 'createCipheriv'
	, 'createDecipher'
	, 'createDecipheriv'
	, 'createSign'
	, 'createVerify'
	, 'createDiffieHellman'
	], function (name) {
	  exports[name] = function () {
	    error('sorry,', name, 'is not implemented yet')
	  }
	})

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer))

/***/ },
/* 701 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!
	 * The buffer module from node.js, for the browser.
	 *
	 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
	 * @license  MIT
	 */
	/* eslint-disable no-proto */

	'use strict'

	var base64 = __webpack_require__(702)
	var ieee754 = __webpack_require__(703)
	var isArray = __webpack_require__(704)

	exports.Buffer = Buffer
	exports.SlowBuffer = SlowBuffer
	exports.INSPECT_MAX_BYTES = 50
	Buffer.poolSize = 8192 // not used by this implementation

	var rootParent = {}

	/**
	 * If `Buffer.TYPED_ARRAY_SUPPORT`:
	 *   === true    Use Uint8Array implementation (fastest)
	 *   === false   Use Object implementation (most compatible, even IE6)
	 *
	 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
	 * Opera 11.6+, iOS 4.2+.
	 *
	 * Due to various browser bugs, sometimes the Object implementation will be used even
	 * when the browser supports typed arrays.
	 *
	 * Note:
	 *
	 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
	 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
	 *
	 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
	 *     on objects.
	 *
	 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
	 *
	 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
	 *     incorrect length in some situations.

	 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
	 * get the Object implementation, which is slower but behaves correctly.
	 */
	Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
	  ? global.TYPED_ARRAY_SUPPORT
	  : typedArraySupport()

	function typedArraySupport () {
	  function Bar () {}
	  try {
	    var arr = new Uint8Array(1)
	    arr.foo = function () { return 42 }
	    arr.constructor = Bar
	    return arr.foo() === 42 && // typed array instances can be augmented
	        arr.constructor === Bar && // constructor can be set
	        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
	        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
	  } catch (e) {
	    return false
	  }
	}

	function kMaxLength () {
	  return Buffer.TYPED_ARRAY_SUPPORT
	    ? 0x7fffffff
	    : 0x3fffffff
	}

	/**
	 * Class: Buffer
	 * =============
	 *
	 * The Buffer constructor returns instances of `Uint8Array` that are augmented
	 * with function properties for all the node `Buffer` API functions. We use
	 * `Uint8Array` so that square bracket notation works as expected -- it returns
	 * a single octet.
	 *
	 * By augmenting the instances, we can avoid modifying the `Uint8Array`
	 * prototype.
	 */
	function Buffer (arg) {
	  if (!(this instanceof Buffer)) {
	    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
	    if (arguments.length > 1) return new Buffer(arg, arguments[1])
	    return new Buffer(arg)
	  }

	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    this.length = 0
	    this.parent = undefined
	  }

	  // Common case.
	  if (typeof arg === 'number') {
	    return fromNumber(this, arg)
	  }

	  // Slightly less common case.
	  if (typeof arg === 'string') {
	    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
	  }

	  // Unusual.
	  return fromObject(this, arg)
	}

	function fromNumber (that, length) {
	  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) {
	    for (var i = 0; i < length; i++) {
	      that[i] = 0
	    }
	  }
	  return that
	}

	function fromString (that, string, encoding) {
	  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

	  // Assumption: byteLength() return value is always < kMaxLength.
	  var length = byteLength(string, encoding) | 0
	  that = allocate(that, length)

	  that.write(string, encoding)
	  return that
	}

	function fromObject (that, object) {
	  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

	  if (isArray(object)) return fromArray(that, object)

	  if (object == null) {
	    throw new TypeError('must start with number, buffer, array or string')
	  }

	  if (typeof ArrayBuffer !== 'undefined') {
	    if (object.buffer instanceof ArrayBuffer) {
	      return fromTypedArray(that, object)
	    }
	    if (object instanceof ArrayBuffer) {
	      return fromArrayBuffer(that, object)
	    }
	  }

	  if (object.length) return fromArrayLike(that, object)

	  return fromJsonObject(that, object)
	}

	function fromBuffer (that, buffer) {
	  var length = checked(buffer.length) | 0
	  that = allocate(that, length)
	  buffer.copy(that, 0, 0, length)
	  return that
	}

	function fromArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	// Duplicate of fromArray() to keep fromArray() monomorphic.
	function fromTypedArray (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  // Truncating the elements is probably not what people expect from typed
	  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
	  // of the old Buffer constructor.
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	function fromArrayBuffer (that, array) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    array.byteLength
	    that = Buffer._augment(new Uint8Array(array))
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that = fromTypedArray(that, new Uint8Array(array))
	  }
	  return that
	}

	function fromArrayLike (that, array) {
	  var length = checked(array.length) | 0
	  that = allocate(that, length)
	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
	// Returns a zero-length buffer for inputs that don't conform to the spec.
	function fromJsonObject (that, object) {
	  var array
	  var length = 0

	  if (object.type === 'Buffer' && isArray(object.data)) {
	    array = object.data
	    length = checked(array.length) | 0
	  }
	  that = allocate(that, length)

	  for (var i = 0; i < length; i += 1) {
	    that[i] = array[i] & 255
	  }
	  return that
	}

	if (Buffer.TYPED_ARRAY_SUPPORT) {
	  Buffer.prototype.__proto__ = Uint8Array.prototype
	  Buffer.__proto__ = Uint8Array
	} else {
	  // pre-set for values that may exist in the future
	  Buffer.prototype.length = undefined
	  Buffer.prototype.parent = undefined
	}

	function allocate (that, length) {
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    // Return an augmented `Uint8Array` instance, for best performance
	    that = Buffer._augment(new Uint8Array(length))
	    that.__proto__ = Buffer.prototype
	  } else {
	    // Fallback: Return an object instance of the Buffer class
	    that.length = length
	    that._isBuffer = true
	  }

	  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
	  if (fromPool) that.parent = rootParent

	  return that
	}

	function checked (length) {
	  // Note: cannot use `length < kMaxLength` here because that fails when
	  // length is NaN (which is otherwise coerced to zero.)
	  if (length >= kMaxLength()) {
	    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
	                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
	  }
	  return length | 0
	}

	function SlowBuffer (subject, encoding) {
	  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

	  var buf = new Buffer(subject, encoding)
	  delete buf.parent
	  return buf
	}

	Buffer.isBuffer = function isBuffer (b) {
	  return !!(b != null && b._isBuffer)
	}

	Buffer.compare = function compare (a, b) {
	  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
	    throw new TypeError('Arguments must be Buffers')
	  }

	  if (a === b) return 0

	  var x = a.length
	  var y = b.length

	  var i = 0
	  var len = Math.min(x, y)
	  while (i < len) {
	    if (a[i] !== b[i]) break

	    ++i
	  }

	  if (i !== len) {
	    x = a[i]
	    y = b[i]
	  }

	  if (x < y) return -1
	  if (y < x) return 1
	  return 0
	}

	Buffer.isEncoding = function isEncoding (encoding) {
	  switch (String(encoding).toLowerCase()) {
	    case 'hex':
	    case 'utf8':
	    case 'utf-8':
	    case 'ascii':
	    case 'binary':
	    case 'base64':
	    case 'raw':
	    case 'ucs2':
	    case 'ucs-2':
	    case 'utf16le':
	    case 'utf-16le':
	      return true
	    default:
	      return false
	  }
	}

	Buffer.concat = function concat (list, length) {
	  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

	  if (list.length === 0) {
	    return new Buffer(0)
	  }

	  var i
	  if (length === undefined) {
	    length = 0
	    for (i = 0; i < list.length; i++) {
	      length += list[i].length
	    }
	  }

	  var buf = new Buffer(length)
	  var pos = 0
	  for (i = 0; i < list.length; i++) {
	    var item = list[i]
	    item.copy(buf, pos)
	    pos += item.length
	  }
	  return buf
	}

	function byteLength (string, encoding) {
	  if (typeof string !== 'string') string = '' + string

	  var len = string.length
	  if (len === 0) return 0

	  // Use a for loop to avoid recursion
	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'ascii':
	      case 'binary':
	      // Deprecated
	      case 'raw':
	      case 'raws':
	        return len
	      case 'utf8':
	      case 'utf-8':
	        return utf8ToBytes(string).length
	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return len * 2
	      case 'hex':
	        return len >>> 1
	      case 'base64':
	        return base64ToBytes(string).length
	      default:
	        if (loweredCase) return utf8ToBytes(string).length // assume utf8
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}
	Buffer.byteLength = byteLength

	function slowToString (encoding, start, end) {
	  var loweredCase = false

	  start = start | 0
	  end = end === undefined || end === Infinity ? this.length : end | 0

	  if (!encoding) encoding = 'utf8'
	  if (start < 0) start = 0
	  if (end > this.length) end = this.length
	  if (end <= start) return ''

	  while (true) {
	    switch (encoding) {
	      case 'hex':
	        return hexSlice(this, start, end)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Slice(this, start, end)

	      case 'ascii':
	        return asciiSlice(this, start, end)

	      case 'binary':
	        return binarySlice(this, start, end)

	      case 'base64':
	        return base64Slice(this, start, end)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return utf16leSlice(this, start, end)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = (encoding + '').toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toString = function toString () {
	  var length = this.length | 0
	  if (length === 0) return ''
	  if (arguments.length === 0) return utf8Slice(this, 0, length)
	  return slowToString.apply(this, arguments)
	}

	Buffer.prototype.equals = function equals (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return true
	  return Buffer.compare(this, b) === 0
	}

	Buffer.prototype.inspect = function inspect () {
	  var str = ''
	  var max = exports.INSPECT_MAX_BYTES
	  if (this.length > 0) {
	    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
	    if (this.length > max) str += ' ... '
	  }
	  return '<Buffer ' + str + '>'
	}

	Buffer.prototype.compare = function compare (b) {
	  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
	  if (this === b) return 0
	  return Buffer.compare(this, b)
	}

	Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
	  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
	  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
	  byteOffset >>= 0

	  if (this.length === 0) return -1
	  if (byteOffset >= this.length) return -1

	  // Negative offsets start from the end of the buffer
	  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

	  if (typeof val === 'string') {
	    if (val.length === 0) return -1 // special case: looking for empty string always fails
	    return String.prototype.indexOf.call(this, val, byteOffset)
	  }
	  if (Buffer.isBuffer(val)) {
	    return arrayIndexOf(this, val, byteOffset)
	  }
	  if (typeof val === 'number') {
	    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
	      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
	    }
	    return arrayIndexOf(this, [ val ], byteOffset)
	  }

	  function arrayIndexOf (arr, val, byteOffset) {
	    var foundIndex = -1
	    for (var i = 0; byteOffset + i < arr.length; i++) {
	      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
	        if (foundIndex === -1) foundIndex = i
	        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
	      } else {
	        foundIndex = -1
	      }
	    }
	    return -1
	  }

	  throw new TypeError('val must be string, number or Buffer')
	}

	// `get` is deprecated
	Buffer.prototype.get = function get (offset) {
	  console.log('.get() is deprecated. Access using array indexes instead.')
	  return this.readUInt8(offset)
	}

	// `set` is deprecated
	Buffer.prototype.set = function set (v, offset) {
	  console.log('.set() is deprecated. Access using array indexes instead.')
	  return this.writeUInt8(v, offset)
	}

	function hexWrite (buf, string, offset, length) {
	  offset = Number(offset) || 0
	  var remaining = buf.length - offset
	  if (!length) {
	    length = remaining
	  } else {
	    length = Number(length)
	    if (length > remaining) {
	      length = remaining
	    }
	  }

	  // must be an even number of digits
	  var strLen = string.length
	  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

	  if (length > strLen / 2) {
	    length = strLen / 2
	  }
	  for (var i = 0; i < length; i++) {
	    var parsed = parseInt(string.substr(i * 2, 2), 16)
	    if (isNaN(parsed)) throw new Error('Invalid hex string')
	    buf[offset + i] = parsed
	  }
	  return i
	}

	function utf8Write (buf, string, offset, length) {
	  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
	}

	function asciiWrite (buf, string, offset, length) {
	  return blitBuffer(asciiToBytes(string), buf, offset, length)
	}

	function binaryWrite (buf, string, offset, length) {
	  return asciiWrite(buf, string, offset, length)
	}

	function base64Write (buf, string, offset, length) {
	  return blitBuffer(base64ToBytes(string), buf, offset, length)
	}

	function ucs2Write (buf, string, offset, length) {
	  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
	}

	Buffer.prototype.write = function write (string, offset, length, encoding) {
	  // Buffer#write(string)
	  if (offset === undefined) {
	    encoding = 'utf8'
	    length = this.length
	    offset = 0
	  // Buffer#write(string, encoding)
	  } else if (length === undefined && typeof offset === 'string') {
	    encoding = offset
	    length = this.length
	    offset = 0
	  // Buffer#write(string, offset[, length][, encoding])
	  } else if (isFinite(offset)) {
	    offset = offset | 0
	    if (isFinite(length)) {
	      length = length | 0
	      if (encoding === undefined) encoding = 'utf8'
	    } else {
	      encoding = length
	      length = undefined
	    }
	  // legacy write(string, encoding, offset, length) - remove in v0.13
	  } else {
	    var swap = encoding
	    encoding = offset
	    offset = length | 0
	    length = swap
	  }

	  var remaining = this.length - offset
	  if (length === undefined || length > remaining) length = remaining

	  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
	    throw new RangeError('attempt to write outside buffer bounds')
	  }

	  if (!encoding) encoding = 'utf8'

	  var loweredCase = false
	  for (;;) {
	    switch (encoding) {
	      case 'hex':
	        return hexWrite(this, string, offset, length)

	      case 'utf8':
	      case 'utf-8':
	        return utf8Write(this, string, offset, length)

	      case 'ascii':
	        return asciiWrite(this, string, offset, length)

	      case 'binary':
	        return binaryWrite(this, string, offset, length)

	      case 'base64':
	        // Warning: maxLength not taken into account in base64Write
	        return base64Write(this, string, offset, length)

	      case 'ucs2':
	      case 'ucs-2':
	      case 'utf16le':
	      case 'utf-16le':
	        return ucs2Write(this, string, offset, length)

	      default:
	        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
	        encoding = ('' + encoding).toLowerCase()
	        loweredCase = true
	    }
	  }
	}

	Buffer.prototype.toJSON = function toJSON () {
	  return {
	    type: 'Buffer',
	    data: Array.prototype.slice.call(this._arr || this, 0)
	  }
	}

	function base64Slice (buf, start, end) {
	  if (start === 0 && end === buf.length) {
	    return base64.fromByteArray(buf)
	  } else {
	    return base64.fromByteArray(buf.slice(start, end))
	  }
	}

	function utf8Slice (buf, start, end) {
	  end = Math.min(buf.length, end)
	  var res = []

	  var i = start
	  while (i < end) {
	    var firstByte = buf[i]
	    var codePoint = null
	    var bytesPerSequence = (firstByte > 0xEF) ? 4
	      : (firstByte > 0xDF) ? 3
	      : (firstByte > 0xBF) ? 2
	      : 1

	    if (i + bytesPerSequence <= end) {
	      var secondByte, thirdByte, fourthByte, tempCodePoint

	      switch (bytesPerSequence) {
	        case 1:
	          if (firstByte < 0x80) {
	            codePoint = firstByte
	          }
	          break
	        case 2:
	          secondByte = buf[i + 1]
	          if ((secondByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
	            if (tempCodePoint > 0x7F) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 3:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
	            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
	              codePoint = tempCodePoint
	            }
	          }
	          break
	        case 4:
	          secondByte = buf[i + 1]
	          thirdByte = buf[i + 2]
	          fourthByte = buf[i + 3]
	          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
	            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
	            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
	              codePoint = tempCodePoint
	            }
	          }
	      }
	    }

	    if (codePoint === null) {
	      // we did not generate a valid codePoint so insert a
	      // replacement char (U+FFFD) and advance only 1 byte
	      codePoint = 0xFFFD
	      bytesPerSequence = 1
	    } else if (codePoint > 0xFFFF) {
	      // encode to utf16 (surrogate pair dance)
	      codePoint -= 0x10000
	      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
	      codePoint = 0xDC00 | codePoint & 0x3FF
	    }

	    res.push(codePoint)
	    i += bytesPerSequence
	  }

	  return decodeCodePointsArray(res)
	}

	// Based on http://stackoverflow.com/a/22747272/680742, the browser with
	// the lowest limit is Chrome, with 0x10000 args.
	// We go 1 magnitude less, for safety
	var MAX_ARGUMENTS_LENGTH = 0x1000

	function decodeCodePointsArray (codePoints) {
	  var len = codePoints.length
	  if (len <= MAX_ARGUMENTS_LENGTH) {
	    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
	  }

	  // Decode in chunks to avoid "call stack size exceeded".
	  var res = ''
	  var i = 0
	  while (i < len) {
	    res += String.fromCharCode.apply(
	      String,
	      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
	    )
	  }
	  return res
	}

	function asciiSlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i] & 0x7F)
	  }
	  return ret
	}

	function binarySlice (buf, start, end) {
	  var ret = ''
	  end = Math.min(buf.length, end)

	  for (var i = start; i < end; i++) {
	    ret += String.fromCharCode(buf[i])
	  }
	  return ret
	}

	function hexSlice (buf, start, end) {
	  var len = buf.length

	  if (!start || start < 0) start = 0
	  if (!end || end < 0 || end > len) end = len

	  var out = ''
	  for (var i = start; i < end; i++) {
	    out += toHex(buf[i])
	  }
	  return out
	}

	function utf16leSlice (buf, start, end) {
	  var bytes = buf.slice(start, end)
	  var res = ''
	  for (var i = 0; i < bytes.length; i += 2) {
	    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
	  }
	  return res
	}

	Buffer.prototype.slice = function slice (start, end) {
	  var len = this.length
	  start = ~~start
	  end = end === undefined ? len : ~~end

	  if (start < 0) {
	    start += len
	    if (start < 0) start = 0
	  } else if (start > len) {
	    start = len
	  }

	  if (end < 0) {
	    end += len
	    if (end < 0) end = 0
	  } else if (end > len) {
	    end = len
	  }

	  if (end < start) end = start

	  var newBuf
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    newBuf = Buffer._augment(this.subarray(start, end))
	  } else {
	    var sliceLen = end - start
	    newBuf = new Buffer(sliceLen, undefined)
	    for (var i = 0; i < sliceLen; i++) {
	      newBuf[i] = this[i + start]
	    }
	  }

	  if (newBuf.length) newBuf.parent = this.parent || this

	  return newBuf
	}

	/*
	 * Need to make sure that buffer isn't trying to write out of bounds.
	 */
	function checkOffset (offset, ext, length) {
	  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
	  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
	}

	Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }

	  return val
	}

	Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) {
	    checkOffset(offset, byteLength, this.length)
	  }

	  var val = this[offset + --byteLength]
	  var mul = 1
	  while (byteLength > 0 && (mul *= 0x100)) {
	    val += this[offset + --byteLength] * mul
	  }

	  return val
	}

	Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  return this[offset]
	}

	Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return this[offset] | (this[offset + 1] << 8)
	}

	Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  return (this[offset] << 8) | this[offset + 1]
	}

	Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return ((this[offset]) |
	      (this[offset + 1] << 8) |
	      (this[offset + 2] << 16)) +
	      (this[offset + 3] * 0x1000000)
	}

	Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] * 0x1000000) +
	    ((this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    this[offset + 3])
	}

	Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var val = this[offset]
	  var mul = 1
	  var i = 0
	  while (++i < byteLength && (mul *= 0x100)) {
	    val += this[offset + i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkOffset(offset, byteLength, this.length)

	  var i = byteLength
	  var mul = 1
	  var val = this[offset + --i]
	  while (i > 0 && (mul *= 0x100)) {
	    val += this[offset + --i] * mul
	  }
	  mul *= 0x80

	  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

	  return val
	}

	Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 1, this.length)
	  if (!(this[offset] & 0x80)) return (this[offset])
	  return ((0xff - this[offset] + 1) * -1)
	}

	Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset] | (this[offset + 1] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 2, this.length)
	  var val = this[offset + 1] | (this[offset] << 8)
	  return (val & 0x8000) ? val | 0xFFFF0000 : val
	}

	Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset]) |
	    (this[offset + 1] << 8) |
	    (this[offset + 2] << 16) |
	    (this[offset + 3] << 24)
	}

	Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)

	  return (this[offset] << 24) |
	    (this[offset + 1] << 16) |
	    (this[offset + 2] << 8) |
	    (this[offset + 3])
	}

	Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, true, 23, 4)
	}

	Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 4, this.length)
	  return ieee754.read(this, offset, false, 23, 4)
	}

	Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, true, 52, 8)
	}

	Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
	  if (!noAssert) checkOffset(offset, 8, this.length)
	  return ieee754.read(this, offset, false, 52, 8)
	}

	function checkInt (buf, value, offset, ext, max, min) {
	  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	}

	Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

	  var mul = 1
	  var i = 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  byteLength = byteLength | 0
	  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

	  var i = byteLength - 1
	  var mul = 1
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = (value / mul) & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	function objectWriteUInt16 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
	    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
	      (littleEndian ? i : 1 - i) * 8
	  }
	}

	Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	function objectWriteUInt32 (buf, value, offset, littleEndian) {
	  if (value < 0) value = 0xffffffff + value + 1
	  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
	    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
	  }
	}

	Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset + 3] = (value >>> 24)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 1] = (value >>> 8)
	    this[offset] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = 0
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset] = value & 0xFF
	  while (++i < byteLength && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) {
	    var limit = Math.pow(2, 8 * byteLength - 1)

	    checkInt(this, value, offset, byteLength, limit - 1, -limit)
	  }

	  var i = byteLength - 1
	  var mul = 1
	  var sub = value < 0 ? 1 : 0
	  this[offset + i] = value & 0xFF
	  while (--i >= 0 && (mul *= 0x100)) {
	    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
	  }

	  return offset + byteLength
	}

	Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
	  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
	  if (value < 0) value = 0xff + value + 1
	  this[offset] = (value & 0xff)
	  return offset + 1
	}

	Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	  } else {
	    objectWriteUInt16(this, value, offset, true)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 8)
	    this[offset + 1] = (value & 0xff)
	  } else {
	    objectWriteUInt16(this, value, offset, false)
	  }
	  return offset + 2
	}

	Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value & 0xff)
	    this[offset + 1] = (value >>> 8)
	    this[offset + 2] = (value >>> 16)
	    this[offset + 3] = (value >>> 24)
	  } else {
	    objectWriteUInt32(this, value, offset, true)
	  }
	  return offset + 4
	}

	Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
	  value = +value
	  offset = offset | 0
	  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
	  if (value < 0) value = 0xffffffff + value + 1
	  if (Buffer.TYPED_ARRAY_SUPPORT) {
	    this[offset] = (value >>> 24)
	    this[offset + 1] = (value >>> 16)
	    this[offset + 2] = (value >>> 8)
	    this[offset + 3] = (value & 0xff)
	  } else {
	    objectWriteUInt32(this, value, offset, false)
	  }
	  return offset + 4
	}

	function checkIEEE754 (buf, value, offset, ext, max, min) {
	  if (value > max || value < min) throw new RangeError('value is out of bounds')
	  if (offset + ext > buf.length) throw new RangeError('index out of range')
	  if (offset < 0) throw new RangeError('index out of range')
	}

	function writeFloat (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 23, 4)
	  return offset + 4
	}

	Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
	  return writeFloat(this, value, offset, false, noAssert)
	}

	function writeDouble (buf, value, offset, littleEndian, noAssert) {
	  if (!noAssert) {
	    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
	  }
	  ieee754.write(buf, value, offset, littleEndian, 52, 8)
	  return offset + 8
	}

	Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, true, noAssert)
	}

	Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
	  return writeDouble(this, value, offset, false, noAssert)
	}

	// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
	Buffer.prototype.copy = function copy (target, targetStart, start, end) {
	  if (!start) start = 0
	  if (!end && end !== 0) end = this.length
	  if (targetStart >= target.length) targetStart = target.length
	  if (!targetStart) targetStart = 0
	  if (end > 0 && end < start) end = start

	  // Copy 0 bytes; we're done
	  if (end === start) return 0
	  if (target.length === 0 || this.length === 0) return 0

	  // Fatal error conditions
	  if (targetStart < 0) {
	    throw new RangeError('targetStart out of bounds')
	  }
	  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
	  if (end < 0) throw new RangeError('sourceEnd out of bounds')

	  // Are we oob?
	  if (end > this.length) end = this.length
	  if (target.length - targetStart < end - start) {
	    end = target.length - targetStart + start
	  }

	  var len = end - start
	  var i

	  if (this === target && start < targetStart && targetStart < end) {
	    // descending copy from end
	    for (i = len - 1; i >= 0; i--) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
	    // ascending copy from start
	    for (i = 0; i < len; i++) {
	      target[i + targetStart] = this[i + start]
	    }
	  } else {
	    target._set(this.subarray(start, start + len), targetStart)
	  }

	  return len
	}

	// fill(value, start=0, end=buffer.length)
	Buffer.prototype.fill = function fill (value, start, end) {
	  if (!value) value = 0
	  if (!start) start = 0
	  if (!end) end = this.length

	  if (end < start) throw new RangeError('end < start')

	  // Fill 0 bytes; we're done
	  if (end === start) return
	  if (this.length === 0) return

	  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
	  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

	  var i
	  if (typeof value === 'number') {
	    for (i = start; i < end; i++) {
	      this[i] = value
	    }
	  } else {
	    var bytes = utf8ToBytes(value.toString())
	    var len = bytes.length
	    for (i = start; i < end; i++) {
	      this[i] = bytes[i % len]
	    }
	  }

	  return this
	}

	/**
	 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
	 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
	 */
	Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
	  if (typeof Uint8Array !== 'undefined') {
	    if (Buffer.TYPED_ARRAY_SUPPORT) {
	      return (new Buffer(this)).buffer
	    } else {
	      var buf = new Uint8Array(this.length)
	      for (var i = 0, len = buf.length; i < len; i += 1) {
	        buf[i] = this[i]
	      }
	      return buf.buffer
	    }
	  } else {
	    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
	  }
	}

	// HELPER FUNCTIONS
	// ================

	var BP = Buffer.prototype

	/**
	 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
	 */
	Buffer._augment = function _augment (arr) {
	  arr.constructor = Buffer
	  arr._isBuffer = true

	  // save reference to original Uint8Array set method before overwriting
	  arr._set = arr.set

	  // deprecated
	  arr.get = BP.get
	  arr.set = BP.set

	  arr.write = BP.write
	  arr.toString = BP.toString
	  arr.toLocaleString = BP.toString
	  arr.toJSON = BP.toJSON
	  arr.equals = BP.equals
	  arr.compare = BP.compare
	  arr.indexOf = BP.indexOf
	  arr.copy = BP.copy
	  arr.slice = BP.slice
	  arr.readUIntLE = BP.readUIntLE
	  arr.readUIntBE = BP.readUIntBE
	  arr.readUInt8 = BP.readUInt8
	  arr.readUInt16LE = BP.readUInt16LE
	  arr.readUInt16BE = BP.readUInt16BE
	  arr.readUInt32LE = BP.readUInt32LE
	  arr.readUInt32BE = BP.readUInt32BE
	  arr.readIntLE = BP.readIntLE
	  arr.readIntBE = BP.readIntBE
	  arr.readInt8 = BP.readInt8
	  arr.readInt16LE = BP.readInt16LE
	  arr.readInt16BE = BP.readInt16BE
	  arr.readInt32LE = BP.readInt32LE
	  arr.readInt32BE = BP.readInt32BE
	  arr.readFloatLE = BP.readFloatLE
	  arr.readFloatBE = BP.readFloatBE
	  arr.readDoubleLE = BP.readDoubleLE
	  arr.readDoubleBE = BP.readDoubleBE
	  arr.writeUInt8 = BP.writeUInt8
	  arr.writeUIntLE = BP.writeUIntLE
	  arr.writeUIntBE = BP.writeUIntBE
	  arr.writeUInt16LE = BP.writeUInt16LE
	  arr.writeUInt16BE = BP.writeUInt16BE
	  arr.writeUInt32LE = BP.writeUInt32LE
	  arr.writeUInt32BE = BP.writeUInt32BE
	  arr.writeIntLE = BP.writeIntLE
	  arr.writeIntBE = BP.writeIntBE
	  arr.writeInt8 = BP.writeInt8
	  arr.writeInt16LE = BP.writeInt16LE
	  arr.writeInt16BE = BP.writeInt16BE
	  arr.writeInt32LE = BP.writeInt32LE
	  arr.writeInt32BE = BP.writeInt32BE
	  arr.writeFloatLE = BP.writeFloatLE
	  arr.writeFloatBE = BP.writeFloatBE
	  arr.writeDoubleLE = BP.writeDoubleLE
	  arr.writeDoubleBE = BP.writeDoubleBE
	  arr.fill = BP.fill
	  arr.inspect = BP.inspect
	  arr.toArrayBuffer = BP.toArrayBuffer

	  return arr
	}

	var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

	function base64clean (str) {
	  // Node strips out invalid characters like \n and \t from the string, base64-js does not
	  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
	  // Node converts strings with length < 2 to ''
	  if (str.length < 2) return ''
	  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
	  while (str.length % 4 !== 0) {
	    str = str + '='
	  }
	  return str
	}

	function stringtrim (str) {
	  if (str.trim) return str.trim()
	  return str.replace(/^\s+|\s+$/g, '')
	}

	function toHex (n) {
	  if (n < 16) return '0' + n.toString(16)
	  return n.toString(16)
	}

	function utf8ToBytes (string, units) {
	  units = units || Infinity
	  var codePoint
	  var length = string.length
	  var leadSurrogate = null
	  var bytes = []

	  for (var i = 0; i < length; i++) {
	    codePoint = string.charCodeAt(i)

	    // is surrogate component
	    if (codePoint > 0xD7FF && codePoint < 0xE000) {
	      // last char was a lead
	      if (!leadSurrogate) {
	        // no lead yet
	        if (codePoint > 0xDBFF) {
	          // unexpected trail
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        } else if (i + 1 === length) {
	          // unpaired lead
	          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	          continue
	        }

	        // valid lead
	        leadSurrogate = codePoint

	        continue
	      }

	      // 2 leads in a row
	      if (codePoint < 0xDC00) {
	        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	        leadSurrogate = codePoint
	        continue
	      }

	      // valid surrogate pair
	      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
	    } else if (leadSurrogate) {
	      // valid bmp char, but last char was a lead
	      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
	    }

	    leadSurrogate = null

	    // encode utf8
	    if (codePoint < 0x80) {
	      if ((units -= 1) < 0) break
	      bytes.push(codePoint)
	    } else if (codePoint < 0x800) {
	      if ((units -= 2) < 0) break
	      bytes.push(
	        codePoint >> 0x6 | 0xC0,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x10000) {
	      if ((units -= 3) < 0) break
	      bytes.push(
	        codePoint >> 0xC | 0xE0,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else if (codePoint < 0x110000) {
	      if ((units -= 4) < 0) break
	      bytes.push(
	        codePoint >> 0x12 | 0xF0,
	        codePoint >> 0xC & 0x3F | 0x80,
	        codePoint >> 0x6 & 0x3F | 0x80,
	        codePoint & 0x3F | 0x80
	      )
	    } else {
	      throw new Error('Invalid code point')
	    }
	  }

	  return bytes
	}

	function asciiToBytes (str) {
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    // Node's code seems to be doing this and not & 0x7F..
	    byteArray.push(str.charCodeAt(i) & 0xFF)
	  }
	  return byteArray
	}

	function utf16leToBytes (str, units) {
	  var c, hi, lo
	  var byteArray = []
	  for (var i = 0; i < str.length; i++) {
	    if ((units -= 2) < 0) break

	    c = str.charCodeAt(i)
	    hi = c >> 8
	    lo = c % 256
	    byteArray.push(lo)
	    byteArray.push(hi)
	  }

	  return byteArray
	}

	function base64ToBytes (str) {
	  return base64.toByteArray(base64clean(str))
	}

	function blitBuffer (src, dst, offset, length) {
	  for (var i = 0; i < length; i++) {
	    if ((i + offset >= dst.length) || (i >= src.length)) break
	    dst[i + offset] = src[i]
	  }
	  return i
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer, (function() { return this; }())))

/***/ },
/* 702 */
/***/ function(module, exports, __webpack_require__) {

	var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	;(function (exports) {
		'use strict';

	  var Arr = (typeof Uint8Array !== 'undefined')
	    ? Uint8Array
	    : Array

		var PLUS   = '+'.charCodeAt(0)
		var SLASH  = '/'.charCodeAt(0)
		var NUMBER = '0'.charCodeAt(0)
		var LOWER  = 'a'.charCodeAt(0)
		var UPPER  = 'A'.charCodeAt(0)
		var PLUS_URL_SAFE = '-'.charCodeAt(0)
		var SLASH_URL_SAFE = '_'.charCodeAt(0)

		function decode (elt) {
			var code = elt.charCodeAt(0)
			if (code === PLUS ||
			    code === PLUS_URL_SAFE)
				return 62 // '+'
			if (code === SLASH ||
			    code === SLASH_URL_SAFE)
				return 63 // '/'
			if (code < NUMBER)
				return -1 //no match
			if (code < NUMBER + 10)
				return code - NUMBER + 26 + 26
			if (code < UPPER + 26)
				return code - UPPER
			if (code < LOWER + 26)
				return code - LOWER + 26
		}

		function b64ToByteArray (b64) {
			var i, j, l, tmp, placeHolders, arr

			if (b64.length % 4 > 0) {
				throw new Error('Invalid string. Length must be a multiple of 4')
			}

			// the number of equal signs (place holders)
			// if there are two placeholders, than the two characters before it
			// represent one byte
			// if there is only one, then the three characters before it represent 2 bytes
			// this is just a cheap hack to not do indexOf twice
			var len = b64.length
			placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

			// base64 is 4/3 + up to two characters of the original data
			arr = new Arr(b64.length * 3 / 4 - placeHolders)

			// if there are placeholders, only get up to the last complete 4 chars
			l = placeHolders > 0 ? b64.length - 4 : b64.length

			var L = 0

			function push (v) {
				arr[L++] = v
			}

			for (i = 0, j = 0; i < l; i += 4, j += 3) {
				tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
				push((tmp & 0xFF0000) >> 16)
				push((tmp & 0xFF00) >> 8)
				push(tmp & 0xFF)
			}

			if (placeHolders === 2) {
				tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
				push(tmp & 0xFF)
			} else if (placeHolders === 1) {
				tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
				push((tmp >> 8) & 0xFF)
				push(tmp & 0xFF)
			}

			return arr
		}

		function uint8ToBase64 (uint8) {
			var i,
				extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
				output = "",
				temp, length

			function encode (num) {
				return lookup.charAt(num)
			}

			function tripletToBase64 (num) {
				return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
			}

			// go through the array every three bytes, we'll deal with trailing stuff later
			for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
				temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
				output += tripletToBase64(temp)
			}

			// pad the end with zeros, but make sure to not forget the extra bytes
			switch (extraBytes) {
				case 1:
					temp = uint8[uint8.length - 1]
					output += encode(temp >> 2)
					output += encode((temp << 4) & 0x3F)
					output += '=='
					break
				case 2:
					temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
					output += encode(temp >> 10)
					output += encode((temp >> 4) & 0x3F)
					output += encode((temp << 2) & 0x3F)
					output += '='
					break
			}

			return output
		}

		exports.toByteArray = b64ToByteArray
		exports.fromByteArray = uint8ToBase64
	}( false ? (this.base64js = {}) : exports))


/***/ },
/* 703 */
/***/ function(module, exports) {

	exports.read = function (buffer, offset, isLE, mLen, nBytes) {
	  var e, m
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var nBits = -7
	  var i = isLE ? (nBytes - 1) : 0
	  var d = isLE ? -1 : 1
	  var s = buffer[offset + i]

	  i += d

	  e = s & ((1 << (-nBits)) - 1)
	  s >>= (-nBits)
	  nBits += eLen
	  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  m = e & ((1 << (-nBits)) - 1)
	  e >>= (-nBits)
	  nBits += mLen
	  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

	  if (e === 0) {
	    e = 1 - eBias
	  } else if (e === eMax) {
	    return m ? NaN : ((s ? -1 : 1) * Infinity)
	  } else {
	    m = m + Math.pow(2, mLen)
	    e = e - eBias
	  }
	  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
	}

	exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
	  var e, m, c
	  var eLen = nBytes * 8 - mLen - 1
	  var eMax = (1 << eLen) - 1
	  var eBias = eMax >> 1
	  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
	  var i = isLE ? 0 : (nBytes - 1)
	  var d = isLE ? 1 : -1
	  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

	  value = Math.abs(value)

	  if (isNaN(value) || value === Infinity) {
	    m = isNaN(value) ? 1 : 0
	    e = eMax
	  } else {
	    e = Math.floor(Math.log(value) / Math.LN2)
	    if (value * (c = Math.pow(2, -e)) < 1) {
	      e--
	      c *= 2
	    }
	    if (e + eBias >= 1) {
	      value += rt / c
	    } else {
	      value += rt * Math.pow(2, 1 - eBias)
	    }
	    if (value * c >= 2) {
	      e++
	      c /= 2
	    }

	    if (e + eBias >= eMax) {
	      m = 0
	      e = eMax
	    } else if (e + eBias >= 1) {
	      m = (value * c - 1) * Math.pow(2, mLen)
	      e = e + eBias
	    } else {
	      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
	      e = 0
	    }
	  }

	  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

	  e = (e << mLen) | m
	  eLen += mLen
	  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

	  buffer[offset + i - d] |= s * 128
	}


/***/ },
/* 704 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = Array.isArray || function (arr) {
	  return toString.call(arr) == '[object Array]';
	};


/***/ },
/* 705 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, Buffer) {(function() {
	  var g = ('undefined' === typeof window ? global : window) || {}
	  _crypto = (
	    g.crypto || g.msCrypto || __webpack_require__(706)
	  )
	  module.exports = function(size) {
	    // Modern Browsers
	    if(_crypto.getRandomValues) {
	      var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array
	      /* This will not work in older browsers.
	       * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
	       */
	    
	      _crypto.getRandomValues(bytes);
	      return bytes;
	    }
	    else if (_crypto.randomBytes) {
	      return _crypto.randomBytes(size)
	    }
	    else
	      throw new Error(
	        'secure random number generation not supported by this browser\n'+
	        'use chrome, FireFox or Internet Explorer 11'
	      )
	  }
	}())

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(701).Buffer))

/***/ },
/* 706 */
/***/ function(module, exports) {

	/* (ignored) */

/***/ },
/* 707 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(708)

	var md5 = toConstructor(__webpack_require__(716))
	var rmd160 = toConstructor(__webpack_require__(718))

	function toConstructor (fn) {
	  return function () {
	    var buffers = []
	    var m= {
	      update: function (data, enc) {
	        if(!Buffer.isBuffer(data)) data = new Buffer(data, enc)
	        buffers.push(data)
	        return this
	      },
	      digest: function (enc) {
	        var buf = Buffer.concat(buffers)
	        var r = fn(buf)
	        buffers = null
	        return enc ? r.toString(enc) : r
	      }
	    }
	    return m
	  }
	}

	module.exports = function (alg) {
	  if('md5' === alg) return new md5()
	  if('rmd160' === alg) return new rmd160()
	  return createHash(alg)
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer))

/***/ },
/* 708 */
/***/ function(module, exports, __webpack_require__) {

	var exports = module.exports = function (alg) {
	  var Alg = exports[alg]
	  if(!Alg) throw new Error(alg + ' is not supported (we accept pull requests)')
	  return new Alg()
	}

	var Buffer = __webpack_require__(701).Buffer
	var Hash   = __webpack_require__(709)(Buffer)

	exports.sha1 = __webpack_require__(710)(Buffer, Hash)
	exports.sha256 = __webpack_require__(714)(Buffer, Hash)
	exports.sha512 = __webpack_require__(715)(Buffer, Hash)


/***/ },
/* 709 */
/***/ function(module, exports) {

	module.exports = function (Buffer) {

	  //prototype class for hash functions
	  function Hash (blockSize, finalSize) {
	    this._block = new Buffer(blockSize) //new Uint32Array(blockSize/4)
	    this._finalSize = finalSize
	    this._blockSize = blockSize
	    this._len = 0
	    this._s = 0
	  }

	  Hash.prototype.init = function () {
	    this._s = 0
	    this._len = 0
	  }

	  Hash.prototype.update = function (data, enc) {
	    if ("string" === typeof data) {
	      enc = enc || "utf8"
	      data = new Buffer(data, enc)
	    }

	    var l = this._len += data.length
	    var s = this._s = (this._s || 0)
	    var f = 0
	    var buffer = this._block

	    while (s < l) {
	      var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))
	      var ch = (t - f)

	      for (var i = 0; i < ch; i++) {
	        buffer[(s % this._blockSize) + i] = data[i + f]
	      }

	      s += ch
	      f += ch

	      if ((s % this._blockSize) === 0) {
	        this._update(buffer)
	      }
	    }
	    this._s = s

	    return this
	  }

	  Hash.prototype.digest = function (enc) {
	    // Suppose the length of the message M, in bits, is l
	    var l = this._len * 8

	    // Append the bit 1 to the end of the message
	    this._block[this._len % this._blockSize] = 0x80

	    // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize
	    this._block.fill(0, this._len % this._blockSize + 1)

	    if (l % (this._blockSize * 8) >= this._finalSize * 8) {
	      this._update(this._block)
	      this._block.fill(0)
	    }

	    // to this append the block which is equal to the number l written in binary
	    // TODO: handle case where l is > Math.pow(2, 29)
	    this._block.writeInt32BE(l, this._blockSize - 4)

	    var hash = this._update(this._block) || this._hash()

	    return enc ? hash.toString(enc) : hash
	  }

	  Hash.prototype._update = function () {
	    throw new Error('_update must be implemented by subclass')
	  }

	  return Hash
	}


/***/ },
/* 710 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
	 * in FIPS PUB 180-1
	 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for details.
	 */

	var inherits = __webpack_require__(711).inherits

	module.exports = function (Buffer, Hash) {

	  var A = 0|0
	  var B = 4|0
	  var C = 8|0
	  var D = 12|0
	  var E = 16|0

	  var W = new (typeof Int32Array === 'undefined' ? Array : Int32Array)(80)

	  var POOL = []

	  function Sha1 () {
	    if(POOL.length)
	      return POOL.pop().init()

	    if(!(this instanceof Sha1)) return new Sha1()
	    this._w = W
	    Hash.call(this, 16*4, 14*4)

	    this._h = null
	    this.init()
	  }

	  inherits(Sha1, Hash)

	  Sha1.prototype.init = function () {
	    this._a = 0x67452301
	    this._b = 0xefcdab89
	    this._c = 0x98badcfe
	    this._d = 0x10325476
	    this._e = 0xc3d2e1f0

	    Hash.prototype.init.call(this)
	    return this
	  }

	  Sha1.prototype._POOL = POOL
	  Sha1.prototype._update = function (X) {

	    var a, b, c, d, e, _a, _b, _c, _d, _e

	    a = _a = this._a
	    b = _b = this._b
	    c = _c = this._c
	    d = _d = this._d
	    e = _e = this._e

	    var w = this._w

	    for(var j = 0; j < 80; j++) {
	      var W = w[j] = j < 16 ? X.readInt32BE(j*4)
	        : rol(w[j - 3] ^ w[j -  8] ^ w[j - 14] ^ w[j - 16], 1)

	      var t = add(
	        add(rol(a, 5), sha1_ft(j, b, c, d)),
	        add(add(e, W), sha1_kt(j))
	      )

	      e = d
	      d = c
	      c = rol(b, 30)
	      b = a
	      a = t
	    }

	    this._a = add(a, _a)
	    this._b = add(b, _b)
	    this._c = add(c, _c)
	    this._d = add(d, _d)
	    this._e = add(e, _e)
	  }

	  Sha1.prototype._hash = function () {
	    if(POOL.length < 100) POOL.push(this)
	    var H = new Buffer(20)
	    //console.log(this._a|0, this._b|0, this._c|0, this._d|0, this._e|0)
	    H.writeInt32BE(this._a|0, A)
	    H.writeInt32BE(this._b|0, B)
	    H.writeInt32BE(this._c|0, C)
	    H.writeInt32BE(this._d|0, D)
	    H.writeInt32BE(this._e|0, E)
	    return H
	  }

	  /*
	   * Perform the appropriate triplet combination function for the current
	   * iteration
	   */
	  function sha1_ft(t, b, c, d) {
	    if(t < 20) return (b & c) | ((~b) & d);
	    if(t < 40) return b ^ c ^ d;
	    if(t < 60) return (b & c) | (b & d) | (c & d);
	    return b ^ c ^ d;
	  }

	  /*
	   * Determine the appropriate additive constant for the current iteration
	   */
	  function sha1_kt(t) {
	    return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
	           (t < 60) ? -1894007588 : -899497514;
	  }

	  /*
	   * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	   * to work around bugs in some JS interpreters.
	   * //dominictarr: this is 10 years old, so maybe this can be dropped?)
	   *
	   */
	  function add(x, y) {
	    return (x + y ) | 0
	  //lets see how this goes on testling.
	  //  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  //  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  //  return (msw << 16) | (lsw & 0xFFFF);
	  }

	  /*
	   * Bitwise rotate a 32-bit number to the left.
	   */
	  function rol(num, cnt) {
	    return (num << cnt) | (num >>> (32 - cnt));
	  }

	  return Sha1
	}


/***/ },
/* 711 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var formatRegExp = /%[sdj%]/g;
	exports.format = function(f) {
	  if (!isString(f)) {
	    var objects = [];
	    for (var i = 0; i < arguments.length; i++) {
	      objects.push(inspect(arguments[i]));
	    }
	    return objects.join(' ');
	  }

	  var i = 1;
	  var args = arguments;
	  var len = args.length;
	  var str = String(f).replace(formatRegExp, function(x) {
	    if (x === '%%') return '%';
	    if (i >= len) return x;
	    switch (x) {
	      case '%s': return String(args[i++]);
	      case '%d': return Number(args[i++]);
	      case '%j':
	        try {
	          return JSON.stringify(args[i++]);
	        } catch (_) {
	          return '[Circular]';
	        }
	      default:
	        return x;
	    }
	  });
	  for (var x = args[i]; i < len; x = args[++i]) {
	    if (isNull(x) || !isObject(x)) {
	      str += ' ' + x;
	    } else {
	      str += ' ' + inspect(x);
	    }
	  }
	  return str;
	};


	// Mark that a method should not be used.
	// Returns a modified function which warns once by default.
	// If --no-deprecation is set, then it is a no-op.
	exports.deprecate = function(fn, msg) {
	  // Allow for deprecating things in the process of starting up.
	  if (isUndefined(global.process)) {
	    return function() {
	      return exports.deprecate(fn, msg).apply(this, arguments);
	    };
	  }

	  if (process.noDeprecation === true) {
	    return fn;
	  }

	  var warned = false;
	  function deprecated() {
	    if (!warned) {
	      if (process.throwDeprecation) {
	        throw new Error(msg);
	      } else if (process.traceDeprecation) {
	        console.trace(msg);
	      } else {
	        console.error(msg);
	      }
	      warned = true;
	    }
	    return fn.apply(this, arguments);
	  }

	  return deprecated;
	};


	var debugs = {};
	var debugEnviron;
	exports.debuglog = function(set) {
	  if (isUndefined(debugEnviron))
	    debugEnviron = process.env.NODE_DEBUG || '';
	  set = set.toUpperCase();
	  if (!debugs[set]) {
	    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
	      var pid = process.pid;
	      debugs[set] = function() {
	        var msg = exports.format.apply(exports, arguments);
	        console.error('%s %d: %s', set, pid, msg);
	      };
	    } else {
	      debugs[set] = function() {};
	    }
	  }
	  return debugs[set];
	};


	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Object} opts Optional options object that alters the output.
	 */
	/* legacy: obj, showHidden, depth, colors*/
	function inspect(obj, opts) {
	  // default options
	  var ctx = {
	    seen: [],
	    stylize: stylizeNoColor
	  };
	  // legacy...
	  if (arguments.length >= 3) ctx.depth = arguments[2];
	  if (arguments.length >= 4) ctx.colors = arguments[3];
	  if (isBoolean(opts)) {
	    // legacy...
	    ctx.showHidden = opts;
	  } else if (opts) {
	    // got an "options" object
	    exports._extend(ctx, opts);
	  }
	  // set default options
	  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
	  if (isUndefined(ctx.depth)) ctx.depth = 2;
	  if (isUndefined(ctx.colors)) ctx.colors = false;
	  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
	  if (ctx.colors) ctx.stylize = stylizeWithColor;
	  return formatValue(ctx, obj, ctx.depth);
	}
	exports.inspect = inspect;


	// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
	inspect.colors = {
	  'bold' : [1, 22],
	  'italic' : [3, 23],
	  'underline' : [4, 24],
	  'inverse' : [7, 27],
	  'white' : [37, 39],
	  'grey' : [90, 39],
	  'black' : [30, 39],
	  'blue' : [34, 39],
	  'cyan' : [36, 39],
	  'green' : [32, 39],
	  'magenta' : [35, 39],
	  'red' : [31, 39],
	  'yellow' : [33, 39]
	};

	// Don't use 'blue' not visible on cmd.exe
	inspect.styles = {
	  'special': 'cyan',
	  'number': 'yellow',
	  'boolean': 'yellow',
	  'undefined': 'grey',
	  'null': 'bold',
	  'string': 'green',
	  'date': 'magenta',
	  // "name": intentionally not styling
	  'regexp': 'red'
	};


	function stylizeWithColor(str, styleType) {
	  var style = inspect.styles[styleType];

	  if (style) {
	    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
	           '\u001b[' + inspect.colors[style][1] + 'm';
	  } else {
	    return str;
	  }
	}


	function stylizeNoColor(str, styleType) {
	  return str;
	}


	function arrayToHash(array) {
	  var hash = {};

	  array.forEach(function(val, idx) {
	    hash[val] = true;
	  });

	  return hash;
	}


	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (ctx.customInspect &&
	      value &&
	      isFunction(value.inspect) &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes, ctx);
	    if (!isString(ret)) {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // Look up the keys of the object.
	  var keys = Object.keys(value);
	  var visibleKeys = arrayToHash(keys);

	  if (ctx.showHidden) {
	    keys = Object.getOwnPropertyNames(value);
	  }

	  // IE doesn't make error fields non-enumerable
	  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
	  if (isError(value)
	      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
	    return formatError(value);
	  }

	  // Some type of object without properties can be shortcutted.
	  if (keys.length === 0) {
	    if (isFunction(value)) {
	      var name = value.name ? ': ' + value.name : '';
	      return ctx.stylize('[Function' + name + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (isFunction(value)) {
	    var n = value.name ? ': ' + value.name : '';
	    base = ' [Function' + n + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    base = ' ' + formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  if (isUndefined(value))
	    return ctx.stylize('undefined', 'undefined');
	  if (isString(value)) {
	    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                             .replace(/'/g, "\\'")
	                                             .replace(/\\"/g, '"') + '\'';
	    return ctx.stylize(simple, 'string');
	  }
	  if (isNumber(value))
	    return ctx.stylize('' + value, 'number');
	  if (isBoolean(value))
	    return ctx.stylize('' + value, 'boolean');
	  // For some reason typeof null is "object", so special case here.
	  if (isNull(value))
	    return ctx.stylize('null', 'null');
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (hasOwnProperty(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str, desc;
	  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
	  if (desc.get) {
	    if (desc.set) {
	      str = ctx.stylize('[Getter/Setter]', 'special');
	    } else {
	      str = ctx.stylize('[Getter]', 'special');
	    }
	  } else {
	    if (desc.set) {
	      str = ctx.stylize('[Setter]', 'special');
	    }
	  }
	  if (!hasOwnProperty(visibleKeys, key)) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(desc.value) < 0) {
	      if (isNull(recurseTimes)) {
	        str = formatValue(ctx, desc.value, null);
	      } else {
	        str = formatValue(ctx, desc.value, recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (isUndefined(name)) {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}


	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	exports.isBuffer = __webpack_require__(712);

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


	function pad(n) {
	  return n < 10 ? '0' + n.toString(10) : n.toString(10);
	}


	var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
	              'Oct', 'Nov', 'Dec'];

	// 26 Feb 16:19:34
	function timestamp() {
	  var d = new Date();
	  var time = [pad(d.getHours()),
	              pad(d.getMinutes()),
	              pad(d.getSeconds())].join(':');
	  return [d.getDate(), months[d.getMonth()], time].join(' ');
	}


	// log is just a thin wrapper to console.log that prepends a timestamp
	exports.log = function() {
	  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
	};


	/**
	 * Inherit the prototype methods from one constructor into another.
	 *
	 * The Function.prototype.inherits from lang.js rewritten as a standalone
	 * function (not on Function.prototype). NOTE: If this file is to be loaded
	 * during bootstrapping this function needs to be rewritten using some native
	 * functions as prototype setup using normal JavaScript does not work as
	 * expected during bootstrapping (see mirror.js in r114903).
	 *
	 * @param {function} ctor Constructor function which needs to inherit the
	 *     prototype.
	 * @param {function} superCtor Constructor function to inherit prototype from.
	 */
	exports.inherits = __webpack_require__(713);

	exports._extend = function(origin, add) {
	  // Don't do anything if add isn't an object
	  if (!add || !isObject(add)) return origin;

	  var keys = Object.keys(add);
	  var i = keys.length;
	  while (i--) {
	    origin[keys[i]] = add[keys[i]];
	  }
	  return origin;
	};

	function hasOwnProperty(obj, prop) {
	  return Object.prototype.hasOwnProperty.call(obj, prop);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698)))

/***/ },
/* 712 */
/***/ function(module, exports) {

	module.exports = function isBuffer(arg) {
	  return arg && typeof arg === 'object'
	    && typeof arg.copy === 'function'
	    && typeof arg.fill === 'function'
	    && typeof arg.readUInt8 === 'function';
	}

/***/ },
/* 713 */
/***/ function(module, exports) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 714 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
	 * in FIPS 180-2
	 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 *
	 */

	var inherits = __webpack_require__(711).inherits

	module.exports = function (Buffer, Hash) {

	  var K = [
	      0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
	      0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
	      0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
	      0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
	      0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
	      0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
	      0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
	      0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
	      0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
	      0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
	      0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
	      0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
	      0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
	      0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
	      0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
	      0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
	    ]

	  var W = new Array(64)

	  function Sha256() {
	    this.init()

	    this._w = W //new Array(64)

	    Hash.call(this, 16*4, 14*4)
	  }

	  inherits(Sha256, Hash)

	  Sha256.prototype.init = function () {

	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0

	    this._len = this._s = 0

	    return this
	  }

	  function S (X, n) {
	    return (X >>> n) | (X << (32 - n));
	  }

	  function R (X, n) {
	    return (X >>> n);
	  }

	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }

	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }

	  function Sigma0256 (x) {
	    return (S(x, 2) ^ S(x, 13) ^ S(x, 22));
	  }

	  function Sigma1256 (x) {
	    return (S(x, 6) ^ S(x, 11) ^ S(x, 25));
	  }

	  function Gamma0256 (x) {
	    return (S(x, 7) ^ S(x, 18) ^ R(x, 3));
	  }

	  function Gamma1256 (x) {
	    return (S(x, 17) ^ S(x, 19) ^ R(x, 10));
	  }

	  Sha256.prototype._update = function(M) {

	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var T1, T2

	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0

	    for (var j = 0; j < 64; j++) {
	      var w = W[j] = j < 16
	        ? M.readInt32BE(j * 4)
	        : Gamma1256(W[j - 2]) + W[j - 7] + Gamma0256(W[j - 15]) + W[j - 16]

	      T1 = h + Sigma1256(e) + Ch(e, f, g) + K[j] + w

	      T2 = Sigma0256(a) + Maj(a, b, c);
	      h = g; g = f; f = e; e = d + T1; d = c; c = b; b = a; a = T1 + T2;
	    }

	    this._a = (a + this._a) | 0
	    this._b = (b + this._b) | 0
	    this._c = (c + this._c) | 0
	    this._d = (d + this._d) | 0
	    this._e = (e + this._e) | 0
	    this._f = (f + this._f) | 0
	    this._g = (g + this._g) | 0
	    this._h = (h + this._h) | 0

	  };

	  Sha256.prototype._hash = function () {
	    var H = new Buffer(32)

	    H.writeInt32BE(this._a,  0)
	    H.writeInt32BE(this._b,  4)
	    H.writeInt32BE(this._c,  8)
	    H.writeInt32BE(this._d, 12)
	    H.writeInt32BE(this._e, 16)
	    H.writeInt32BE(this._f, 20)
	    H.writeInt32BE(this._g, 24)
	    H.writeInt32BE(this._h, 28)

	    return H
	  }

	  return Sha256

	}


/***/ },
/* 715 */
/***/ function(module, exports, __webpack_require__) {

	var inherits = __webpack_require__(711).inherits

	module.exports = function (Buffer, Hash) {
	  var K = [
	    0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
	    0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
	    0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
	    0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
	    0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
	    0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
	    0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
	    0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
	    0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
	    0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
	    0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
	    0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
	    0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
	    0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
	    0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
	    0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
	    0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
	    0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
	    0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
	    0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
	    0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
	    0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
	    0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
	    0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
	    0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
	    0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
	    0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
	    0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
	    0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
	    0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
	    0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
	    0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
	    0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
	    0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
	    0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
	    0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
	    0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
	    0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
	    0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
	    0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
	  ]

	  var W = new Array(160)

	  function Sha512() {
	    this.init()
	    this._w = W

	    Hash.call(this, 128, 112)
	  }

	  inherits(Sha512, Hash)

	  Sha512.prototype.init = function () {

	    this._a = 0x6a09e667|0
	    this._b = 0xbb67ae85|0
	    this._c = 0x3c6ef372|0
	    this._d = 0xa54ff53a|0
	    this._e = 0x510e527f|0
	    this._f = 0x9b05688c|0
	    this._g = 0x1f83d9ab|0
	    this._h = 0x5be0cd19|0

	    this._al = 0xf3bcc908|0
	    this._bl = 0x84caa73b|0
	    this._cl = 0xfe94f82b|0
	    this._dl = 0x5f1d36f1|0
	    this._el = 0xade682d1|0
	    this._fl = 0x2b3e6c1f|0
	    this._gl = 0xfb41bd6b|0
	    this._hl = 0x137e2179|0

	    this._len = this._s = 0

	    return this
	  }

	  function S (X, Xl, n) {
	    return (X >>> n) | (Xl << (32 - n))
	  }

	  function Ch (x, y, z) {
	    return ((x & y) ^ ((~x) & z));
	  }

	  function Maj (x, y, z) {
	    return ((x & y) ^ (x & z) ^ (y & z));
	  }

	  Sha512.prototype._update = function(M) {

	    var W = this._w
	    var a, b, c, d, e, f, g, h
	    var al, bl, cl, dl, el, fl, gl, hl

	    a = this._a | 0
	    b = this._b | 0
	    c = this._c | 0
	    d = this._d | 0
	    e = this._e | 0
	    f = this._f | 0
	    g = this._g | 0
	    h = this._h | 0

	    al = this._al | 0
	    bl = this._bl | 0
	    cl = this._cl | 0
	    dl = this._dl | 0
	    el = this._el | 0
	    fl = this._fl | 0
	    gl = this._gl | 0
	    hl = this._hl | 0

	    for (var i = 0; i < 80; i++) {
	      var j = i * 2

	      var Wi, Wil

	      if (i < 16) {
	        Wi = W[j] = M.readInt32BE(j * 4)
	        Wil = W[j + 1] = M.readInt32BE(j * 4 + 4)

	      } else {
	        var x  = W[j - 15*2]
	        var xl = W[j - 15*2 + 1]
	        var gamma0  = S(x, xl, 1) ^ S(x, xl, 8) ^ (x >>> 7)
	        var gamma0l = S(xl, x, 1) ^ S(xl, x, 8) ^ S(xl, x, 7)

	        x  = W[j - 2*2]
	        xl = W[j - 2*2 + 1]
	        var gamma1  = S(x, xl, 19) ^ S(xl, x, 29) ^ (x >>> 6)
	        var gamma1l = S(xl, x, 19) ^ S(x, xl, 29) ^ S(xl, x, 6)

	        // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
	        var Wi7  = W[j - 7*2]
	        var Wi7l = W[j - 7*2 + 1]

	        var Wi16  = W[j - 16*2]
	        var Wi16l = W[j - 16*2 + 1]

	        Wil = gamma0l + Wi7l
	        Wi  = gamma0  + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)
	        Wil = Wil + gamma1l
	        Wi  = Wi  + gamma1  + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)
	        Wil = Wil + Wi16l
	        Wi  = Wi  + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)

	        W[j] = Wi
	        W[j + 1] = Wil
	      }

	      var maj = Maj(a, b, c)
	      var majl = Maj(al, bl, cl)

	      var sigma0h = S(a, al, 28) ^ S(al, a, 2) ^ S(al, a, 7)
	      var sigma0l = S(al, a, 28) ^ S(a, al, 2) ^ S(a, al, 7)
	      var sigma1h = S(e, el, 14) ^ S(e, el, 18) ^ S(el, e, 9)
	      var sigma1l = S(el, e, 14) ^ S(el, e, 18) ^ S(e, el, 9)

	      // t1 = h + sigma1 + ch + K[i] + W[i]
	      var Ki = K[j]
	      var Kil = K[j + 1]

	      var ch = Ch(e, f, g)
	      var chl = Ch(el, fl, gl)

	      var t1l = hl + sigma1l
	      var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)
	      t1l = t1l + chl
	      t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)
	      t1l = t1l + Kil
	      t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)
	      t1l = t1l + Wil
	      t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)

	      // t2 = sigma0 + maj
	      var t2l = sigma0l + majl
	      var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)

	      h  = g
	      hl = gl
	      g  = f
	      gl = fl
	      f  = e
	      fl = el
	      el = (dl + t1l) | 0
	      e  = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	      d  = c
	      dl = cl
	      c  = b
	      cl = bl
	      b  = a
	      bl = al
	      al = (t1l + t2l) | 0
	      a  = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0
	    }

	    this._al = (this._al + al) | 0
	    this._bl = (this._bl + bl) | 0
	    this._cl = (this._cl + cl) | 0
	    this._dl = (this._dl + dl) | 0
	    this._el = (this._el + el) | 0
	    this._fl = (this._fl + fl) | 0
	    this._gl = (this._gl + gl) | 0
	    this._hl = (this._hl + hl) | 0

	    this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0
	    this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0
	    this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0
	    this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0
	    this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0
	    this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0
	    this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0
	    this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0
	  }

	  Sha512.prototype._hash = function () {
	    var H = new Buffer(64)

	    function writeInt64BE(h, l, offset) {
	      H.writeInt32BE(h, offset)
	      H.writeInt32BE(l, offset + 4)
	    }

	    writeInt64BE(this._a, this._al, 0)
	    writeInt64BE(this._b, this._bl, 8)
	    writeInt64BE(this._c, this._cl, 16)
	    writeInt64BE(this._d, this._dl, 24)
	    writeInt64BE(this._e, this._el, 32)
	    writeInt64BE(this._f, this._fl, 40)
	    writeInt64BE(this._g, this._gl, 48)
	    writeInt64BE(this._h, this._hl, 56)

	    return H
	  }

	  return Sha512

	}


/***/ },
/* 716 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */

	var helpers = __webpack_require__(717);

	/*
	 * Calculate the MD5 of an array of little-endian words, and a bit length
	 */
	function core_md5(x, len)
	{
	  /* append padding */
	  x[len >> 5] |= 0x80 << ((len) % 32);
	  x[(((len + 64) >>> 9) << 4) + 14] = len;

	  var a =  1732584193;
	  var b = -271733879;
	  var c = -1732584194;
	  var d =  271733878;

	  for(var i = 0; i < x.length; i += 16)
	  {
	    var olda = a;
	    var oldb = b;
	    var oldc = c;
	    var oldd = d;

	    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
	    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
	    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
	    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
	    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
	    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
	    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
	    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
	    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
	    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
	    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
	    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
	    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
	    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
	    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
	    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

	    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
	    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
	    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
	    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
	    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
	    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
	    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
	    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
	    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
	    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
	    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
	    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
	    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
	    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
	    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
	    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

	    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
	    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
	    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
	    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
	    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
	    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
	    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
	    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
	    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
	    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
	    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
	    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
	    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
	    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
	    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
	    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

	    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
	    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
	    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
	    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
	    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
	    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
	    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
	    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
	    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
	    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
	    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
	    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
	    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
	    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
	    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
	    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

	    a = safe_add(a, olda);
	    b = safe_add(b, oldb);
	    c = safe_add(c, oldc);
	    d = safe_add(d, oldd);
	  }
	  return Array(a, b, c, d);

	}

	/*
	 * These functions implement the four basic operations the algorithm uses.
	 */
	function md5_cmn(q, a, b, x, s, t)
	{
	  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
	}
	function md5_ff(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
	}
	function md5_gg(a, b, c, d, x, s, t)
	{
	  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
	}
	function md5_hh(a, b, c, d, x, s, t)
	{
	  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	}
	function md5_ii(a, b, c, d, x, s, t)
	{
	  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
	}

	/*
	 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	 * to work around bugs in some JS interpreters.
	 */
	function safe_add(x, y)
	{
	  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	  return (msw << 16) | (lsw & 0xFFFF);
	}

	/*
	 * Bitwise rotate a 32-bit number to the left.
	 */
	function bit_rol(num, cnt)
	{
	  return (num << cnt) | (num >>> (32 - cnt));
	}

	module.exports = function md5(buf) {
	  return helpers.hash(buf, core_md5, 16);
	};


/***/ },
/* 717 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var intSize = 4;
	var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
	var chrsz = 8;

	function toArray(buf, bigEndian) {
	  if ((buf.length % intSize) !== 0) {
	    var len = buf.length + (intSize - (buf.length % intSize));
	    buf = Buffer.concat([buf, zeroBuffer], len);
	  }

	  var arr = [];
	  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
	  for (var i = 0; i < buf.length; i += intSize) {
	    arr.push(fn.call(buf, i));
	  }
	  return arr;
	}

	function toBuffer(arr, size, bigEndian) {
	  var buf = new Buffer(size);
	  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
	  for (var i = 0; i < arr.length; i++) {
	    fn.call(buf, arr[i], i * 4, true);
	  }
	  return buf;
	}

	function hash(buf, fn, hashSize, bigEndian) {
	  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
	  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
	  return toBuffer(arr, hashSize, bigEndian);
	}

	module.exports = { hash: hash };

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer))

/***/ },
/* 718 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {
	module.exports = ripemd160



	/*
	CryptoJS v3.1.2
	code.google.com/p/crypto-js
	(c) 2009-2013 by Jeff Mott. All rights reserved.
	code.google.com/p/crypto-js/wiki/License
	*/
	/** @preserve
	(c) 2012 by Cédric Mesnil. All rights reserved.

	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
	    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/

	// Constants table
	var zl = [
	    0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
	    7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,
	    3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,
	    1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,
	    4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13];
	var zr = [
	    5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,
	    6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,
	    15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,
	    8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,
	    12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11];
	var sl = [
	     11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,
	    7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,
	    11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,
	      11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,
	    9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ];
	var sr = [
	    8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,
	    9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,
	    9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,
	    15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,
	    8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ];

	var hl =  [ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E];
	var hr =  [ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000];

	var bytesToWords = function (bytes) {
	  var words = [];
	  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {
	    words[b >>> 5] |= bytes[i] << (24 - b % 32);
	  }
	  return words;
	};

	var wordsToBytes = function (words) {
	  var bytes = [];
	  for (var b = 0; b < words.length * 32; b += 8) {
	    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
	  }
	  return bytes;
	};

	var processBlock = function (H, M, offset) {

	  // Swap endian
	  for (var i = 0; i < 16; i++) {
	    var offset_i = offset + i;
	    var M_offset_i = M[offset_i];

	    // Swap
	    M[offset_i] = (
	        (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |
	        (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)
	    );
	  }

	  // Working variables
	  var al, bl, cl, dl, el;
	  var ar, br, cr, dr, er;

	  ar = al = H[0];
	  br = bl = H[1];
	  cr = cl = H[2];
	  dr = dl = H[3];
	  er = el = H[4];
	  // Computation
	  var t;
	  for (var i = 0; i < 80; i += 1) {
	    t = (al +  M[offset+zl[i]])|0;
	    if (i<16){
	        t +=  f1(bl,cl,dl) + hl[0];
	    } else if (i<32) {
	        t +=  f2(bl,cl,dl) + hl[1];
	    } else if (i<48) {
	        t +=  f3(bl,cl,dl) + hl[2];
	    } else if (i<64) {
	        t +=  f4(bl,cl,dl) + hl[3];
	    } else {// if (i<80) {
	        t +=  f5(bl,cl,dl) + hl[4];
	    }
	    t = t|0;
	    t =  rotl(t,sl[i]);
	    t = (t+el)|0;
	    al = el;
	    el = dl;
	    dl = rotl(cl, 10);
	    cl = bl;
	    bl = t;

	    t = (ar + M[offset+zr[i]])|0;
	    if (i<16){
	        t +=  f5(br,cr,dr) + hr[0];
	    } else if (i<32) {
	        t +=  f4(br,cr,dr) + hr[1];
	    } else if (i<48) {
	        t +=  f3(br,cr,dr) + hr[2];
	    } else if (i<64) {
	        t +=  f2(br,cr,dr) + hr[3];
	    } else {// if (i<80) {
	        t +=  f1(br,cr,dr) + hr[4];
	    }
	    t = t|0;
	    t =  rotl(t,sr[i]) ;
	    t = (t+er)|0;
	    ar = er;
	    er = dr;
	    dr = rotl(cr, 10);
	    cr = br;
	    br = t;
	  }
	  // Intermediate hash value
	  t    = (H[1] + cl + dr)|0;
	  H[1] = (H[2] + dl + er)|0;
	  H[2] = (H[3] + el + ar)|0;
	  H[3] = (H[4] + al + br)|0;
	  H[4] = (H[0] + bl + cr)|0;
	  H[0] =  t;
	};

	function f1(x, y, z) {
	  return ((x) ^ (y) ^ (z));
	}

	function f2(x, y, z) {
	  return (((x)&(y)) | ((~x)&(z)));
	}

	function f3(x, y, z) {
	  return (((x) | (~(y))) ^ (z));
	}

	function f4(x, y, z) {
	  return (((x) & (z)) | ((y)&(~(z))));
	}

	function f5(x, y, z) {
	  return ((x) ^ ((y) |(~(z))));
	}

	function rotl(x,n) {
	  return (x<<n) | (x>>>(32-n));
	}

	function ripemd160(message) {
	  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];

	  if (typeof message == 'string')
	    message = new Buffer(message, 'utf8');

	  var m = bytesToWords(message);

	  var nBitsLeft = message.length * 8;
	  var nBitsTotal = message.length * 8;

	  // Add padding
	  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);
	  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (
	      (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |
	      (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)
	  );

	  for (var i=0 ; i<m.length; i += 16) {
	    processBlock(H, m, i);
	  }

	  // Swap endian
	  for (var i = 0; i < 5; i++) {
	      // Shortcut
	    var H_i = H[i];

	    // Swap
	    H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |
	          (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);
	  }

	  var digestbytes = wordsToBytes(H);
	  return new Buffer(digestbytes);
	}



	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer))

/***/ },
/* 719 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(707)

	var zeroBuffer = new Buffer(128)
	zeroBuffer.fill(0)

	module.exports = Hmac

	function Hmac (alg, key) {
	  if(!(this instanceof Hmac)) return new Hmac(alg, key)
	  this._opad = opad
	  this._alg = alg

	  var blocksize = (alg === 'sha512') ? 128 : 64

	  key = this._key = !Buffer.isBuffer(key) ? new Buffer(key) : key

	  if(key.length > blocksize) {
	    key = createHash(alg).update(key).digest()
	  } else if(key.length < blocksize) {
	    key = Buffer.concat([key, zeroBuffer], blocksize)
	  }

	  var ipad = this._ipad = new Buffer(blocksize)
	  var opad = this._opad = new Buffer(blocksize)

	  for(var i = 0; i < blocksize; i++) {
	    ipad[i] = key[i] ^ 0x36
	    opad[i] = key[i] ^ 0x5C
	  }

	  this._hash = createHash(alg).update(ipad)
	}

	Hmac.prototype.update = function (data, enc) {
	  this._hash.update(data, enc)
	  return this
	}

	Hmac.prototype.digest = function (enc) {
	  var h = this._hash.digest()
	  return createHash(this._alg).update(this._opad).update(h).digest(enc)
	}


	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer))

/***/ },
/* 720 */
/***/ function(module, exports, __webpack_require__) {

	var pbkdf2Export = __webpack_require__(721)

	module.exports = function (crypto, exports) {
	  exports = exports || {}

	  var exported = pbkdf2Export(crypto)

	  exports.pbkdf2 = exported.pbkdf2
	  exports.pbkdf2Sync = exported.pbkdf2Sync

	  return exports
	}


/***/ },
/* 721 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function(crypto) {
	  function pbkdf2(password, salt, iterations, keylen, digest, callback) {
	    if ('function' === typeof digest) {
	      callback = digest
	      digest = undefined
	    }

	    if ('function' !== typeof callback)
	      throw new Error('No callback provided to pbkdf2')

	    setTimeout(function() {
	      var result

	      try {
	        result = pbkdf2Sync(password, salt, iterations, keylen, digest)
	      } catch (e) {
	        return callback(e)
	      }

	      callback(undefined, result)
	    })
	  }

	  function pbkdf2Sync(password, salt, iterations, keylen, digest) {
	    if ('number' !== typeof iterations)
	      throw new TypeError('Iterations not a number')

	    if (iterations < 0)
	      throw new TypeError('Bad iterations')

	    if ('number' !== typeof keylen)
	      throw new TypeError('Key length not a number')

	    if (keylen < 0)
	      throw new TypeError('Bad key length')

	    digest = digest || 'sha1'

	    if (!Buffer.isBuffer(password)) password = new Buffer(password)
	    if (!Buffer.isBuffer(salt)) salt = new Buffer(salt)

	    var hLen, l = 1, r, T
	    var DK = new Buffer(keylen)
	    var block1 = new Buffer(salt.length + 4)
	    salt.copy(block1, 0, 0, salt.length)

	    for (var i = 1; i <= l; i++) {
	      block1.writeUInt32BE(i, salt.length)

	      var U = crypto.createHmac(digest, password).update(block1).digest()

	      if (!hLen) {
	        hLen = U.length
	        T = new Buffer(hLen)
	        l = Math.ceil(keylen / hLen)
	        r = keylen - (l - 1) * hLen

	        if (keylen > (Math.pow(2, 32) - 1) * hLen)
	          throw new TypeError('keylen exceeds maximum length')
	      }

	      U.copy(T, 0, 0, hLen)

	      for (var j = 1; j < iterations; j++) {
	        U = crypto.createHmac(digest, password).update(U).digest()

	        for (var k = 0; k < hLen; k++) {
	          T[k] ^= U[k]
	        }
	      }

	      var destPos = (i - 1) * hLen
	      var len = (i == l ? r : hLen)
	      T.copy(DK, destPos, 0, len)
	    }

	    return DK
	  }

	  return {
	    pbkdf2: pbkdf2,
	    pbkdf2Sync: pbkdf2Sync
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(701).Buffer))

/***/ },
/* 722 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, global) {if (typeof Promise === 'undefined')
	  __webpack_require__(723);

	var version = __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"./package.json\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())).version;

	var isWindows = typeof process.platform != 'undefined' && process.platform.match(/^win/);

	// set transpiler paths in Node
	var nodeResolver = typeof process != 'undefined' && "function" != 'undefined' && __webpack_require__(725).resolve;
	function configNodePath(loader, module, nodeModule, wildcard) {
	  if (loader.paths[module])
	    return;

	  var ext = wildcard ? '/package.json' : '';
	  try {
	    var match = nodeResolver(nodeModule + ext).replace(/\\/g, '/');
	  }
	  catch(e) {}
	  
	  if (match)
	    loader.paths[module] = 'file://' + (isWindows ? '/' : '') + match.substr(0, match.length - ext.length) + (wildcard ? '/*.js' : '');
	}

	var SystemJSLoader = __webpack_require__(740).constructor;

	// standard class extend SystemJSLoader to SystemJSNodeLoader
	function SystemJSNodeLoader() {
	  SystemJSLoader.call(this);

	  if (nodeResolver) {
	    configNodePath(this, 'traceur', 'traceur/bin/traceur.js');
	    configNodePath(this, 'traceur-runtime', 'traceur/bin/traceur-runtime.js');
	    configNodePath(this, 'babel', 'babel-core/browser.js');
	    configNodePath(this, 'babel/external-helpers', 'babel-core/external-helpers.js');
	    configNodePath(this, 'babel-runtime/*', 'babel-runtime', true);
	  }
	}
	SystemJSNodeLoader.prototype = Object.create(SystemJSLoader.prototype);
	SystemJSNodeLoader.prototype.constructor = SystemJSNodeLoader;

	var System = new SystemJSNodeLoader();

	System.version = version + ' Node';

	if (typeof global != 'undefined')
	  global.System = global.SystemJS = System;

	module.exports = System;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(698), (function() { return this; }())))

/***/ },
/* 723 */
/***/ function(module, exports, __webpack_require__) {

	var require;var require;/* WEBPACK VAR INJECTION */(function(global, process) {!function(e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):"undefined"!=typeof window?window.Promise=e():"undefined"!=typeof global?global.Promise=e():"undefined"!=typeof self&&(self.Promise=e())}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	/**
	 * ES6 global Promise shim
	 */
	var unhandledRejections = require('../lib/decorators/unhandledRejection');
	var PromiseConstructor = unhandledRejections(require('../lib/Promise'));

	module.exports = typeof global != 'undefined' ? (global.Promise = PromiseConstructor)
		           : typeof self   != 'undefined' ? (self.Promise   = PromiseConstructor)
		           : PromiseConstructor;

	},{"../lib/Promise":2,"../lib/decorators/unhandledRejection":4}],2:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function (require) {

		var makePromise = require('./makePromise');
		var Scheduler = require('./Scheduler');
		var async = require('./env').asap;

		return makePromise({
			scheduler: new Scheduler(async)
		});

	});
	})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });

	},{"./Scheduler":3,"./env":5,"./makePromise":7}],3:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function() {

		// Credit to Twisol (https://github.com/Twisol) for suggesting
		// this type of extensible queue + trampoline approach for next-tick conflation.

		/**
		 * Async task scheduler
		 * @param {function} async function to schedule a single async function
		 * @constructor
		 */
		function Scheduler(async) {
			this._async = async;
			this._running = false;

			this._queue = this;
			this._queueLen = 0;
			this._afterQueue = {};
			this._afterQueueLen = 0;

			var self = this;
			this.drain = function() {
				self._drain();
			};
		}

		/**
		 * Enqueue a task
		 * @param {{ run:function }} task
		 */
		Scheduler.prototype.enqueue = function(task) {
			this._queue[this._queueLen++] = task;
			this.run();
		};

		/**
		 * Enqueue a task to run after the main task queue
		 * @param {{ run:function }} task
		 */
		Scheduler.prototype.afterQueue = function(task) {
			this._afterQueue[this._afterQueueLen++] = task;
			this.run();
		};

		Scheduler.prototype.run = function() {
			if (!this._running) {
				this._running = true;
				this._async(this.drain);
			}
		};

		/**
		 * Drain the handler queue entirely, and then the after queue
		 */
		Scheduler.prototype._drain = function() {
			var i = 0;
			for (; i < this._queueLen; ++i) {
				this._queue[i].run();
				this._queue[i] = void 0;
			}

			this._queueLen = 0;
			this._running = false;

			for (i = 0; i < this._afterQueueLen; ++i) {
				this._afterQueue[i].run();
				this._afterQueue[i] = void 0;
			}

			this._afterQueueLen = 0;
		};

		return Scheduler;

	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));

	},{}],4:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function(require) {

		var setTimer = require('../env').setTimer;
		var format = require('../format');

		return function unhandledRejection(Promise) {

			var logError = noop;
			var logInfo = noop;
			var localConsole;

			if(typeof console !== 'undefined') {
				// Alias console to prevent things like uglify's drop_console option from
				// removing console.log/error. Unhandled rejections fall into the same
				// category as uncaught exceptions, and build tools shouldn't silence them.
				localConsole = console;
				logError = typeof localConsole.error !== 'undefined'
					? function (e) { localConsole.error(e); }
					: function (e) { localConsole.log(e); };

				logInfo = typeof localConsole.info !== 'undefined'
					? function (e) { localConsole.info(e); }
					: function (e) { localConsole.log(e); };
			}

			Promise.onPotentiallyUnhandledRejection = function(rejection) {
				enqueue(report, rejection);
			};

			Promise.onPotentiallyUnhandledRejectionHandled = function(rejection) {
				enqueue(unreport, rejection);
			};

			Promise.onFatalRejection = function(rejection) {
				enqueue(throwit, rejection.value);
			};

			var tasks = [];
			var reported = [];
			var running = null;

			function report(r) {
				if(!r.handled) {
					reported.push(r);
					logError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));
				}
			}

			function unreport(r) {
				var i = reported.indexOf(r);
				if(i >= 0) {
					reported.splice(i, 1);
					logInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));
				}
			}

			function enqueue(f, x) {
				tasks.push(f, x);
				if(running === null) {
					running = setTimer(flush, 0);
				}
			}

			function flush() {
				running = null;
				while(tasks.length > 0) {
					tasks.shift()(tasks.shift());
				}
			}

			return Promise;
		};

		function throwit(e) {
			throw e;
		}

		function noop() {}

	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));

	},{"../env":5,"../format":6}],5:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	/*global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver*/
	(function(define) { 'use strict';
	define(function(require) {
		/*jshint maxcomplexity:6*/

		// Sniff "best" async scheduling option
		// Prefer process.nextTick or MutationObserver, then check for
		// setTimeout, and finally vertx, since its the only env that doesn't
		// have setTimeout

		var MutationObs;
		var capturedSetTimeout = typeof setTimeout !== 'undefined' && setTimeout;

		// Default env
		var setTimer = function(f, ms) { return setTimeout(f, ms); };
		var clearTimer = function(t) { return clearTimeout(t); };
		var asap = function (f) { return capturedSetTimeout(f, 0); };

		// Detect specific env
		if (isNode()) { // Node
			asap = function (f) { return process.nextTick(f); };

		} else if (MutationObs = hasMutationObserver()) { // Modern browser
			asap = initMutationObserver(MutationObs);

		} else if (!capturedSetTimeout) { // vert.x
			var vertxRequire = require;
			var vertx = vertxRequire('vertx');
			setTimer = function (f, ms) { return vertx.setTimer(ms, f); };
			clearTimer = vertx.cancelTimer;
			asap = vertx.runOnLoop || vertx.runOnContext;
		}

		return {
			setTimer: setTimer,
			clearTimer: clearTimer,
			asap: asap
		};

		function isNode () {
			return typeof process !== 'undefined' &&
				Object.prototype.toString.call(process) === '[object process]';
		}

		function hasMutationObserver () {
			return (typeof MutationObserver === 'function' && MutationObserver) ||
				(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver);
		}

		function initMutationObserver(MutationObserver) {
			var scheduled;
			var node = document.createTextNode('');
			var o = new MutationObserver(run);
			o.observe(node, { characterData: true });

			function run() {
				var f = scheduled;
				scheduled = void 0;
				f();
			}

			var i = 0;
			return function (f) {
				scheduled = f;
				node.data = (i ^= 1);
			};
		}
	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));

	},{}],6:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function() {

		return {
			formatError: formatError,
			formatObject: formatObject,
			tryStringify: tryStringify
		};

		/**
		 * Format an error into a string.  If e is an Error and has a stack property,
		 * it's returned.  Otherwise, e is formatted using formatObject, with a
		 * warning added about e not being a proper Error.
		 * @param {*} e
		 * @returns {String} formatted string, suitable for output to developers
		 */
		function formatError(e) {
			var s = typeof e === 'object' && e !== null && (e.stack || e.message) ? e.stack || e.message : formatObject(e);
			return e instanceof Error ? s : s + ' (WARNING: non-Error used)';
		}

		/**
		 * Format an object, detecting "plain" objects and running them through
		 * JSON.stringify if possible.
		 * @param {Object} o
		 * @returns {string}
		 */
		function formatObject(o) {
			var s = String(o);
			if(s === '[object Object]' && typeof JSON !== 'undefined') {
				s = tryStringify(o, s);
			}
			return s;
		}

		/**
		 * Try to return the result of JSON.stringify(x).  If that fails, return
		 * defaultValue
		 * @param {*} x
		 * @param {*} defaultValue
		 * @returns {String|*} JSON.stringify(x) or defaultValue
		 */
		function tryStringify(x, defaultValue) {
			try {
				return JSON.stringify(x);
			} catch(e) {
				return defaultValue;
			}
		}

	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));

	},{}],7:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function() {

		return function makePromise(environment) {

			var tasks = environment.scheduler;
			var emitRejection = initEmitRejection();

			var objectCreate = Object.create ||
				function(proto) {
					function Child() {}
					Child.prototype = proto;
					return new Child();
				};

			/**
			 * Create a promise whose fate is determined by resolver
			 * @constructor
			 * @returns {Promise} promise
			 * @name Promise
			 */
			function Promise(resolver, handler) {
				this._handler = resolver === Handler ? handler : init(resolver);
			}

			/**
			 * Run the supplied resolver
			 * @param resolver
			 * @returns {Pending}
			 */
			function init(resolver) {
				var handler = new Pending();

				try {
					resolver(promiseResolve, promiseReject, promiseNotify);
				} catch (e) {
					promiseReject(e);
				}

				return handler;

				/**
				 * Transition from pre-resolution state to post-resolution state, notifying
				 * all listeners of the ultimate fulfillment or rejection
				 * @param {*} x resolution value
				 */
				function promiseResolve (x) {
					handler.resolve(x);
				}
				/**
				 * Reject this promise with reason, which will be used verbatim
				 * @param {Error|*} reason rejection reason, strongly suggested
				 *   to be an Error type
				 */
				function promiseReject (reason) {
					handler.reject(reason);
				}

				/**
				 * @deprecated
				 * Issue a progress event, notifying all progress listeners
				 * @param {*} x progress event payload to pass to all listeners
				 */
				function promiseNotify (x) {
					handler.notify(x);
				}
			}

			// Creation

			Promise.resolve = resolve;
			Promise.reject = reject;
			Promise.never = never;

			Promise._defer = defer;
			Promise._handler = getHandler;

			/**
			 * Returns a trusted promise. If x is already a trusted promise, it is
			 * returned, otherwise returns a new trusted Promise which follows x.
			 * @param  {*} x
			 * @return {Promise} promise
			 */
			function resolve(x) {
				return isPromise(x) ? x
					: new Promise(Handler, new Async(getHandler(x)));
			}

			/**
			 * Return a reject promise with x as its reason (x is used verbatim)
			 * @param {*} x
			 * @returns {Promise} rejected promise
			 */
			function reject(x) {
				return new Promise(Handler, new Async(new Rejected(x)));
			}

			/**
			 * Return a promise that remains pending forever
			 * @returns {Promise} forever-pending promise.
			 */
			function never() {
				return foreverPendingPromise; // Should be frozen
			}

			/**
			 * Creates an internal {promise, resolver} pair
			 * @private
			 * @returns {Promise}
			 */
			function defer() {
				return new Promise(Handler, new Pending());
			}

			// Transformation and flow control

			/**
			 * Transform this promise's fulfillment value, returning a new Promise
			 * for the transformed result.  If the promise cannot be fulfilled, onRejected
			 * is called with the reason.  onProgress *may* be called with updates toward
			 * this promise's fulfillment.
			 * @param {function=} onFulfilled fulfillment handler
			 * @param {function=} onRejected rejection handler
			 * @param {function=} onProgress @deprecated progress handler
			 * @return {Promise} new promise
			 */
			Promise.prototype.then = function(onFulfilled, onRejected, onProgress) {
				var parent = this._handler;
				var state = parent.join().state();

				if ((typeof onFulfilled !== 'function' && state > 0) ||
					(typeof onRejected !== 'function' && state < 0)) {
					// Short circuit: value will not change, simply share handler
					return new this.constructor(Handler, parent);
				}

				var p = this._beget();
				var child = p._handler;

				parent.chain(child, parent.receiver, onFulfilled, onRejected, onProgress);

				return p;
			};

			/**
			 * If this promise cannot be fulfilled due to an error, call onRejected to
			 * handle the error. Shortcut for .then(undefined, onRejected)
			 * @param {function?} onRejected
			 * @return {Promise}
			 */
			Promise.prototype['catch'] = function(onRejected) {
				return this.then(void 0, onRejected);
			};

			/**
			 * Creates a new, pending promise of the same type as this promise
			 * @private
			 * @returns {Promise}
			 */
			Promise.prototype._beget = function() {
				return begetFrom(this._handler, this.constructor);
			};

			function begetFrom(parent, Promise) {
				var child = new Pending(parent.receiver, parent.join().context);
				return new Promise(Handler, child);
			}

			// Array combinators

			Promise.all = all;
			Promise.race = race;
			Promise._traverse = traverse;

			/**
			 * Return a promise that will fulfill when all promises in the
			 * input array have fulfilled, or will reject when one of the
			 * promises rejects.
			 * @param {array} promises array of promises
			 * @returns {Promise} promise for array of fulfillment values
			 */
			function all(promises) {
				return traverseWith(snd, null, promises);
			}

			/**
			 * Array<Promise<X>> -> Promise<Array<f(X)>>
			 * @private
			 * @param {function} f function to apply to each promise's value
			 * @param {Array} promises array of promises
			 * @returns {Promise} promise for transformed values
			 */
			function traverse(f, promises) {
				return traverseWith(tryCatch2, f, promises);
			}

			function traverseWith(tryMap, f, promises) {
				var handler = typeof f === 'function' ? mapAt : settleAt;

				var resolver = new Pending();
				var pending = promises.length >>> 0;
				var results = new Array(pending);

				for (var i = 0, x; i < promises.length && !resolver.resolved; ++i) {
					x = promises[i];

					if (x === void 0 && !(i in promises)) {
						--pending;
						continue;
					}

					traverseAt(promises, handler, i, x, resolver);
				}

				if(pending === 0) {
					resolver.become(new Fulfilled(results));
				}

				return new Promise(Handler, resolver);

				function mapAt(i, x, resolver) {
					if(!resolver.resolved) {
						traverseAt(promises, settleAt, i, tryMap(f, x, i), resolver);
					}
				}

				function settleAt(i, x, resolver) {
					results[i] = x;
					if(--pending === 0) {
						resolver.become(new Fulfilled(results));
					}
				}
			}

			function traverseAt(promises, handler, i, x, resolver) {
				if (maybeThenable(x)) {
					var h = getHandlerMaybeThenable(x);
					var s = h.state();

					if (s === 0) {
						h.fold(handler, i, void 0, resolver);
					} else if (s > 0) {
						handler(i, h.value, resolver);
					} else {
						resolver.become(h);
						visitRemaining(promises, i+1, h);
					}
				} else {
					handler(i, x, resolver);
				}
			}

			Promise._visitRemaining = visitRemaining;
			function visitRemaining(promises, start, handler) {
				for(var i=start; i<promises.length; ++i) {
					markAsHandled(getHandler(promises[i]), handler);
				}
			}

			function markAsHandled(h, handler) {
				if(h === handler) {
					return;
				}

				var s = h.state();
				if(s === 0) {
					h.visit(h, void 0, h._unreport);
				} else if(s < 0) {
					h._unreport();
				}
			}

			/**
			 * Fulfill-reject competitive race. Return a promise that will settle
			 * to the same state as the earliest input promise to settle.
			 *
			 * WARNING: The ES6 Promise spec requires that race()ing an empty array
			 * must return a promise that is pending forever.  This implementation
			 * returns a singleton forever-pending promise, the same singleton that is
			 * returned by Promise.never(), thus can be checked with ===
			 *
			 * @param {array} promises array of promises to race
			 * @returns {Promise} if input is non-empty, a promise that will settle
			 * to the same outcome as the earliest input promise to settle. if empty
			 * is empty, returns a promise that will never settle.
			 */
			function race(promises) {
				if(typeof promises !== 'object' || promises === null) {
					return reject(new TypeError('non-iterable passed to race()'));
				}

				// Sigh, race([]) is untestable unless we return *something*
				// that is recognizable without calling .then() on it.
				return promises.length === 0 ? never()
					 : promises.length === 1 ? resolve(promises[0])
					 : runRace(promises);
			}

			function runRace(promises) {
				var resolver = new Pending();
				var i, x, h;
				for(i=0; i<promises.length; ++i) {
					x = promises[i];
					if (x === void 0 && !(i in promises)) {
						continue;
					}

					h = getHandler(x);
					if(h.state() !== 0) {
						resolver.become(h);
						visitRemaining(promises, i+1, h);
						break;
					} else {
						h.visit(resolver, resolver.resolve, resolver.reject);
					}
				}
				return new Promise(Handler, resolver);
			}

			// Promise internals
			// Below this, everything is @private

			/**
			 * Get an appropriate handler for x, without checking for cycles
			 * @param {*} x
			 * @returns {object} handler
			 */
			function getHandler(x) {
				if(isPromise(x)) {
					return x._handler.join();
				}
				return maybeThenable(x) ? getHandlerUntrusted(x) : new Fulfilled(x);
			}

			/**
			 * Get a handler for thenable x.
			 * NOTE: You must only call this if maybeThenable(x) == true
			 * @param {object|function|Promise} x
			 * @returns {object} handler
			 */
			function getHandlerMaybeThenable(x) {
				return isPromise(x) ? x._handler.join() : getHandlerUntrusted(x);
			}

			/**
			 * Get a handler for potentially untrusted thenable x
			 * @param {*} x
			 * @returns {object} handler
			 */
			function getHandlerUntrusted(x) {
				try {
					var untrustedThen = x.then;
					return typeof untrustedThen === 'function'
						? new Thenable(untrustedThen, x)
						: new Fulfilled(x);
				} catch(e) {
					return new Rejected(e);
				}
			}

			/**
			 * Handler for a promise that is pending forever
			 * @constructor
			 */
			function Handler() {}

			Handler.prototype.when
				= Handler.prototype.become
				= Handler.prototype.notify // deprecated
				= Handler.prototype.fail
				= Handler.prototype._unreport
				= Handler.prototype._report
				= noop;

			Handler.prototype._state = 0;

			Handler.prototype.state = function() {
				return this._state;
			};

			/**
			 * Recursively collapse handler chain to find the handler
			 * nearest to the fully resolved value.
			 * @returns {object} handler nearest the fully resolved value
			 */
			Handler.prototype.join = function() {
				var h = this;
				while(h.handler !== void 0) {
					h = h.handler;
				}
				return h;
			};

			Handler.prototype.chain = function(to, receiver, fulfilled, rejected, progress) {
				this.when({
					resolver: to,
					receiver: receiver,
					fulfilled: fulfilled,
					rejected: rejected,
					progress: progress
				});
			};

			Handler.prototype.visit = function(receiver, fulfilled, rejected, progress) {
				this.chain(failIfRejected, receiver, fulfilled, rejected, progress);
			};

			Handler.prototype.fold = function(f, z, c, to) {
				this.when(new Fold(f, z, c, to));
			};

			/**
			 * Handler that invokes fail() on any handler it becomes
			 * @constructor
			 */
			function FailIfRejected() {}

			inherit(Handler, FailIfRejected);

			FailIfRejected.prototype.become = function(h) {
				h.fail();
			};

			var failIfRejected = new FailIfRejected();

			/**
			 * Handler that manages a queue of consumers waiting on a pending promise
			 * @constructor
			 */
			function Pending(receiver, inheritedContext) {
				Promise.createContext(this, inheritedContext);

				this.consumers = void 0;
				this.receiver = receiver;
				this.handler = void 0;
				this.resolved = false;
			}

			inherit(Handler, Pending);

			Pending.prototype._state = 0;

			Pending.prototype.resolve = function(x) {
				this.become(getHandler(x));
			};

			Pending.prototype.reject = function(x) {
				if(this.resolved) {
					return;
				}

				this.become(new Rejected(x));
			};

			Pending.prototype.join = function() {
				if (!this.resolved) {
					return this;
				}

				var h = this;

				while (h.handler !== void 0) {
					h = h.handler;
					if (h === this) {
						return this.handler = cycle();
					}
				}

				return h;
			};

			Pending.prototype.run = function() {
				var q = this.consumers;
				var handler = this.handler;
				this.handler = this.handler.join();
				this.consumers = void 0;

				for (var i = 0; i < q.length; ++i) {
					handler.when(q[i]);
				}
			};

			Pending.prototype.become = function(handler) {
				if(this.resolved) {
					return;
				}

				this.resolved = true;
				this.handler = handler;
				if(this.consumers !== void 0) {
					tasks.enqueue(this);
				}

				if(this.context !== void 0) {
					handler._report(this.context);
				}
			};

			Pending.prototype.when = function(continuation) {
				if(this.resolved) {
					tasks.enqueue(new ContinuationTask(continuation, this.handler));
				} else {
					if(this.consumers === void 0) {
						this.consumers = [continuation];
					} else {
						this.consumers.push(continuation);
					}
				}
			};

			/**
			 * @deprecated
			 */
			Pending.prototype.notify = function(x) {
				if(!this.resolved) {
					tasks.enqueue(new ProgressTask(x, this));
				}
			};

			Pending.prototype.fail = function(context) {
				var c = typeof context === 'undefined' ? this.context : context;
				this.resolved && this.handler.join().fail(c);
			};

			Pending.prototype._report = function(context) {
				this.resolved && this.handler.join()._report(context);
			};

			Pending.prototype._unreport = function() {
				this.resolved && this.handler.join()._unreport();
			};

			/**
			 * Wrap another handler and force it into a future stack
			 * @param {object} handler
			 * @constructor
			 */
			function Async(handler) {
				this.handler = handler;
			}

			inherit(Handler, Async);

			Async.prototype.when = function(continuation) {
				tasks.enqueue(new ContinuationTask(continuation, this));
			};

			Async.prototype._report = function(context) {
				this.join()._report(context);
			};

			Async.prototype._unreport = function() {
				this.join()._unreport();
			};

			/**
			 * Handler that wraps an untrusted thenable and assimilates it in a future stack
			 * @param {function} then
			 * @param {{then: function}} thenable
			 * @constructor
			 */
			function Thenable(then, thenable) {
				Pending.call(this);
				tasks.enqueue(new AssimilateTask(then, thenable, this));
			}

			inherit(Pending, Thenable);

			/**
			 * Handler for a fulfilled promise
			 * @param {*} x fulfillment value
			 * @constructor
			 */
			function Fulfilled(x) {
				Promise.createContext(this);
				this.value = x;
			}

			inherit(Handler, Fulfilled);

			Fulfilled.prototype._state = 1;

			Fulfilled.prototype.fold = function(f, z, c, to) {
				runContinuation3(f, z, this, c, to);
			};

			Fulfilled.prototype.when = function(cont) {
				runContinuation1(cont.fulfilled, this, cont.receiver, cont.resolver);
			};

			var errorId = 0;

			/**
			 * Handler for a rejected promise
			 * @param {*} x rejection reason
			 * @constructor
			 */
			function Rejected(x) {
				Promise.createContext(this);

				this.id = ++errorId;
				this.value = x;
				this.handled = false;
				this.reported = false;

				this._report();
			}

			inherit(Handler, Rejected);

			Rejected.prototype._state = -1;

			Rejected.prototype.fold = function(f, z, c, to) {
				to.become(this);
			};

			Rejected.prototype.when = function(cont) {
				if(typeof cont.rejected === 'function') {
					this._unreport();
				}
				runContinuation1(cont.rejected, this, cont.receiver, cont.resolver);
			};

			Rejected.prototype._report = function(context) {
				tasks.afterQueue(new ReportTask(this, context));
			};

			Rejected.prototype._unreport = function() {
				if(this.handled) {
					return;
				}
				this.handled = true;
				tasks.afterQueue(new UnreportTask(this));
			};

			Rejected.prototype.fail = function(context) {
				this.reported = true;
				emitRejection('unhandledRejection', this);
				Promise.onFatalRejection(this, context === void 0 ? this.context : context);
			};

			function ReportTask(rejection, context) {
				this.rejection = rejection;
				this.context = context;
			}

			ReportTask.prototype.run = function() {
				if(!this.rejection.handled && !this.rejection.reported) {
					this.rejection.reported = true;
					emitRejection('unhandledRejection', this.rejection) ||
						Promise.onPotentiallyUnhandledRejection(this.rejection, this.context);
				}
			};

			function UnreportTask(rejection) {
				this.rejection = rejection;
			}

			UnreportTask.prototype.run = function() {
				if(this.rejection.reported) {
					emitRejection('rejectionHandled', this.rejection) ||
						Promise.onPotentiallyUnhandledRejectionHandled(this.rejection);
				}
			};

			// Unhandled rejection hooks
			// By default, everything is a noop

			Promise.createContext
				= Promise.enterContext
				= Promise.exitContext
				= Promise.onPotentiallyUnhandledRejection
				= Promise.onPotentiallyUnhandledRejectionHandled
				= Promise.onFatalRejection
				= noop;

			// Errors and singletons

			var foreverPendingHandler = new Handler();
			var foreverPendingPromise = new Promise(Handler, foreverPendingHandler);

			function cycle() {
				return new Rejected(new TypeError('Promise cycle'));
			}

			// Task runners

			/**
			 * Run a single consumer
			 * @constructor
			 */
			function ContinuationTask(continuation, handler) {
				this.continuation = continuation;
				this.handler = handler;
			}

			ContinuationTask.prototype.run = function() {
				this.handler.join().when(this.continuation);
			};

			/**
			 * Run a queue of progress handlers
			 * @constructor
			 */
			function ProgressTask(value, handler) {
				this.handler = handler;
				this.value = value;
			}

			ProgressTask.prototype.run = function() {
				var q = this.handler.consumers;
				if(q === void 0) {
					return;
				}

				for (var c, i = 0; i < q.length; ++i) {
					c = q[i];
					runNotify(c.progress, this.value, this.handler, c.receiver, c.resolver);
				}
			};

			/**
			 * Assimilate a thenable, sending it's value to resolver
			 * @param {function} then
			 * @param {object|function} thenable
			 * @param {object} resolver
			 * @constructor
			 */
			function AssimilateTask(then, thenable, resolver) {
				this._then = then;
				this.thenable = thenable;
				this.resolver = resolver;
			}

			AssimilateTask.prototype.run = function() {
				var h = this.resolver;
				tryAssimilate(this._then, this.thenable, _resolve, _reject, _notify);

				function _resolve(x) { h.resolve(x); }
				function _reject(x)  { h.reject(x); }
				function _notify(x)  { h.notify(x); }
			};

			function tryAssimilate(then, thenable, resolve, reject, notify) {
				try {
					then.call(thenable, resolve, reject, notify);
				} catch (e) {
					reject(e);
				}
			}

			/**
			 * Fold a handler value with z
			 * @constructor
			 */
			function Fold(f, z, c, to) {
				this.f = f; this.z = z; this.c = c; this.to = to;
				this.resolver = failIfRejected;
				this.receiver = this;
			}

			Fold.prototype.fulfilled = function(x) {
				this.f.call(this.c, this.z, x, this.to);
			};

			Fold.prototype.rejected = function(x) {
				this.to.reject(x);
			};

			Fold.prototype.progress = function(x) {
				this.to.notify(x);
			};

			// Other helpers

			/**
			 * @param {*} x
			 * @returns {boolean} true iff x is a trusted Promise
			 */
			function isPromise(x) {
				return x instanceof Promise;
			}

			/**
			 * Test just enough to rule out primitives, in order to take faster
			 * paths in some code
			 * @param {*} x
			 * @returns {boolean} false iff x is guaranteed *not* to be a thenable
			 */
			function maybeThenable(x) {
				return (typeof x === 'object' || typeof x === 'function') && x !== null;
			}

			function runContinuation1(f, h, receiver, next) {
				if(typeof f !== 'function') {
					return next.become(h);
				}

				Promise.enterContext(h);
				tryCatchReject(f, h.value, receiver, next);
				Promise.exitContext();
			}

			function runContinuation3(f, x, h, receiver, next) {
				if(typeof f !== 'function') {
					return next.become(h);
				}

				Promise.enterContext(h);
				tryCatchReject3(f, x, h.value, receiver, next);
				Promise.exitContext();
			}

			/**
			 * @deprecated
			 */
			function runNotify(f, x, h, receiver, next) {
				if(typeof f !== 'function') {
					return next.notify(x);
				}

				Promise.enterContext(h);
				tryCatchReturn(f, x, receiver, next);
				Promise.exitContext();
			}

			function tryCatch2(f, a, b) {
				try {
					return f(a, b);
				} catch(e) {
					return reject(e);
				}
			}

			/**
			 * Return f.call(thisArg, x), or if it throws return a rejected promise for
			 * the thrown exception
			 */
			function tryCatchReject(f, x, thisArg, next) {
				try {
					next.become(getHandler(f.call(thisArg, x)));
				} catch(e) {
					next.become(new Rejected(e));
				}
			}

			/**
			 * Same as above, but includes the extra argument parameter.
			 */
			function tryCatchReject3(f, x, y, thisArg, next) {
				try {
					f.call(thisArg, x, y, next);
				} catch(e) {
					next.become(new Rejected(e));
				}
			}

			/**
			 * @deprecated
			 * Return f.call(thisArg, x), or if it throws, *return* the exception
			 */
			function tryCatchReturn(f, x, thisArg, next) {
				try {
					next.notify(f.call(thisArg, x));
				} catch(e) {
					next.notify(e);
				}
			}

			function inherit(Parent, Child) {
				Child.prototype = objectCreate(Parent.prototype);
				Child.prototype.constructor = Child;
			}

			function snd(x, y) {
				return y;
			}

			function noop() {}

			function initEmitRejection() {
				/*global process, self, CustomEvent*/
				if(typeof process !== 'undefined' && process !== null
					&& typeof process.emit === 'function') {
					// Returning falsy here means to call the default
					// onPotentiallyUnhandledRejection API.  This is safe even in
					// browserify since process.emit always returns falsy in browserify:
					// https://github.com/defunctzombie/node-process/blob/master/browser.js#L40-L46
					return function(type, rejection) {
						return type === 'unhandledRejection'
							? process.emit(type, rejection.value, rejection)
							: process.emit(type, rejection);
					};
				} else if(typeof self !== 'undefined' && typeof CustomEvent === 'function') {
					return (function(noop, self, CustomEvent) {
						var hasCustomEvent = false;
						try {
							var ev = new CustomEvent('unhandledRejection');
							hasCustomEvent = ev instanceof CustomEvent;
						} catch (e) {}

						return !hasCustomEvent ? noop : function(type, rejection) {
							var ev = new CustomEvent(type, {
								detail: {
									reason: rejection.value,
									key: rejection
								},
								bubbles: false,
								cancelable: true
							});

							return !self.dispatchEvent(ev);
						};
					}(noop, self, CustomEvent));
				}

				return noop;
			}

			return Promise;
		};
	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));

	},{}]},{},[1])
	//# sourceMappingURL=Promise.js.map
	(1)
	});
	;
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698)))

/***/ },
/* 724 */,
/* 725 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./dist/system": 728,
		"./dist/system-csp-production": 730,
		"./dist/system-csp-production.js": 730,
		"./dist/system-csp-production.src": 732,
		"./dist/system-csp-production.src.js": 732,
		"./dist/system-polyfills": 733,
		"./dist/system-polyfills.js": 733,
		"./dist/system-polyfills.src": 735,
		"./dist/system-polyfills.src.js": 735,
		"./dist/system-register-only": 736,
		"./dist/system-register-only.js": 736,
		"./dist/system-register-only.src": 738,
		"./dist/system-register-only.src.js": 738,
		"./dist/system.js": 728,
		"./dist/system.src": 740,
		"./dist/system.src.js": 740,
		"./index": 722,
		"./index.js": 722
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 725;


/***/ },
/* 726 */,
/* 727 */,
/* 728 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process, __filename) {/*
	 * SystemJS v0.19.27
	 */
	!function(){function e(){!function(e){function t(e,r){if("string"!=typeof e)throw new TypeError("URL must be a string");var n=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);if(!n)throw new RangeError("Invalid URL format");var a=n[1]||"",o=n[2]||"",i=n[3]||"",s=n[4]||"",l=n[5]||"",u=n[6]||"",d=n[7]||"",c=n[8]||"",f=n[9]||"";if(void 0!==r){var m=r instanceof t?r:new t(r),p=!a&&!s&&!o;!p||d||c||(c=m.search),p&&"/"!==d[0]&&(d=d?(!m.host&&!m.username||m.pathname?"":"/")+m.pathname.slice(0,m.pathname.lastIndexOf("/")+1)+d:m.pathname);var h=[];d.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,function(e){"/.."===e?h.pop():h.push(e)}),d=h.join("").replace(/^\//,"/"===d[0]?"/":""),p&&(u=m.port,l=m.hostname,s=m.host,i=m.password,o=m.username),a||(a=m.protocol)}"file:"==a&&(d=d.replace(/\\/g,"/")),this.origin=s?a+(""!==a||""!==s?"//":"")+s:"",this.href=a+(a&&s||"file:"==a?"//":"")+(""!==o?o+(""!==i?":"+i:"")+"@":"")+s+d+c+f,this.protocol=a,this.username=o,this.password=i,this.host=s,this.hostname=l,this.port=u,this.pathname=d,this.search=c,this.hash=f}e.URLPolyfill=t}("undefined"!=typeof self?self:global),function(e){function t(e,t){if(!e.originalErr)for(var r=(e.stack||e.message||e).split("\n"),n=[],a=0;a<r.length;a++)("undefined"==typeof $__curScript||-1==r[a].indexOf($__curScript.src))&&n.push(r[a]);var o=(n?n.join("\n	"):e.message)+"\n	"+t;F||(o=o.replace(D?/file:\/\/\//g:/file:\/\//g,""));var i=C?new Error(o,e.fileName,e.lineNumber):new Error(o);return F?i.stack=null:i.stack=o,i.originalErr=e.originalErr||e,i}function r(e,r,n){try{new Function(e).call(n)}catch(a){throw t(a,"Evaluating "+r)}}function n(){}function a(t){this._loader={loaderObj:this,loads:[],modules:{},importPromises:{},moduleRecords:{}},q(this,"global",{get:function(){return e}})}function o(){a.call(this),this.paths={}}function i(e,t){var r,n="",a=0;for(var o in e){var i=o.split("*");if(i.length>2)throw new TypeError("Only one wildcard in a path is permitted");if(1==i.length){if(t==o)return e[o];if(t.substr(0,o.length-1)==o.substr(0,o.length-1)&&(t.length<o.length||t[o.length-1]==o[o.length-1])&&"/"==e[o][e[o].length-1])return e[o].substr(0,e[o].length-1)+(t.length>o.length?"/"+t.substr(o.length):"")}else{var s=i[0].length;s>=a&&t.substr(0,i[0].length)==i[0]&&t.substr(t.length-i[1].length)==i[1]&&(a=s,n=o,r=t.substr(i[0].length,t.length-i[1].length-i[0].length))}}var l=e[n];return"string"==typeof r&&(l=l.replace("*",r)),l}function s(){}function l(){o.call(this),V.call(this)}function u(){}function d(e,t){l.prototype[e]=t(l.prototype[e]||function(){})}function c(e){V=e(V||function(){})}function f(e){for(var t=[],r=[],n=0,a=e.length;a>n;n++){var o=J.call(t,e[n]);-1===o?(t.push(e[n]),r.push([n])):r[o].push(n)}return{names:t,indices:r}}function m(e){var t={};if("object"==typeof e||"function"==typeof e){var r=e&&e.hasOwnProperty;if(K)for(var n in e)h(t,e,n)||p(t,e,n,r);else for(var n in e)p(t,e,n,r)}return t["default"]=e,q(t,"__useDefault",{value:!0}),t}function p(e,t,r,n){(!n||t.hasOwnProperty(r))&&(e[r]=t[r])}function h(e,t,r){try{var n;return(n=Object.getOwnPropertyDescriptor(t,r))&&q(e,r,n),!0}catch(a){return!1}}function g(e,t,r){for(var n in t)r&&n in e||(e[n]=t[n]);return e}function v(e,t,r){for(var n in t){var a=t[n];n in e?a instanceof Array&&e[n]instanceof Array?e[n]=[].concat(r?a:e[n]).concat(r?e[n]:a):"object"==typeof a&&null!==a&&"object"==typeof e[n]?e[n]=g(g({},e[n]),a,r):r||(e[n]=a):e[n]=a}}function y(e){this.warnings&&"undefined"!=typeof console&&console.warn}function b(e,t){for(var r=e.split(".");r.length;)t=t[r.shift()];return t}function w(){if(te[this.baseURL])return te[this.baseURL];"/"!=this.baseURL[this.baseURL.length-1]&&(this.baseURL+="/");var e=new H(this.baseURL,U);return this.baseURL=e.href,te[this.baseURL]=e}function x(e,t){var r,n=0;for(var a in e)if(t.substr(0,a.length)==a&&(t.length==a.length||"/"==t[a.length])){var o=a.split("/").length;if(n>=o)continue;r=a,n=o}return r}function S(e){this.set("@system-env",this.newModule({browser:F,node:!!this._nodeRequire,production:e,"default":!0}))}function E(e){return("."!=e[0]||!!e[1]&&"/"!=e[1]&&"."!=e[1])&&"/"!=e[0]&&!e.match(ee)}function _(e,t){return t&&(t=t.replace(/#/g,"%05")),new H(e,t||re).href.replace(/%05/g,"#")}function j(e,t){return new H(t,w.call(e)).href}function k(e,t){if(!E(e))return _(e,t);var r=x(this.map,e);if(r&&(e=this.map[r]+e.substr(r.length),!E(e)))return _(e);if(this.has(e))return e;if("@node/"==e.substr(0,6)&&-1!=ne.indexOf(e.substr(6))){if(!this._nodeRequire)throw new TypeError("Error loading "+e+". Can only load node core modules in Node.");return this.set(e,this.newModule(m(this._nodeRequire(e.substr(6))))),e}var n=i(this.paths,e);return n&&!E(n)?_(n):j(this,n||e)}function R(e){var t=e.match(ie);return t&&"System.register"==e.substr(t[0].length,15)}function P(){return{name:null,deps:null,originalIndices:null,declare:null,execute:null,executingRequire:!1,declarative:!1,normalizedDeps:null,groupIndex:null,evaluated:!1,module:null,esModule:null,esmExports:!1}}function O(t){if("string"==typeof t)return b(t,e);if(!(t instanceof Array))throw new Error("Global exports must be a string or array.");for(var r={},n=!0,a=0;a<t.length;a++){var o=b(t[a],e);n&&(r["default"]=o,n=!1),r[t[a].split(".").pop()]=o}return r}function M(e){var t,r,n,n="~"==e[0],a=e.lastIndexOf("|");return-1!=a?(t=e.substr(a+1),r=e.substr(n,a-n)||"@system-env"):(t=null,r=e.substr(n)),{module:r,prop:t,negate:n}}function z(e){return(e.negate?"~":"")+e.module+(e.prop?"|"+e.prop:"")}function T(e,t,r){return this["import"](e.module,t).then(function(t){if(e.prop?t=b(e.prop,t):"object"==typeof t&&t+""=="Module"&&(t=t["default"]),r&&"boolean"!=typeof t)throw new TypeError("Condition "+z(e)+" did not resolve to a boolean.");return e.negate?!t:t})}function I(e,t){var r=e.match(le);if(!r)return Promise.resolve(e);var n=M(r[0].substr(2,r[0].length-3));return this.builder?this.normalize(n.module,t).then(function(t){return n.module=t,e.replace(le,"#{"+z(n)+"}")}):T.call(this,n,t,!1).then(function(r){if("string"!=typeof r)throw new TypeError("The condition value for "+e+" doesn't resolve to a string.");if(-1!=r.indexOf("/"))throw new TypeError("Unabled to interpolate conditional "+e+(t?" in "+t:"")+"\n	The condition value "+r+' cannot contain a "/" separator.');return e.replace(le,r)})}function L(e,t){var r=e.lastIndexOf("#?");if(-1==r)return Promise.resolve(e);var n=M(e.substr(r+2));return this.builder?this.normalize(n.module,t).then(function(t){return n.module=t,e.substr(0,r)+"#?"+z(n)}):T.call(this,n,t,!0).then(function(t){return t?e.substr(0,r):"@empty"})}var A="undefined"==typeof window&&"undefined"!=typeof self&&"undefined"!=typeof importScripts,F="undefined"!=typeof window&&"undefined"!=typeof document,D="undefined"!=typeof process&&"undefined"!=typeof process.platform&&!!process.platform.match(/^win/);e.console||(e.console={assert:function(){}});var q,J=Array.prototype.indexOf||function(e){for(var t=0,r=this.length;r>t;t++)if(this[t]===e)return t;return-1};!function(){try{Object.defineProperty({},"a",{})&&(q=Object.defineProperty)}catch(e){q=function(e,t,r){try{e[t]=r.value||r.get.call(e)}catch(n){}}}}();var U,C="_"==new Error(0,"_").fileName;if("undefined"!=typeof document&&document.getElementsByTagName){if(U=document.baseURI,!U){var N=document.getElementsByTagName("base");U=N[0]&&N[0].href||window.location.href}U=U.split("#")[0].split("?")[0],U=U.substr(0,U.lastIndexOf("/")+1)}else if("undefined"!=typeof process&&process.cwd)U="file://"+(D?"/":"")+process.cwd()+"/",D&&(U=U.replace(/\\/g,"/"));else{if("undefined"==typeof location)throw new TypeError("No environment baseURI");U=e.location.href}try{var $="test:"==new e.URL("test:///").protocol}catch(B){}var H=$?e.URL:e.URLPolyfill;q(n.prototype,"toString",{value:function(){return"Module"}}),function(){function o(e){return{status:"loading",name:e,linkSets:[],dependencies:[],metadata:{}}}function i(e,t,r){return new Promise(c({step:r.address?"fetch":"locate",loader:e,moduleName:t,moduleMetadata:r&&r.metadata||{},moduleSource:r.source,moduleAddress:r.address}))}function s(e,t,r,n){return new Promise(function(a,o){a(e.loaderObj.normalize(t,r,n))}).then(function(t){var r;if(e.modules[t])return r=o(t),r.status="linked",r.module=e.modules[t],r;for(var n=0,a=e.loads.length;a>n;n++)if(r=e.loads[n],r.name==t)return r;return r=o(t),e.loads.push(r),l(e,r),r})}function l(e,t){u(e,t,Promise.resolve().then(function(){return e.loaderObj.locate({name:t.name,metadata:t.metadata})}))}function u(e,t,r){d(e,t,r.then(function(r){return"loading"==t.status?(t.address=r,e.loaderObj.fetch({name:t.name,metadata:t.metadata,address:r})):void 0}))}function d(t,n,a){a.then(function(a){return"loading"==n.status?Promise.resolve(t.loaderObj.translate({name:n.name,metadata:n.metadata,address:n.address,source:a})).then(function(e){return n.source=e,t.loaderObj.instantiate({name:n.name,metadata:n.metadata,address:n.address,source:e})}).then(function(a){if(void 0===a)return n.address=n.address||"<Anonymous Module "+ ++_+">",n.isDeclarative=!0,E.call(t.loaderObj,n).then(function(t){var a=e.System,o=a.register;a.register=function(e,t,r){"string"!=typeof e&&(r=t,t=e),n.declare=r,n.depsList=t},r(t,n.address,{}),a.register=o});if("object"!=typeof a)throw TypeError("Invalid instantiate return value");n.depsList=a.deps||[],n.execute=a.execute,n.isDeclarative=!1}).then(function(){n.dependencies=[];for(var e=n.depsList,r=[],a=0,o=e.length;o>a;a++)(function(e,a){r.push(s(t,e,n.name,n.address).then(function(t){if(n.dependencies[a]={key:e,value:t.name},"linked"!=t.status)for(var r=n.linkSets.concat([]),o=0,i=r.length;i>o;o++)m(r[o],t)}))})(e[a],a);return Promise.all(r)}).then(function(){n.status="loaded";for(var e=n.linkSets.concat([]),t=0,r=e.length;r>t;t++)h(e[t],n)}):void 0})["catch"](function(e){n.status="failed",n.exception=e;for(var t=n.linkSets.concat([]),r=0,a=t.length;a>r;r++)g(t[r],n,e)})}function c(e){return function(t,r){var n=e.loader,a=e.moduleName,i=e.step;if(n.modules[a])throw new TypeError('"'+a+'" already exists in the module table');for(var s,c=0,m=n.loads.length;m>c;c++)if(n.loads[c].name==a&&(s=n.loads[c],"translate"!=i||s.source||(s.address=e.moduleAddress,d(n,s,Promise.resolve(e.moduleSource))),s.linkSets.length&&s.linkSets[0].loads[0].name==s.name))return s.linkSets[0].done.then(function(){t(s)});var p=s||o(a);p.metadata=e.moduleMetadata;var h=f(n,p);n.loads.push(p),t(h.done),"locate"==i?l(n,p):"fetch"==i?u(n,p,Promise.resolve(e.moduleAddress)):(p.address=e.moduleAddress,d(n,p,Promise.resolve(e.moduleSource)))}}function f(e,t){var r={loader:e,loads:[],startingLoad:t,loadingCount:0};return r.done=new Promise(function(e,t){r.resolve=e,r.reject=t}),m(r,t),r}function m(e,t){if("failed"!=t.status){for(var r=0,n=e.loads.length;n>r;r++)if(e.loads[r]==t)return;e.loads.push(t),t.linkSets.push(e),"loaded"!=t.status&&e.loadingCount++;for(var a=e.loader,r=0,n=t.dependencies.length;n>r;r++)if(t.dependencies[r]){var o=t.dependencies[r].value;if(!a.modules[o])for(var i=0,s=a.loads.length;s>i;i++)if(a.loads[i].name==o){m(e,a.loads[i]);break}}}}function p(e){var t=!1;try{w(e,function(r,n){g(e,r,n),t=!0})}catch(r){g(e,null,r),t=!0}return t}function h(e,t){if(e.loadingCount--,!(e.loadingCount>0)){var r=e.startingLoad;if(e.loader.loaderObj.execute===!1){for(var n=[].concat(e.loads),a=0,o=n.length;o>a;a++){var t=n[a];t.module=t.isDeclarative?{name:t.name,module:j({}),evaluated:!0}:{module:j({})},t.status="linked",v(e.loader,t)}return e.resolve(r)}var i=p(e);i||e.resolve(r)}}function g(e,r,n){var a=e.loader;e:if(r)if(e.loads[0].name==r.name)n=t(n,"Error loading "+r.name);else{for(var o=0;o<e.loads.length;o++)for(var i=e.loads[o],s=0;s<i.dependencies.length;s++){var l=i.dependencies[s];if(l.value==r.name){n=t(n,"Error loading "+r.name+' as "'+l.key+'" from '+i.name);break e}}n=t(n,"Error loading "+r.name+" from "+e.loads[0].name)}else n=t(n,"Error linking "+e.loads[0].name);for(var u=e.loads.concat([]),o=0,d=u.length;d>o;o++){var r=u[o];a.loaderObj.failed=a.loaderObj.failed||[],-1==J.call(a.loaderObj.failed,r)&&a.loaderObj.failed.push(r);var c=J.call(r.linkSets,e);if(r.linkSets.splice(c,1),0==r.linkSets.length){var f=J.call(e.loader.loads,r);-1!=f&&e.loader.loads.splice(f,1)}}e.reject(n)}function v(e,t){if(e.loaderObj.trace){e.loaderObj.loads||(e.loaderObj.loads={});var r={};t.dependencies.forEach(function(e){r[e.key]=e.value}),e.loaderObj.loads[t.name]={name:t.name,deps:t.dependencies.map(function(e){return e.key}),depMap:r,address:t.address,metadata:t.metadata,source:t.source,kind:t.isDeclarative?"declarative":"dynamic"}}t.name&&(e.modules[t.name]=t.module);var n=J.call(e.loads,t);-1!=n&&e.loads.splice(n,1);for(var a=0,o=t.linkSets.length;o>a;a++)n=J.call(t.linkSets[a].loads,t),-1!=n&&t.linkSets[a].loads.splice(n,1);t.linkSets.splice(0,t.linkSets.length)}function y(e,t,r){try{var a=t.execute()}catch(o){return void r(t,o)}return a&&a instanceof n?a:void r(t,new TypeError("Execution must define a Module instance"))}function b(e,t,r){var n=e._loader.importPromises;return n[t]=r.then(function(e){return n[t]=void 0,e},function(e){throw n[t]=void 0,e})}function w(e,t){var r=e.loader;if(e.loads.length)for(var n=e.loads.concat([]),a=0;a<n.length;a++){var o=n[a],i=y(e,o,t);if(!i)return;o.module={name:o.name,module:i},o.status="linked",v(r,o)}}function x(e,t){return t.module.module}function S(){}function E(){throw new TypeError("ES6 transpilation is only provided in the dev module loader build.")}var _=0;a.prototype={constructor:a,define:function(e,t,r){if(this._loader.importPromises[e])throw new TypeError("Module is already loading.");return b(this,e,new Promise(c({step:"translate",loader:this._loader,moduleName:e,moduleMetadata:r&&r.metadata||{},moduleSource:t,moduleAddress:r&&r.address})))},"delete":function(e){var t=this._loader;return delete t.importPromises[e],delete t.moduleRecords[e],t.modules[e]?delete t.modules[e]:!1},get:function(e){return this._loader.modules[e]?(S(this._loader.modules[e],[],this),this._loader.modules[e].module):void 0},has:function(e){return!!this._loader.modules[e]},"import":function(e,t,r){"object"==typeof t&&(t=t.name);var n=this;return Promise.resolve(n.normalize(e,t)).then(function(e){var t=n._loader;return t.modules[e]?(S(t.modules[e],[],t._loader),t.modules[e].module):t.importPromises[e]||b(n,e,i(t,e,{}).then(function(r){return delete t.importPromises[e],x(t,r)}))})},load:function(e){var t=this._loader;return t.modules[e]?Promise.resolve():t.importPromises[e]||b(this,e,new Promise(c({step:"locate",loader:t,moduleName:e,moduleMetadata:{},moduleSource:void 0,moduleAddress:void 0})).then(function(){delete t.importPromises[e]}))},module:function(e,t){var r=o();r.address=t&&t.address;var n=f(this._loader,r),a=Promise.resolve(e),i=this._loader,s=n.done.then(function(){return x(i,r)});return d(i,r,a),s},newModule:function(e){if("object"!=typeof e)throw new TypeError("Expected object");var t=new n,r=[];if(Object.getOwnPropertyNames&&null!=e)r=Object.getOwnPropertyNames(e);else for(var a in e)r.push(a);for(var o=0;o<r.length;o++)(function(r){q(t,r,{configurable:!1,enumerable:!0,get:function(){return e[r]},set:function(){throw new Error("Module exports cannot be changed externally.")}})})(r[o]);return Object.freeze&&Object.freeze(t),t},set:function(e,t){if(!(t instanceof n))throw new TypeError("Loader.set("+e+", module) must be a module");this._loader.modules[e]={module:t}},normalize:function(e,t,r){return e},locate:function(e){return e.name},fetch:function(e){},translate:function(e){return e.source},instantiate:function(e){}};var j=a.prototype.newModule}();var X;s.prototype=a.prototype,o.prototype=new s;var Z;if("undefined"!=typeof XMLHttpRequest)Z=function(e,t,r,n){function a(){r(i.responseText)}function o(){n(new Error("XHR error"+(i.status?" ("+i.status+(i.statusText?" "+i.statusText:"")+")":"")+" loading "+e))}var i=new XMLHttpRequest,s=!0,l=!1;if(!("withCredentials"in i)){var u=/^(\w+:)?\/\/([^\/]+)/.exec(e);u&&(s=u[2]===window.location.host,u[1]&&(s&=u[1]===window.location.protocol))}s||"undefined"==typeof XDomainRequest||(i=new XDomainRequest,i.onload=a,i.onerror=o,i.ontimeout=o,i.onprogress=function(){},i.timeout=0,l=!0),i.onreadystatechange=function(){4===i.readyState&&(0==i.status?i.responseText?a():(i.addEventListener("error",o),i.addEventListener("load",a)):200===i.status?a():o())},i.open("GET",e,!0),i.setRequestHeader&&(i.setRequestHeader("Accept","application/x-es-module, */*"),t&&("string"==typeof t&&i.setRequestHeader("Authorization",t),i.withCredentials=!0)),l?setTimeout(function(){i.send()},0):i.send(null)};else if("undefined"!="function"&&"undefined"!=typeof process){var G;Z=function(e,t,r,n){if("file:///"!=e.substr(0,8))throw new Error('Unable to fetch "'+e+'". Only file URLs of the form file:/// allowed running in Node.');return G=G||__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),e=D?e.replace(/\//g,"\\").substr(8):e.substr(7),G.readFile(e,function(e,t){if(e)return n(e);var a=t+"";"\ufeff"===a[0]&&(a=a.substr(1)),r(a)})}}else{if("undefined"==typeof self||"undefined"==typeof self.fetch)throw new TypeError("No environment fetch API available.");Z=function(e,t,r,n){var a={headers:{Accept:"application/x-es-module, */*"}};t&&("string"==typeof t&&(a.headers.Authorization=t),a.credentials="include"),fetch(e,a).then(function(e){if(e.ok)return e.text();throw new Error("Fetch error: "+e.status+" "+e.statusText)}).then(r,n)}}o.prototype.fetch=function(e){return new Promise(function(t,r){Z(e.address,void 0,t,r)})};var W=function(){function t(t){var n=this;return Promise.resolve(e["typescript"==n.transpiler?"ts":n.transpiler]||(n.pluginLoader||n)["import"](n.transpiler)).then(function(e){e.__useDefault&&(e=e["default"]);var a;return a=e.Compiler?r:e.createLanguageService?i:o,"(function(__moduleName){"+a.call(n,t,e)+'\n})("'+t.name+'");\n//# sourceURL='+t.address+"!transpiled"})}function r(e,t){var r=this.traceurOptions||{};r.modules="instantiate",r.script=!1,void 0===r.sourceMaps&&(r.sourceMaps="inline"),r.filename=e.address,r.inputSourceMap=e.metadata.sourceMap,r.moduleName=!1;var a=new t.Compiler(r);return n(e.source,a,r.filename)}function n(e,t,r){try{return t.compile(e,r)}catch(n){if(n.length)throw n[0];throw n}}function o(e,t){var r=this.babelOptions||{};return r.modules="system",void 0===r.sourceMap&&(r.sourceMap="inline"),r.inputSourceMap=e.metadata.sourceMap,r.filename=e.address,r.code=!0,r.ast=!1,t.transform(e.source,r).code}function i(e,t){var r=this.typescriptOptions||{};return r.target=r.target||t.ScriptTarget.ES5,void 0===r.sourceMap&&(r.sourceMap=!0),r.sourceMap&&r.inlineSourceMap!==!1&&(r.inlineSourceMap=!0),r.module=t.ModuleKind.System,t.transpile(e.source,r,e.address)}return a.prototype.transpiler="traceur",t}();u.prototype=o.prototype,l.prototype=new u,l.prototype.constructor=l,l.prototype.instantiate=function(){};var V,K=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(B){K=!1}var Y,Q=["main","format","defaultExtension","meta","map","basePath","depCache"];!function(){function r(e){var t=e.source.lastIndexOf("\n"),r="global"!=e.metadata.format,n=e.metadata.sourceMap;if(n){if("object"!=typeof n)throw new TypeError("load.metadata.sourceMap must be set to an object.");n=JSON.stringify(n)}return(r?"(function(System, SystemJS) {":"")+e.source+(r?"\n})(System, System);":"")+("\n//# sourceURL="!=e.source.substr(t,15)?"\n//# sourceURL="+e.address+(n?"!transpiled":""):"")+(n&&s&&"\n//# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(n)))||"")}function n(t,r){i=r,0==c++&&(l=e.System),e.System=e.SystemJS=t}function a(){0==--c&&(e.System=e.SystemJS=l),i=void 0}function o(e){p||(p=document.head||document.body||document.documentElement);var o=document.createElement("script");o.text=r(e,!1);var i,s=window.onerror;if(window.onerror=function(r){i=t(r,"Evaluating "+e.address)},n(this,e),e.metadata.integrity&&o.setAttribute("integrity",e.metadata.integrity),e.metadata.nonce&&o.setAttribute("nonce",e.metadata.nonce),p.appendChild(o),p.removeChild(o),a(),window.onerror=s,i)throw i}var i,s="undefined"!=typeof btoa;d("pushRegister_",function(){return function(e){return i?(this.reduceRegister_(i,e),!0):!1}});var l,u,c=0;Y=function(e){if(e.source){if((e.metadata.integrity||e.metadata.nonce)&&f)return o.call(this,e);try{n(this,e),i=e,this._nodeRequire?(u=u||this._nodeRequire("vm"),u.runInThisContext(r(e))):(0,eval)(r(e)),a()}catch(s){throw a(),t(s,"Evaluating "+e.address)}}};var f=!1;if(F&&"undefined"!=typeof document&&document.getElementsByTagName){var m=document.getElementsByTagName("script");$__curScript=m[m.length-1],window.chrome&&window.chrome.extension||navigator.userAgent.match(/^Node\.js/)||(f=!0)}var p}();var ee=/^[^\/]+:\/\//,te={},re=new H(U);c(function(e){return function(){e.call(this),this.baseURL=U.substr(0,U.lastIndexOf("/")+1),this.map={},this.paths={},this.warnings=!1,this.defaultJSExtensions=!1,this.pluginFirst=!1,this.loaderErrorStack=!1,this.set("@empty",this.newModule({})),S.call(this,!1)}}),"undefined"=="function"||"undefined"==typeof process||process.browser||(l.prototype._nodeRequire=__webpack_require__(729));var ne=["assert","buffer","child_process","cluster","console","constants","crypto","dgram","dns","domain","events","fs","http","https","module","net","os","path","process","punycode","querystring","readline","repl","stream","string_decoder","sys","timers","tls","tty","url","util","vm","zlib"];d("normalize",function(e){return function(e,t,r){var n=k.call(this,e,t);return r||!this.defaultJSExtensions||".js"==n.substr(n.length-3,3)||E(n)||(n+=".js"),n}});var ae="undefined"!=typeof XMLHttpRequest;d("locate",function(e){return function(t){return Promise.resolve(e.call(this,t)).then(function(e){return ae?e.replace(/#/g,"%23"):e})}}),d("fetch",function(){return function(e){return new Promise(function(t,r){Z(e.address,e.metadata.authorization,t,r)})}}),d("import",function(e){return function(t,r,n){return r&&r.name&&y.call(this,"SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing "+t+" from "+r.name),e.call(this,t,r,n).then(function(e){return e.__useDefault?e["default"]:e})}}),d("translate",function(e){return function(t){return"detect"==t.metadata.format&&(t.metadata.format=void 0),e.call(this,t)}}),d("instantiate",function(e){return function(e){if("json"==e.metadata.format&&!this.builder){var t=e.metadata.entry=P();t.deps=[],t.execute=function(){try{return JSON.parse(e.source)}catch(t){throw new Error("Invalid JSON file "+e.name)}}}}}),l.prototype.env="development";var oe;l.prototype.config=function(e){function t(e){for(var t in e)if(hasOwnProperty.call(e,t))return!0}var r=this;if("loaderErrorStack"in e&&(oe=$__curScript,e.loaderErrorStack?$__curScript=void 0:$__curScript=oe),"warnings"in e&&(r.warnings=e.warnings),e.transpilerRuntime===!1&&(r._loader.loadedTranspilerRuntime=!0),e.baseURL){if(t(r.packages)||t(r.meta)||t(r.depCache)||t(r.bundles)||t(r.packageConfigPaths))throw new TypeError("Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.");r.baseURL=e.baseURL,w.call(r)}if(e.defaultJSExtensions&&(r.defaultJSExtensions=e.defaultJSExtensions,y.call(r,"The defaultJSExtensions configuration option is deprecated, use packages configuration instead.")),e.pluginFirst&&(r.pluginFirst=e.pluginFirst),e.production&&S.call(r,!0),e.paths)for(var n in e.paths)r.paths[n]=e.paths[n];if(e.map){var a="";for(var n in e.map){var o=e.map[n];if("string"!=typeof o){a+=(a.length?", ":"")+'"'+n+'"';var i=r.defaultJSExtensions&&".js"!=n.substr(n.length-3,3),s=r.decanonicalize(n);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3));var l="";for(var u in r.packages)s.substr(0,u.length)==u&&(!s[u.length]||"/"==s[u.length])&&l.split("/").length<u.split("/").length&&(l=u);l&&r.packages[l].main&&(s=s.substr(0,s.length-r.packages[l].main.length-1));var u=r.packages[s]=r.packages[s]||{};u.map=o}else r.map[n]=o}a&&y.call(r,"The map configuration for "+a+' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "'+n+'": { map: {...} } } }).')}if(e.packageConfigPaths){for(var d=[],c=0;c<e.packageConfigPaths.length;c++){var f=e.packageConfigPaths[c],m=Math.max(f.lastIndexOf("*")+1,f.lastIndexOf("/")),i=r.defaultJSExtensions&&".js"!=f.substr(m-3,3),p=r.decanonicalize(f.substr(0,m));i&&".js"==p.substr(p.length-3,3)&&(p=p.substr(0,p.length-3)),d[c]=p+f.substr(m)}r.packageConfigPaths=d}if(e.bundles)for(var n in e.bundles){for(var h=[],c=0;c<e.bundles[n].length;c++){var i=r.defaultJSExtensions&&".js"!=e.bundles[n][c].substr(e.bundles[n][c].length-3,3),g=r.decanonicalize(e.bundles[n][c]);i&&".js"==g.substr(g.length-3,3)&&(g=g.substr(0,g.length-3)),h.push(g)}r.bundles[n]=h}if(e.packages)for(var n in e.packages){if(n.match(/^([^\/]+:)?\/\/$/))throw new TypeError('"'+n+'" is not a valid package name.');var s=k.call(r,n);"/"==s[s.length-1]&&(s=s.substr(0,s.length-1)),r.packages[s]=r.packages[s]||{};var u=e.packages[n];u.modules&&(y.call(r,"Package "+n+' is configured with "modules", which is deprecated as it has been renamed to "meta".'),u.meta=u.modules,delete u.modules),"object"==typeof u.main&&(u.map=u.map||{},u.map["./@main"]=u.main,u.main["default"]=u.main["default"]||"./",u.main="@main");for(var b in u)-1==J.call(Q,b)&&y.call(r,'"'+b+'" is not a valid package configuration option in package '+n);v(r.packages[s],u)}for(var x in e){var o=e[x];if("baseURL"!=x&&"map"!=x&&"packages"!=x&&"bundles"!=x&&"paths"!=x&&"warnings"!=x&&"packageConfigPaths"!=x&&"loaderErrorStack"!=x)if("object"!=typeof o||o instanceof Array)r[x]=o;else{r[x]=r[x]||{};for(var n in o)if("meta"==x&&"*"==n[0])r[x][n]=o[n];else if("meta"==x){var _=k.call(r,n);r.defaultJSExtensions&&".js"!=_.substr(_.length-3,3)&&!E(_)&&(_+=".js"),r[x][_]=o[n]}else if("depCache"==x){var i=r.defaultJSExtensions&&".js"!=n.substr(n.length-3,3),s=r.decanonicalize(n);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3)),r[x][s]=o[n]}else r[x][n]=o[n]}}},function(){function e(e,t){var r,n,a=0;for(var o in e.packages)t.substr(0,o.length)!==o||t.length!==o.length&&"/"!==t[o.length]||(n=o.split("/").length,n>a&&(r=o,a=n));return r}function t(e,t,r,n,a){if(!n||"/"==n[n.length-1]||a||t.defaultExtension===!1)return n;if(n.match(le))return n;var o=!1;if(t.meta&&p(t.meta,n,function(e,t,r){return 0==r||e.lastIndexOf("*")!=e.length-1?o=!0:void 0}),!o&&e.meta&&p(e.meta,r+"/"+n,function(e,t,r){return 0==r||e.lastIndexOf("*")!=e.length-1?o=!0:void 0}),o)return n;var i="."+(t.defaultExtension||"js");return n.substr(n.length-i.length)!=i?n+i:n}function r(e,r,n,o,i){if(!o){if(!r.main)return n+(e.defaultJSExtensions?".js":"");o="./"==r.main.substr(0,2)?r.main.substr(2):r.main}if(r.map){var s="./"+o,l=x(r.map,s);if(l||(s="./"+t(e,r,n,o,i),s!="./"+o&&(l=x(r.map,s))),l)return a(e,r,n,l,s,i)}return n+"/"+t(e,r,n,o,i)}function n(e,t,r){if("."==e)throw new Error("Package "+r+' has a map entry for "." which is not permitted.');if(t.substr(0,e.length)==e&&"/"!=e[e.length-1]&&"/"==t[e.length])throw new Error("Package "+r+' has a recursive map for "'+e+'" which is not permitted.')}function a(e,r,a,o,i,s){var l=r.map[o];if("object"==typeof l)throw new Error("Synchronous conditional normalization not supported sync normalizing "+o+" in "+a);if(n(o,l,a),"string"!=typeof l&&(l=o=i),n(o,l,a),"."==l)l=a;else if("./"==l.substr(0,2))return a+"/"+t(e,r,a,l.substr(2)+i.substr(o.length),s);return e.normalizeSync(l+i.substr(o.length),a+"/")}function o(e,r,n,a,o){if(!a){if(!r.main)return Promise.resolve(n+(e.defaultJSExtensions?".js":""));a="./"==r.main.substr(0,2)?r.main.substr(2):r.main}var i,l;return r.map&&(i="./"+a,l=x(r.map,i),l||(i="./"+t(e,r,n,a,o),i!="./"+a&&(l=x(r.map,i)))),(l?s(e,r,n,l,i,o):Promise.resolve()).then(function(i){return i?Promise.resolve(i):Promise.resolve(n+"/"+t(e,r,n,a,o))})}function i(e,r,n,a,o,i,s){if("."==o)o=n;else if("./"==o.substr(0,2))return Promise.resolve(n+"/"+t(e,r,n,o.substr(2)+i.substr(a.length),s)).then(function(t){return I.call(e,t,n+"/")});return e.normalize(o+i.substr(a.length),n+"/")}function s(e,t,r,a,o,s){var l=t.map[a];return"string"==typeof l?(n(a,l,r),i(e,t,r,a,l,o,s)):e.builder?Promise.resolve(r+"/#:"+o):e["import"](t.map["@env"]||"@system-env",r).then(function(e){for(var t in l){var r="~"==t[0],n=b(r?t.substr(1):t,e);if(!r&&n||r&&!n)return l[t]}}).then(function(l){if(l){if("string"!=typeof l)throw new Error("Unable to map a package conditional to a package conditional.");return n(a,l,r),i(e,t,r,a,l,o,s)}})}function u(e){var t=e.lastIndexOf("*"),r=Math.max(t+1,e.lastIndexOf("/"));return{length:r,regEx:new RegExp("^("+e.substr(0,r).replace(/[.+?^${}()|[\]\\]/g,"\\$&").replace(/\*/g,"[^\\/]+")+")(\\/|$)"),wildcard:-1!=t}}function f(e,t){for(var r,n,a=!1,o=0;o<e.packageConfigPaths.length;o++){var i=e.packageConfigPaths[o],s=h[i]||(h[i]=u(i));if(!(t.length<s.length)){var l=t.match(s.regEx);!l||r&&(a&&s.wildcard||!(r.length<l[1].length))||(r=l[1],a=!s.wildcard,n=r+i.substr(s.length))}}return r?{packageName:r,configPath:n}:void 0}function m(e,t,r){var n=e.pluginLoader||e;return(n.meta[r]=n.meta[r]||{}).format="json",n.meta[r].loader=null,n.load(r).then(function(){var a=n.get(r)["default"];a.systemjs&&(a=a.systemjs),a.modules&&(a.meta=a.modules,y.call(e,"Package config file "+r+' is configured with "modules", which is deprecated as it has been renamed to "meta".'));for(var o in a)-1==J.call(Q,o)&&delete a[o];var i=e.packages[t]=e.packages[t]||{};if(v(i,a,!0),a.depCache){for(var s in a.depCache){var l;l="./"==s.substr(0,2)?t+"/"+s.substr(2):k.call(e,s),e.depCache[l]=(e.depCache[l]||[]).concat(a.depCache[s])}delete a.depCache}return"object"==typeof i.main&&(i.map=i.map||{},i.map["./@main"]=i.main,i.main["default"]=i.main["default"]||"./",i.main="@main"),i})}function p(e,t,r){var n;for(var a in e){var o="./"==a.substr(0,2)?"./":"";if(o&&(a=a.substr(2)),n=a.indexOf("*"),-1!==n&&a.substr(0,n)==t.substr(0,n)&&a.substr(n+1)==t.substr(t.length-a.length+n+1)&&r(a,e[o+a],a.split("/").length))return}var i=e[t]&&e.hasOwnProperty&&e.hasOwnProperty(t)?e[t]:e["./"+t];i&&r(i,i,0)}c(function(e){return function(){e.call(this),this.packages={},this.packageConfigPaths=[]}}),l.prototype.normalizeSync=l.prototype.decanonicalize=l.prototype.normalize,d("decanonicalize",function(t){return function(r,n){if(this.builder)return t.call(this,r,n,!0);var a=t.call(this,r,n);if(!this.defaultJSExtensions)return a;var o=e(this,a),i=this.packages[o],s=i&&i.defaultExtension;return void 0==s&&i&&i.meta&&p(i.meta,a.substr(o),function(e,t,r){return 0==r||e.lastIndexOf("*")!=e.length-1?(s=!1,!0):void 0}),(s===!1||s&&".js"!=s)&&".js"!=r.substr(r.length-3,3)&&".js"==a.substr(a.length-3,3)&&(a=a.substr(0,a.length-3)),a}}),d("normalizeSync",function(t){return function(n,o,i){y.call(this,"SystemJS.normalizeSync has been deprecated for SystemJS.decanonicalize.");var s=this;if(i=i===!0,o)var l=e(s,o)||s.defaultJSExtensions&&".js"==o.substr(o.length-3,3)&&e(s,o.substr(0,o.length-3));var u=l&&s.packages[l];if(u&&"."!=n[0]){var d=u.map,c=d&&x(d,n);if(c&&"string"==typeof d[c])return a(s,u,l,c,n,i)}var m=s.defaultJSExtensions&&".js"!=n.substr(n.length-3,3),p=t.call(s,n,o);m&&".js"!=p.substr(p.length-3,3)&&(m=!1),m&&(p=p.substr(0,p.length-3));var h=f(s,p),g=h&&h.packageName||e(s,p);if(!g)return p+(m?".js":"");var v=p.substr(g.length+1);return r(s,s.packages[g]||{},g,v,i)}}),d("normalize",function(t){return function(r,n,a){var i=this;return a=a===!0,Promise.resolve().then(function(){if(n)var t=e(i,n)||i.defaultJSExtensions&&".js"==n.substr(n.length-3,3)&&e(i,n.substr(0,n.length-3));var o=t&&i.packages[t];if(o&&"./"!=r.substr(0,2)){var l=o.map,u=l&&x(l,r);if(u)return s(i,o,t,u,r,a)}return Promise.resolve()}).then(function(s){if(s)return s;var l=i.defaultJSExtensions&&".js"!=r.substr(r.length-3,3),u=t.call(i,r,n);
	l&&".js"!=u.substr(u.length-3,3)&&(l=!1),l&&(u=u.substr(0,u.length-3));var d=f(i,u),c=d&&d.packageName||e(i,u);if(!c)return Promise.resolve(u+(l?".js":""));var p=i.packages[c],h=p&&(p.configured||!d);return(h?Promise.resolve(p):m(i,c,d.configPath)).then(function(e){var t=u.substr(c.length+1);return o(i,e,c,t,a)})})}});var h={};d("locate",function(t){return function(r){var n=this;return Promise.resolve(t.call(this,r)).then(function(t){var a=e(n,r.name);if(a){var o=n.packages[a],i=r.name.substr(a.length+1);o.format&&(r.metadata.format=r.metadata.format||o.format);var s={};if(o.meta){var l=0;p(o.meta,i,function(e,t,r){r>l&&(l=r),v(s,t,r&&l>r)}),v(r.metadata,s)}}return t})}})}(),function(){function t(){if(i&&"interactive"===i.script.readyState)return i.load;for(var e=0;e<u.length;e++)if("interactive"==u[e].script.readyState)return i=u[e],i.load}function r(e,t){return new Promise(function(e,r){t.metadata.integrity&&r(new Error("Subresource integrity checking is not supported in web workers.")),s=t;try{importScripts(t.address)}catch(n){s=null,r(n)}s=null,t.metadata.entry||r(new Error(t.address+" did not call System.register or AMD define")),e("")})}if("undefined"!=typeof document)var n=document.getElementsByTagName("head")[0];var a,o,i,s=null,l=n&&function(){var e=document.createElement("script"),t="undefined"!=typeof opera&&"[object Opera]"===opera.toString();return e.attachEvent&&!(e.attachEvent.toString&&e.attachEvent.toString().indexOf("[native code")<0)&&!t}(),u=[],c=0,f=[];d("pushRegister_",function(e){return function(r){return e.call(this,r)?!1:(s?this.reduceRegister_(s,r):l?this.reduceRegister_(t(),r):c?f.push(r):this.reduceRegister_(null,r),!0)}}),d("fetch",function(t){return function(s){var d=this;return"json"!=s.metadata.format&&s.metadata.scriptLoad&&(F||A)?A?r(d,s):new Promise(function(t,r){function m(e){if(!g.readyState||"loaded"==g.readyState||"complete"==g.readyState){if(c--,s.metadata.entry||f.length){if(!l){for(var n=0;n<f.length;n++)d.reduceRegister_(s,f[n]);f=[]}}else d.reduceRegister_(s);h(),s.metadata.entry||s.metadata.bundle||r(new Error(s.name+" did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.")),t("")}}function p(e){h(),r(new Error("Unable to load script "+s.address))}function h(){if(e.System=a,e.require=o,g.detachEvent){g.detachEvent("onreadystatechange",m);for(var t=0;t<u.length;t++)u[t].script==g&&(i&&i.script==g&&(i=null),u.splice(t,1))}else g.removeEventListener("load",m,!1),g.removeEventListener("error",p,!1);n.removeChild(g)}var g=document.createElement("script");g.async=!0,s.metadata.crossOrigin&&(g.crossOrigin=s.metadata.crossOrigin),s.metadata.integrity&&g.setAttribute("integrity",s.metadata.integrity),l?(g.attachEvent("onreadystatechange",m),u.push({script:g,load:s})):(g.addEventListener("load",m,!1),g.addEventListener("error",p,!1)),c++,a=e.System,o=e.require,g.src=s.address,n.appendChild(g)}):t.call(this,s)}})}();var ie=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;!function(){function t(e,r,n){if(n[e.groupIndex]=n[e.groupIndex]||[],-1==J.call(n[e.groupIndex],e)){n[e.groupIndex].push(e);for(var a=0,o=e.normalizedDeps.length;o>a;a++){var i=e.normalizedDeps[a],s=r.defined[i];if(s&&!s.evaluated){var l=e.groupIndex+(s.declarative!=e.declarative);if(null===s.groupIndex||s.groupIndex<l){if(null!==s.groupIndex&&(n[s.groupIndex].splice(J.call(n[s.groupIndex],s),1),0==n[s.groupIndex].length))throw new Error("Mixed dependency cycle detected");s.groupIndex=l}t(s,r,n)}}}}function r(e,r){var n=r.defined[e];if(!n.module){n.groupIndex=0;var a=[];t(n,r,a);for(var o=!!n.declarative==a.length%2,s=a.length-1;s>=0;s--){for(var l=a[s],d=0;d<l.length;d++){var c=l[d];o?i(c,r):u(c,r)}o=!o}}}function a(){}function o(e,t){return t[e]||(t[e]={name:e,dependencies:[],exports:new a,importers:[]})}function i(t,r){if(!t.module){var n=r._loader.moduleRecords,a=t.module=o(t.name,n),s=t.module.exports,l=t.declare.call(e,function(e,t){if(a.locked=!0,"object"==typeof e)for(var r in e)s[r]=e[r];else s[e]=t;for(var n=0,o=a.importers.length;o>n;n++){var i=a.importers[n];if(!i.locked){var l=J.call(i.dependencies,a);i.setters[l](s)}}return a.locked=!1,t},{id:t.name});if(a.setters=l.setters,a.execute=l.execute,!a.setters||!a.execute)throw new TypeError("Invalid System.register form for "+t.name);for(var u=0,d=t.normalizedDeps.length;d>u;u++){var c,f=t.normalizedDeps[u],m=r.defined[f],p=n[f];p?c=p.exports:m&&!m.declarative?c=m.esModule:m?(i(m,r),p=m.module,c=p.exports):c=r.get(f),p&&p.importers?(p.importers.push(a),a.dependencies.push(p)):a.dependencies.push(null);for(var h=t.originalIndices[u],g=0,v=h.length;v>g;++g){var y=h[g];a.setters[y]&&a.setters[y](c)}}}}function s(e,t){var r,n=t.defined[e];if(n)n.declarative?p(e,[],t):n.evaluated||u(n,t),r=n.module.exports;else if(r=t.get(e),!r)throw new Error("Unable to load dependency "+e+".");return(!n||n.declarative)&&r&&r.__useDefault?r["default"]:r}function u(t,r){if(!t.module){var a={},o=t.module={exports:a,id:t.name};if(!t.executingRequire)for(var i=0,l=t.normalizedDeps.length;l>i;i++){var d=t.normalizedDeps[i],c=r.defined[d];c&&u(c,r)}t.evaluated=!0;var f=t.execute.call(e,function(e){for(var n=0,a=t.deps.length;a>n;n++)if(t.deps[n]==e)return s(t.normalizedDeps[n],r);var o=r.normalizeSync(e,t.name);if(-1!=J.call(t.normalizedDeps,o))return s(o,r);throw new Error("Module "+e+" not declared as a dependency of "+t.name)},a,o);f&&(o.exports=f),a=o.exports,a&&(a.__esModule||a instanceof n)?t.esModule=a:t.esmExports&&a!==e?t.esModule=m(a):t.esModule={"default":a}}}function p(t,r,n){var a=n.defined[t];if(a&&!a.evaluated&&a.declarative){r.push(t);for(var o=0,i=a.normalizedDeps.length;i>o;o++){var s=a.normalizedDeps[o];-1==J.call(r,s)&&(n.defined[s]?p(s,r,n):n.get(s))}a.evaluated||(a.evaluated=!0,a.module.execute.call(e))}}l.prototype.register=function(e,t,r){if("string"!=typeof e&&(r=t,t=e,e=null),"boolean"==typeof r)return this.registerDynamic.apply(this,arguments);var n=P();n.name=e&&(this.decanonicalize||this.normalize).call(this,e),n.declarative=!0,n.deps=t,n.declare=r,this.pushRegister_({amd:!1,entry:n})},l.prototype.registerDynamic=function(e,t,r,n){"string"!=typeof e&&(n=r,r=t,t=e,e=null);var a=P();a.name=e&&(this.decanonicalize||this.normalize).call(this,e),a.deps=t,a.execute=n,a.executingRequire=r,this.pushRegister_({amd:!1,entry:a})},d("reduceRegister_",function(){return function(e,t){if(t){var r=t.entry,n=e&&e.metadata;if(r.name&&(r.name in this.defined||(this.defined[r.name]=r),n&&(n.bundle=!0)),!r.name||e&&r.name==e.name){if(!n)throw new TypeError("Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.");if(n.entry)throw"register"==n.format?new Error("Multiple anonymous System.register calls in module "+e.name+". If loading a bundle, ensure all the System.register calls are named."):new Error("Module "+e.name+" interpreted as "+n.format+" module format, but called System.register.");n.format||(n.format="register"),n.entry=r}}}}),c(function(e){return function(){e.call(this),this.defined={},this._loader.moduleRecords={}}}),q(a,"toString",{value:function(){return"Module"}}),d("delete",function(e){return function(t){return delete this._loader.moduleRecords[t],delete this.defined[t],e.call(this,t)}}),d("fetch",function(e){return function(t){return this.defined[t.name]?(t.metadata.format="defined",""):(t.metadata.deps=t.metadata.deps||[],e.call(this,t))}}),d("translate",function(e){return function(t){return t.metadata.deps=t.metadata.deps||[],Promise.resolve(e.call(this,t)).then(function(e){return("register"==t.metadata.format||!t.metadata.format&&R(t.source))&&(t.metadata.format="register"),e})}}),d("instantiate",function(e){return function(t){"detect"==t.metadata.format&&(t.metadata.format=void 0),e.call(this,t);var n,a=this;if(a.defined[t.name])n=a.defined[t.name],n.declarative||(n.deps=n.deps.concat(t.metadata.deps));else if(t.metadata.entry)n=t.metadata.entry,n.deps=n.deps.concat(t.metadata.deps);else if(!(a.builder&&t.metadata.bundle||"register"!=t.metadata.format&&"esm"!=t.metadata.format&&"es6"!=t.metadata.format)){if("undefined"!=typeof Y&&Y.call(a,t),!t.metadata.entry&&!t.metadata.bundle)throw new Error(t.name+" detected as "+t.metadata.format+" but didn't execute.");n=t.metadata.entry,n&&t.metadata.deps&&(n.deps=n.deps.concat(t.metadata.deps))}n||(n=P(),n.deps=t.metadata.deps,n.execute=function(){}),a.defined[t.name]=n;var o=f(n.deps);n.deps=o.names,n.originalIndices=o.indices,n.name=t.name,n.esmExports=t.metadata.esmExports!==!1;for(var i=[],s=0,l=n.deps.length;l>s;s++)i.push(Promise.resolve(a.normalize(n.deps[s],t.name)));return Promise.all(i).then(function(e){return n.normalizedDeps=e,{deps:n.deps,execute:function(){return r(t.name,a),p(t.name,[],a),a.defined[t.name]=void 0,a.newModule(n.declarative?n.module.exports:n.esModule)}}})}})}(),function(){var t=/(^\s*|[}\);\n]\s*)(import\s*(['"]|(\*\s+as\s+)?[^"'\(\)\n;]+\s*from\s*['"]|\{)|export\s+\*\s+from\s+["']|export\s*(\{|default|function|class|var|const|let|async\s+function))/,r=/\$traceurRuntime\s*\./,n=/babelHelpers\s*\./;d("translate",function(a){return function(o){var i=this;return a.call(i,o).then(function(a){if("esm"==o.metadata.format||"es6"==o.metadata.format||!o.metadata.format&&a.match(t)){if("es6"==o.metadata.format&&y.call(i,"Module "+o.name+' has metadata setting its format to "es6", which is deprecated.\nThis should be updated to "esm".'),o.metadata.format="esm",i.transpiler===!1){if(i.builder)return a;throw new TypeError("Unable to dynamically transpile ES module as SystemJS.transpiler set to false.")}return i._loader.loadedTranspiler=i._loader.loadedTranspiler||!1,i.pluginLoader&&(i.pluginLoader._loader.loadedTranspiler=i._loader.loadedTranspiler||!1),(i._loader.transpilerPromise||(i._loader.transpilerPromise=Promise.resolve(e["typescript"==i.transpiler?"ts":i.transpiler]||(i.pluginLoader||i)["import"](i.transpiler)))).then(function(e){return i._loader.loadedTranspilerRuntime=!0,e.translate?e==o.metadata.loaderModule?o.source:("string"==typeof o.metadata.sourceMap&&(o.metadata.sourceMap=JSON.parse(o.metadata.sourceMap)),Promise.resolve(e.translate.call(i,o)).then(function(e){var t=o.metadata.sourceMap;if(t&&"object"==typeof t){var r=o.name.split("!")[0];t.file=r+"!transpiled",(!t.sources||t.sources.length<=1)&&(t.sources=[r])}return"esm"==o.metadata.format&&!i.builder&&R(e)&&(o.metadata.format="register"),e})):(i.builder&&(o.metadata.originalSource=o.source),W.call(i,o).then(function(e){return o.metadata.sourceMap=void 0,e}))})}if(i.transpiler===!1)return a;if(i._loader.loadedTranspiler!==!1||"traceur"!=i.transpiler&&"typescript"!=i.transpiler&&"babel"!=i.transpiler||o.name!=i.normalizeSync(i.transpiler)||(a.length>100&&!o.metadata.format&&(o.metadata.format="global","traceur"===i.transpiler&&(o.metadata.exports="traceur"),"typescript"===i.transpiler&&(o.metadata.exports="ts")),i._loader.loadedTranspiler=!0),i._loader.loadedTranspilerRuntime===!1&&(o.name==i.normalizeSync("traceur-runtime")||o.name==i.normalizeSync("babel/external-helpers*"))&&(a.length>100&&(o.metadata.format=o.metadata.format||"global"),i._loader.loadedTranspilerRuntime=!0),("register"==o.metadata.format||o.metadata.bundle)&&i._loader.loadedTranspilerRuntime!==!0){if(!e.$traceurRuntime&&o.source.match(r))return i._loader.loadedTranspilerRuntime=i._loader.loadedTranspilerRuntime||!1,i["import"]("traceur-runtime").then(function(){return a});if(!e.babelHelpers&&o.source.match(n))return i._loader.loadedTranspilerRuntime=i._loader.loadedTranspilerRuntime||!1,i["import"]("babel/external-helpers").then(function(){return a})}return a})}})}();var se="undefined"!=typeof self?"self":"global";d("fetch",function(e){return function(t){return t.metadata.exports&&!t.metadata.format&&(t.metadata.format="global"),e.call(this,t)}}),d("instantiate",function(e){return function(t){var r=this;if(t.metadata.format||(t.metadata.format="global"),"global"==t.metadata.format&&!t.metadata.registered){var n=P();t.metadata.entry=n,n.deps=[];for(var a in t.metadata.globals){var o=t.metadata.globals[a];o&&n.deps.push(o)}n.execute=function(e,n,a){var o;if(t.metadata.globals){o={};for(var i in t.metadata.globals)t.metadata.globals[i]&&(o[i]=e(t.metadata.globals[i]))}var s=t.metadata.exports;s&&(t.source+="\n"+se+'["'+s+'"] = '+s+";");var l=r.get("@@global-helpers").prepareGlobal(a.id,s,o);return Y.call(r,t),l()}}return e.call(this,t)}}),d("reduceRegister_",function(e){return function(t,r){if(r||!t.metadata.exports)return e.call(this,t,r);t.metadata.format="global";var n=t.metadata.entry=P();n.deps=t.metadata.deps;var a=O(t.metadata.exports);n.execute=function(){return a}}}),c(function(t){return function(){function r(t){if(Object.keys)Object.keys(e).forEach(t);else for(var r in e)i.call(e,r)&&t(r)}function n(t){r(function(r){if(-1==J.call(s,r)){try{var n=e[r]}catch(a){s.push(r)}t(r,n)}})}var a=this;t.call(a);var o,i=Object.prototype.hasOwnProperty,s=["_g","sessionStorage","localStorage","clipboardData","frames","frameElement","external","mozAnimationStartTime","webkitStorageInfo","webkitIndexedDB","mozInnerScreenY","mozInnerScreenX"];a.set("@@global-helpers",a.newModule({prepareGlobal:function(t,r,a){var i=e.define;e.define=void 0;var s;if(a){s={};for(var l in a)s[l]=e[l],e[l]=a[l]}return r||(o={},n(function(e,t){o[e]=t})),function(){var t;if(r)t=O(r);else{t={};var a,l;n(function(e,r){o[e]!==r&&"undefined"!=typeof r&&(t[e]=r,"undefined"!=typeof a?l||a===r||(l=!0):a=r)}),t=l?t:a}if(s)for(var u in s)e[u]=s[u];return e.define=i,t}}}))}}),function(){function t(e){function t(e,t){for(var r=0;r<e.length;r++)if(e[r][0]<t.index&&e[r][1]>t.index)return!0;return!1}n.lastIndex=a.lastIndex=o.lastIndex=0;var r,i=[],s=[],l=[];if(e.length/e.split("\n").length<200){for(;r=o.exec(e);)s.push([r.index,r.index+r[0].length]);for(;r=a.exec(e);)t(s,r)||l.push([r.index,r.index+r[0].length])}for(;r=n.exec(e);)if(!t(s,r)&&!t(l,r)){var u=r[1].substr(1,r[1].length-2);if(u.match(/"|'/))continue;"/"==u[u.length-1]&&(u=u.substr(0,u.length-1)),i.push(u)}return i}var r=/(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])(exports\s*(\[['"]|\.)|module(\.exports|\['exports'\]|\["exports"\])\s*(\[['"]|[=,\.]))/,n=/(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF."'])require\s*\(\s*("[^"\\]*(?:\\.[^"\\]*)*"|'[^'\\]*(?:\\.[^'\\]*)*')\s*\)/g,a=/(^|[^\\])(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,o=/("[^"\\\n\r]*(\\.[^"\\\n\r]*)*"|'[^'\\\n\r]*(\\.[^'\\\n\r]*)*')/g,i=/^\#\!.*/;d("instantiate",function(a){return function(o){var s=this;if(o.metadata.format||(r.lastIndex=0,n.lastIndex=0,(n.exec(o.source)||r.exec(o.source))&&(o.metadata.format="cjs")),"cjs"==o.metadata.format){var l=o.metadata.deps,u=o.metadata.cjsRequireDetection===!1?[]:t(o.source);for(var d in o.metadata.globals)o.metadata.globals[d]&&u.push(o.metadata.globals[d]);var c=P();o.metadata.entry=c,c.deps=u,c.executingRequire=!0,c.execute=function(t,r,n){function a(e){return"/"==e[e.length-1]&&(e=e.substr(0,e.length-1)),t.apply(this,arguments)}if(a.resolve=function(e){return s.get("@@cjs-helpers").requireResolve(e,n.id)},!o.metadata.cjsDeferDepsExecute)for(var u=0;u<l.length;u++)a(l[u]);var d=s.get("@@cjs-helpers").getPathVars(n.id),c={exports:r,args:[a,r,n,d.filename,d.dirname,e,e]},f="(function(require, exports, module, __filename, __dirname, global, GLOBAL";if(o.metadata.globals)for(var m in o.metadata.globals)c.args.push(a(o.metadata.globals[m])),f+=", "+m;var p=e.define;e.define=void 0,e.__cjsWrapper=c,o.source=f+") {"+o.source.replace(i,"")+"\n}).apply(__cjsWrapper.exports, __cjsWrapper.args);",Y.call(s,o),e.__cjsWrapper=void 0,e.define=p}}return a.call(s,o)}})}(),c(function(e){return function(){function t(e){return"file:///"==e.substr(0,8)?e.substr(7+!!D):n&&e.substr(0,n.length)==n?e.substr(n.length):e}var r=this;if(e.call(r),"undefined"!=typeof window&&"undefined"!=typeof document&&window.location)var n=location.protocol+"//"+location.hostname+(location.port?":"+location.port:"");r.set("@@cjs-helpers",r.newModule({requireResolve:function(e,n){return t(r.normalizeSync(e,n))},getPathVars:function(e){var r,n=e.lastIndexOf("!");r=-1!=n?e.substr(0,n):e;var a=r.split("/");return a.pop(),a=a.join("/"),{filename:t(r),dirname:t(a)}}}))}}),d("fetch",function(t){return function(r){return r.metadata.scriptLoad&&F&&(e.define=this.amdDefine),t.call(this,r)}}),c(function(t){return function(){function r(e,t){e=e.replace(i,"");var r=e.match(u),n=(r[1].split(",")[t]||"require").replace(c,""),a=f[n]||(f[n]=new RegExp(s+n+l,"g"));a.lastIndex=0;for(var o,d=[];o=a.exec(e);)d.push(o[2]||o[3]);return d}function n(e,t,r,a){if("object"==typeof e&&!(e instanceof Array))return n.apply(null,Array.prototype.splice.call(arguments,1,arguments.length-1));if("string"==typeof e&&"function"==typeof t&&(e=[e]),!(e instanceof Array)){if("string"==typeof e){var i=o.defaultJSExtensions&&".js"!=e.substr(e.length-3,3),s=o.decanonicalize(e,a);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3));var l=o.get(s);if(!l)throw new Error('Module not already loaded loading "'+e+'" as '+s+(a?' from "'+a+'".':"."));return l.__useDefault?l["default"]:l}throw new TypeError("Invalid require")}for(var u=[],d=0;d<e.length;d++)u.push(o["import"](e[d],a));Promise.all(u).then(function(e){t&&t.apply(null,e)},r)}function a(t,a,i){function s(t,r,s){function c(e,r,a){return"string"==typeof e&&"function"!=typeof r?t(e):n.call(o,e,r,a,s.id)}for(var f=[],m=0;m<a.length;m++)f.push(t(a[m]));s.uri=s.id,s.config=function(){},-1!=d&&f.splice(d,0,s),-1!=u&&f.splice(u,0,r),-1!=l&&(c.toUrl=function(e){var t=o.defaultJSExtensions&&".js"!=e.substr(e.length-3,3),r=o.decanonicalize(e,s.id);return t&&".js"==r.substr(r.length-3,3)&&(r=r.substr(0,r.length-3)),r},f.splice(l,0,c));var p=e.require;e.require=n;var h=i.apply(-1==u?e:r,f);return e.require=p,"undefined"==typeof h&&s&&(h=s.exports),"undefined"!=typeof h?h:void 0}"string"!=typeof t&&(i=a,a=t,t=null),a instanceof Array||(i=a,a=["require","exports","module"].splice(0,i.length)),"function"!=typeof i&&(i=function(e){return function(){return e}}(i)),void 0===a[a.length-1]&&a.pop();var l,u,d;-1!=(l=J.call(a,"require"))&&(a.splice(l,1),t||(a=a.concat(r(i.toString(),l)))),-1!=(u=J.call(a,"exports"))&&a.splice(u,1),-1!=(d=J.call(a,"module"))&&a.splice(d,1);var c=P();c.name=t&&(o.decanonicalize||o.normalize).call(o,t),c.deps=a,c.execute=s,o.pushRegister_({amd:!0,entry:c})}var o=this;t.call(this);var i=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,s="(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",l="\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",u=/\(([^\)]*)\)/,c=/^\s+|\s+$/g,f={};a.amd={},d("reduceRegister_",function(e){return function(t,r){if(!r||!r.amd)return e.call(this,t,r);var n=t&&t.metadata,a=r.entry;if(n)if(n.format&&"detect"!=n.format){if(!a.name&&"amd"!=n.format)throw new Error("AMD define called while executing "+n.format+" module "+t.name)}else n.format="amd";if(a.name)n&&(n.entry||n.bundle?n.entry&&n.entry.name&&(n.entry=void 0):n.entry=a,n.bundle=!0),a.name in this.defined||(this.defined[a.name]=a);else{if(!n)throw new TypeError("Unexpected anonymous AMD define.");if(n.entry&&!n.entry.name)throw new Error("Multiple anonymous defines in module "+t.name);n.entry=a}}}),o.amdDefine=a,o.amdRequire=n}}),function(){var t=/(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])define\s*\(\s*("[^"]+"\s*,\s*|'[^']+'\s*,\s*)?\s*(\[(\s*(("[^"]+"|'[^']+')\s*,|\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*(\s*("[^"]+"|'[^']+')\s*,?)?(\s*(\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*\s*\]|function\s*|{|[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*\))/;d("instantiate",function(r){return function(n){var a=this;if("amd"==n.metadata.format||!n.metadata.format&&n.source.match(t))if(n.metadata.format="amd",a.builder||a.execute===!1)n.metadata.execute=function(){return n.metadata.builderExecute.apply(this,arguments)};else{var o=e.define;e.define=this.amdDefine;try{Y.call(a,n)}finally{e.define=o}if(!n.metadata.entry&&!n.metadata.bundle)throw new TypeError("AMD module "+n.name+" did not define")}return r.call(a,n)}})}(),function(){function e(e,t){if(t){var r;if(e.pluginFirst){if(-1!=(r=t.lastIndexOf("!")))return t.substr(r+1)}else if(-1!=(r=t.indexOf("!")))return t.substr(0,r);return t}}function t(e,t){var r,n,a=t.lastIndexOf("!");return-1!=a?(e.pluginFirst?(r=t.substr(a+1),n=t.substr(0,a)):(r=t.substr(0,a),n=t.substr(a+1)||r.substr(r.lastIndexOf(".")+1)),{argument:r,plugin:n}):void 0}function r(e,t,r,n){return n&&".js"==t.substr(t.length-3,3)&&(t=t.substr(0,t.length-3)),e.pluginFirst?r+"!"+t:t+"!"+r}function n(e,t){return e.defaultJSExtensions&&".js"!=t.substr(t.length-3,3)}function a(a){return function(o,i,s){var l=this;i=e(this,i);var u=t(l,o);if(!u)return a.call(this,o,i,s);var d=l.normalizeSync(u.argument,i,!0),c=l.normalizeSync(u.plugin,i,!0);return r(l,d,c,n(l,u.argument))}}d("decanonicalize",a),d("normalizeSync",a),d("normalize",function(a){return function(o,i,s){var l=this;i=e(this,i);var u=t(l,o);return u?Promise.all([l.normalize(u.argument,i,!0),l.normalize(u.plugin,i)]).then(function(e){return r(l,e[0],e[1],n(l,u.argument))}):a.call(l,o,i,s)}}),d("locate",function(e){return function(t){var r,n=this,a=t.name;return n.pluginFirst?-1!=(r=a.indexOf("!"))&&(t.metadata.loader=a.substr(0,r),t.name=a.substr(r+1)):-1!=(r=a.lastIndexOf("!"))&&(t.metadata.loader=a.substr(r+1),t.name=a.substr(0,r)),e.call(n,t).then(function(e){return-1==r&&t.metadata.loader?n.normalize(t.metadata.loader,t.name).then(function(r){return t.metadata.loader=r,e}):e}).then(function(e){var r=t.metadata.loader;if(!r)return e;if(t.name==r)throw new Error("Plugin "+r+" cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.");if(n.defined&&n.defined[a])return e;var o=n.pluginLoader||n;return o["import"](r).then(function(r){return t.metadata.loaderModule=r,t.address=e,r.locate?r.locate.call(n,t):e})})}}),d("fetch",function(e){return function(t){var r=this;return t.metadata.loaderModule&&t.metadata.loaderModule.fetch&&"defined"!=t.metadata.format?(t.metadata.scriptLoad=!1,t.metadata.loaderModule.fetch.call(r,t,function(t){return e.call(r,t)})):e.call(r,t)}}),d("translate",function(e){return function(t){var r=this;return t.metadata.loaderModule&&t.metadata.loaderModule.translate&&"defined"!=t.metadata.format?Promise.resolve(t.metadata.loaderModule.translate.call(r,t)).then(function(n){var a=t.metadata.sourceMap;if(a){if("object"!=typeof a)throw new Error("load.metadata.sourceMap must be set to an object.");var o=t.name.split("!")[0];a.file=o+"!transpiled",(!a.sources||a.sources.length<=1)&&(a.sources=[o])}return"string"==typeof n?t.source=n:y.call(this,"Plugin "+t.metadata.loader+" should return the source in translate, instead of setting load.source directly. This support will be deprecated."),e.call(r,t)}):e.call(r,t)}}),d("instantiate",function(e){return function(t){var r=this,n=!1;return t.metadata.loaderModule&&t.metadata.loaderModule.instantiate&&!r.builder&&"defined"!=t.metadata.format?Promise.resolve(t.metadata.loaderModule.instantiate.call(r,t,function(t){if(n)throw new Error("Instantiate must only be called once.");return n=!0,e.call(r,t)})).then(function(a){return n?a:(t.metadata.entry=P(),t.metadata.entry.execute=function(){return a},t.metadata.entry.deps=t.metadata.deps,t.metadata.format="defined",e.call(r,t))}):e.call(r,t)}})}();var le=/#\{[^\}]+\}/;d("normalize",function(e){return function(t,r,n){var a=this;return L.call(a,t,r).then(function(t){return e.call(a,t,r,n)}).then(function(e){return I.call(a,e,r)})}}),function(){d("fetch",function(e){return function(t){var r=t.metadata.alias,n=t.metadata.deps||[];if(r){t.metadata.format="defined";var a=P();return this.defined[t.name]=a,a.declarative=!0,a.deps=n.concat([r]),a.declare=function(e){return{setters:[function(t){for(var r in t)e(r,t[r]);t.__useDefault&&(a.module.exports.__useDefault=!0)}],execute:function(){}}},""}return e.call(this,t)}})}(),function(){function e(e,t,r){for(var n,a=t.split(".");a.length>1;)n=a.shift(),e=e[n]=e[n]||{};n=a.shift(),n in e||(e[n]=r)}c(function(e){return function(){this.meta={},e.call(this)}}),d("locate",function(e){return function(t){var r,n=this.meta,a=t.name,o=0;for(var i in n)if(r=i.indexOf("*"),-1!==r&&i.substr(0,r)===a.substr(0,r)&&i.substr(r+1)===a.substr(a.length-i.length+r+1)){var s=i.split("/").length;s>o&&(o=s),v(t.metadata,n[i],o!=s)}return n[a]&&v(t.metadata,n[a]),e.call(this,t)}});var t=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/,r=/\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g;d("translate",function(n){return function(a){var o=a.source.match(t);if(o)for(var i=o[0].match(r),s=0;s<i.length;s++){var l=i[s],u=l.length,d=l.substr(0,1);if(";"==l.substr(u-1,1)&&u--,'"'==d||"'"==d){var c=l.substr(1,l.length-3),f=c.substr(0,c.indexOf(" "));if(f){var m=c.substr(f.length+1,c.length-f.length-1);"[]"==f.substr(f.length-2,2)?(f=f.substr(0,f.length-2),a.metadata[f]=a.metadata[f]||[],a.metadata[f].push(m)):a.metadata[f]instanceof Array?(y.call(this,"Module "+a.name+' contains deprecated "deps '+m+'" meta syntax.\nThis should be updated to "deps[] '+m+'" for pushing to array meta.'),a.metadata[f].push(m)):e(a.metadata,f,m)}else a.metadata[c]=!0}}return n.call(this,a)}})}(),function(){c(function(e){return function(){e.call(this),this.bundles={},this._loader.loadedBundles={}}}),d("locate",function(e){return function(t){var r=this,n=!1;if(!(t.name in r.defined))for(var a in r.bundles){for(var o=0;o<r.bundles[a].length;o++){var i=r.bundles[a][o];if(i==t.name){n=!0;break}if(-1!=i.indexOf("*")){var s=i.split("*");if(2!=s.length){r.bundles[a].splice(o--,1);continue}if(t.name.substring(0,s[0].length)==s[0]&&t.name.substr(t.name.length-s[1].length,s[1].length)==s[1]&&-1==t.name.substr(s[0].length,t.name.length-s[1].length-s[0].length).indexOf("/")){n=!0;break}}}if(n)return r["import"](a).then(function(){return e.call(r,t)})}return e.call(r,t)}})}(),function(){c(function(e){return function(){e.call(this),this.depCache={}}}),d("locate",function(e){return function(t){var r=this,n=r.depCache[t.name];if(n)for(var a=0;a<n.length;a++)r["import"](n[a],t.name);return e.call(r,t)}})}(),X=new l,e.SystemJS=X,X.version="0.19.27 Standard","object"==typeof exports&&(module.exports=a),e.Reflect=e.Reflect||{},e.Reflect.Loader=e.Reflect.Loader||a,e.Reflect.global=e.Reflect.global||e,e.LoaderPolyfill=a,X||(X=new o,X.constructor=o),"object"==typeof exports&&(module.exports=X),e.System=X}("undefined"!=typeof self?self:global)}var t="undefined"==typeof Promise;if("undefined"!=typeof document){var r=document.getElementsByTagName("script");if($__curScript=r[r.length-1],t){var n=$__curScript.src,a=n.substr(0,n.lastIndexOf("/")+1);window.systemJSBootstrap=e,document.write('<script type="text/javascript" src="'+a+'system-polyfills.js"></script>')}else e()}else if("undefined"!=typeof importScripts){var a="";try{throw new Error("_")}catch(o){o.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/,function(e,t){$__curScript={src:t},a=t.replace(/\/[^\/]*$/,"/")})}t&&importScripts(a+"system-polyfills.js"),e()}else $__curScript= true?{src:__filename}:null,e()}();
	//# sourceMappingURL=system.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698), "/index.js"))

/***/ },
/* 729 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./system": 728,
		"./system-csp-production": 730,
		"./system-csp-production.js": 730,
		"./system-csp-production.src": 732,
		"./system-csp-production.src.js": 732,
		"./system-polyfills": 733,
		"./system-polyfills.js": 733,
		"./system-polyfills.src": 735,
		"./system-polyfills.src.js": 735,
		"./system-register-only": 736,
		"./system-register-only.js": 736,
		"./system-register-only.src": 738,
		"./system-register-only.src.js": 738,
		"./system.js": 728,
		"./system.src": 740,
		"./system.src.js": 740
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 729;


/***/ },
/* 730 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process, __filename) {/*
	 * SystemJS v0.19.27
	 */
	!function(){function e(){!function(e){function t(e,n){if("string"!=typeof e)throw new TypeError("URL must be a string");var r=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);if(!r)throw new RangeError("Invalid URL format");var a=r[1]||"",o=r[2]||"",i=r[3]||"",s=r[4]||"",l=r[5]||"",u=r[6]||"",d=r[7]||"",c=r[8]||"",f=r[9]||"";if(void 0!==n){var m=n instanceof t?n:new t(n),p=!a&&!s&&!o;!p||d||c||(c=m.search),p&&"/"!==d[0]&&(d=d?(!m.host&&!m.username||m.pathname?"":"/")+m.pathname.slice(0,m.pathname.lastIndexOf("/")+1)+d:m.pathname);var h=[];d.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,function(e){"/.."===e?h.pop():h.push(e)}),d=h.join("").replace(/^\//,"/"===d[0]?"/":""),p&&(u=m.port,l=m.hostname,s=m.host,i=m.password,o=m.username),a||(a=m.protocol)}"file:"==a&&(d=d.replace(/\\/g,"/")),this.origin=s?a+(""!==a||""!==s?"//":"")+s:"",this.href=a+(a&&s||"file:"==a?"//":"")+(""!==o?o+(""!==i?":"+i:"")+"@":"")+s+d+c+f,this.protocol=a,this.username=o,this.password=i,this.host=s,this.hostname=l,this.port=u,this.pathname=d,this.search=c,this.hash=f}e.URLPolyfill=t}("undefined"!=typeof self?self:global),function(e){function t(e,t){if(!e.originalErr)for(var n=(e.stack||e.message||e).split("\n"),r=[],a=0;a<n.length;a++)("undefined"==typeof $__curScript||-1==n[a].indexOf($__curScript.src))&&r.push(n[a]);var o=(r?r.join("\n	"):e.message)+"\n	"+t;J||(o=o.replace(q?/file:\/\/\//g:/file:\/\//g,""));var i=N?new Error(o,e.fileName,e.lineNumber):new Error(o);return J?i.stack=null:i.stack=o,i.originalErr=e.originalErr||e,i}function n(e,n,r){try{new Function(e).call(r)}catch(a){throw t(a,"Evaluating "+n)}}function r(){}function a(t){this._loader={loaderObj:this,loads:[],modules:{},importPromises:{},moduleRecords:{}},A(this,"global",{get:function(){return e}})}function o(){a.call(this),this.paths={}}function i(e,t){var n,r="",a=0;for(var o in e){var i=o.split("*");if(i.length>2)throw new TypeError("Only one wildcard in a path is permitted");if(1==i.length){if(t==o)return e[o];if(t.substr(0,o.length-1)==o.substr(0,o.length-1)&&(t.length<o.length||t[o.length-1]==o[o.length-1])&&"/"==e[o][e[o].length-1])return e[o].substr(0,e[o].length-1)+(t.length>o.length?"/"+t.substr(o.length):"")}else{var s=i[0].length;s>=a&&t.substr(0,i[0].length)==i[0]&&t.substr(t.length-i[1].length)==i[1]&&(a=s,r=o,n=t.substr(i[0].length,t.length-i[1].length-i[0].length))}}var l=e[r];return"string"==typeof n&&(l=l.replace("*",n)),l}function s(){}function l(){o.call(this),Y.call(this)}function u(){}function d(e,t){l.prototype[e]=t(l.prototype[e]||function(){})}function c(e){Y=e(Y||function(){})}function f(e){for(var t=[],n=[],r=0,a=e.length;a>r;r++){var o=C.call(t,e[r]);-1===o?(t.push(e[r]),n.push([r])):n[o].push(r)}return{names:t,indices:n}}function m(e){var t={};if("object"==typeof e||"function"==typeof e){var n=e&&e.hasOwnProperty;if(Z)for(var r in e)h(t,e,r)||p(t,e,r,n);else for(var r in e)p(t,e,r,n)}return t["default"]=e,A(t,"__useDefault",{value:!0}),t}function p(e,t,n,r){(!r||t.hasOwnProperty(n))&&(e[n]=t[n])}function h(e,t,n){try{var r;return(r=Object.getOwnPropertyDescriptor(t,n))&&A(e,n,r),!0}catch(a){return!1}}function g(e,t,n){for(var r in t)n&&r in e||(e[r]=t[r]);return e}function v(e,t,n){for(var r in t){var a=t[r];r in e?a instanceof Array&&e[r]instanceof Array?e[r]=[].concat(n?a:e[r]).concat(n?e[r]:a):"object"==typeof a&&null!==a&&"object"==typeof e[r]?e[r]=g(g({},e[r]),a,n):n||(e[r]=a):e[r]=a}}function y(e){this.warnings&&"undefined"!=typeof console&&console.warn}function b(e,t){for(var n=e.split(".");n.length;)t=t[n.shift()];return t}function w(){if(W[this.baseURL])return W[this.baseURL];"/"!=this.baseURL[this.baseURL.length-1]&&(this.baseURL+="/");var e=new H(this.baseURL,U);return this.baseURL=e.href,W[this.baseURL]=e}function x(e,t){var n,r=0;for(var a in e)if(t.substr(0,a.length)==a&&(t.length==a.length||"/"==t[a.length])){var o=a.split("/").length;if(r>=o)continue;n=a,r=o}return n}function S(e){this.set("@system-env",this.newModule({browser:J,node:!!this._nodeRequire,production:e,"default":!0}))}function E(e){return("."!=e[0]||!!e[1]&&"/"!=e[1]&&"."!=e[1])&&"/"!=e[0]&&!e.match(Q)}function k(e,t){return t&&(t=t.replace(/#/g,"%05")),new H(e,t||ee).href.replace(/%05/g,"#")}function j(e,t){return new H(t,w.call(e)).href}function P(e,t){if(!E(e))return k(e,t);var n=x(this.map,e);if(n&&(e=this.map[n]+e.substr(n.length),!E(e)))return k(e);if(this.has(e))return e;if("@node/"==e.substr(0,6)&&-1!=te.indexOf(e.substr(6))){if(!this._nodeRequire)throw new TypeError("Error loading "+e+". Can only load node core modules in Node.");return this.set(e,this.newModule(m(this._nodeRequire(e.substr(6))))),e}var r=i(this.paths,e);return r&&!E(r)?k(r):j(this,r||e)}function _(e){var t=e.match(ae);return t&&"System.register"==e.substr(t[0].length,15)}function O(){return{name:null,deps:null,originalIndices:null,declare:null,execute:null,executingRequire:!1,declarative:!1,normalizedDeps:null,groupIndex:null,evaluated:!1,module:null,esModule:null,esmExports:!1}}function R(t){if("string"==typeof t)return b(t,e);if(!(t instanceof Array))throw new Error("Global exports must be a string or array.");for(var n={},r=!0,a=0;a<t.length;a++){var o=b(t[a],e);r&&(n["default"]=o,r=!1),n[t[a].split(".").pop()]=o}return n}function z(e){var t,n,r,r="~"==e[0],a=e.lastIndexOf("|");return-1!=a?(t=e.substr(a+1),n=e.substr(r,a-r)||"@system-env"):(t=null,n=e.substr(r)),{module:n,prop:t,negate:r}}function M(e){return(e.negate?"~":"")+e.module+(e.prop?"|"+e.prop:"")}function I(e,t,n){return this["import"](e.module,t).then(function(t){if(e.prop?t=b(e.prop,t):"object"==typeof t&&t+""=="Module"&&(t=t["default"]),n&&"boolean"!=typeof t)throw new TypeError("Condition "+M(e)+" did not resolve to a boolean.");return e.negate?!t:t})}function L(e,t){var n=e.match(oe);if(!n)return Promise.resolve(e);var r=z(n[0].substr(2,n[0].length-3));return this.builder?this.normalize(r.module,t).then(function(t){return r.module=t,e.replace(oe,"#{"+M(r)+"}")}):I.call(this,r,t,!1).then(function(n){if("string"!=typeof n)throw new TypeError("The condition value for "+e+" doesn't resolve to a string.");if(-1!=n.indexOf("/"))throw new TypeError("Unabled to interpolate conditional "+e+(t?" in "+t:"")+"\n	The condition value "+n+' cannot contain a "/" separator.');return e.replace(oe,n)})}function T(e,t){var n=e.lastIndexOf("#?");if(-1==n)return Promise.resolve(e);var r=z(e.substr(n+2));return this.builder?this.normalize(r.module,t).then(function(t){return r.module=t,e.substr(0,n)+"#?"+M(r)}):I.call(this,r,t,!0).then(function(t){return t?e.substr(0,n):"@empty"})}var D="undefined"==typeof window&&"undefined"!=typeof self&&"undefined"!=typeof importScripts,J="undefined"!=typeof window&&"undefined"!=typeof document,q="undefined"!=typeof process&&"undefined"!=typeof process.platform&&!!process.platform.match(/^win/);e.console||(e.console={assert:function(){}});var A,C=Array.prototype.indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(this[t]===e)return t;return-1};!function(){try{Object.defineProperty({},"a",{})&&(A=Object.defineProperty)}catch(e){A=function(e,t,n){try{e[t]=n.value||n.get.call(e)}catch(r){}}}}();var U,N="_"==new Error(0,"_").fileName;if("undefined"!=typeof document&&document.getElementsByTagName){if(U=document.baseURI,!U){var $=document.getElementsByTagName("base");U=$[0]&&$[0].href||window.location.href}U=U.split("#")[0].split("?")[0],U=U.substr(0,U.lastIndexOf("/")+1)}else if("undefined"!=typeof process&&process.cwd)U="file://"+(q?"/":"")+process.cwd()+"/",q&&(U=U.replace(/\\/g,"/"));else{if("undefined"==typeof location)throw new TypeError("No environment baseURI");U=e.location.href}try{var F="test:"==new e.URL("test:///").protocol}catch(B){}var H=F?e.URL:e.URLPolyfill;A(r.prototype,"toString",{value:function(){return"Module"}}),function(){function o(e){return{status:"loading",name:e,linkSets:[],dependencies:[],metadata:{}}}function i(e,t,n){return new Promise(c({step:n.address?"fetch":"locate",loader:e,moduleName:t,moduleMetadata:n&&n.metadata||{},moduleSource:n.source,moduleAddress:n.address}))}function s(e,t,n,r){return new Promise(function(a,o){a(e.loaderObj.normalize(t,n,r))}).then(function(t){var n;if(e.modules[t])return n=o(t),n.status="linked",n.module=e.modules[t],n;for(var r=0,a=e.loads.length;a>r;r++)if(n=e.loads[r],n.name==t)return n;return n=o(t),e.loads.push(n),l(e,n),n})}function l(e,t){u(e,t,Promise.resolve().then(function(){return e.loaderObj.locate({name:t.name,metadata:t.metadata})}))}function u(e,t,n){d(e,t,n.then(function(n){return"loading"==t.status?(t.address=n,e.loaderObj.fetch({name:t.name,metadata:t.metadata,address:n})):void 0}))}function d(t,r,a){a.then(function(a){return"loading"==r.status?Promise.resolve(t.loaderObj.translate({name:r.name,metadata:r.metadata,address:r.address,source:a})).then(function(e){return r.source=e,t.loaderObj.instantiate({name:r.name,metadata:r.metadata,address:r.address,source:e})}).then(function(a){if(void 0===a)return r.address=r.address||"<Anonymous Module "+ ++k+">",r.isDeclarative=!0,E.call(t.loaderObj,r).then(function(t){var a=e.System,o=a.register;a.register=function(e,t,n){"string"!=typeof e&&(n=t,t=e),r.declare=n,r.depsList=t},n(t,r.address,{}),a.register=o});if("object"!=typeof a)throw TypeError("Invalid instantiate return value");r.depsList=a.deps||[],r.execute=a.execute,r.isDeclarative=!1}).then(function(){r.dependencies=[];for(var e=r.depsList,n=[],a=0,o=e.length;o>a;a++)(function(e,a){n.push(s(t,e,r.name,r.address).then(function(t){if(r.dependencies[a]={key:e,value:t.name},"linked"!=t.status)for(var n=r.linkSets.concat([]),o=0,i=n.length;i>o;o++)m(n[o],t)}))})(e[a],a);return Promise.all(n)}).then(function(){r.status="loaded";for(var e=r.linkSets.concat([]),t=0,n=e.length;n>t;t++)h(e[t],r)}):void 0})["catch"](function(e){r.status="failed",r.exception=e;for(var t=r.linkSets.concat([]),n=0,a=t.length;a>n;n++)g(t[n],r,e)})}function c(e){return function(t,n){var r=e.loader,a=e.moduleName,i=e.step;if(r.modules[a])throw new TypeError('"'+a+'" already exists in the module table');for(var s,c=0,m=r.loads.length;m>c;c++)if(r.loads[c].name==a&&(s=r.loads[c],"translate"!=i||s.source||(s.address=e.moduleAddress,d(r,s,Promise.resolve(e.moduleSource))),s.linkSets.length&&s.linkSets[0].loads[0].name==s.name))return s.linkSets[0].done.then(function(){t(s)});var p=s||o(a);p.metadata=e.moduleMetadata;var h=f(r,p);r.loads.push(p),t(h.done),"locate"==i?l(r,p):"fetch"==i?u(r,p,Promise.resolve(e.moduleAddress)):(p.address=e.moduleAddress,d(r,p,Promise.resolve(e.moduleSource)))}}function f(e,t){var n={loader:e,loads:[],startingLoad:t,loadingCount:0};return n.done=new Promise(function(e,t){n.resolve=e,n.reject=t}),m(n,t),n}function m(e,t){if("failed"!=t.status){for(var n=0,r=e.loads.length;r>n;n++)if(e.loads[n]==t)return;e.loads.push(t),t.linkSets.push(e),"loaded"!=t.status&&e.loadingCount++;for(var a=e.loader,n=0,r=t.dependencies.length;r>n;n++)if(t.dependencies[n]){var o=t.dependencies[n].value;if(!a.modules[o])for(var i=0,s=a.loads.length;s>i;i++)if(a.loads[i].name==o){m(e,a.loads[i]);break}}}}function p(e){var t=!1;try{w(e,function(n,r){g(e,n,r),t=!0})}catch(n){g(e,null,n),t=!0}return t}function h(e,t){if(e.loadingCount--,!(e.loadingCount>0)){var n=e.startingLoad;if(e.loader.loaderObj.execute===!1){for(var r=[].concat(e.loads),a=0,o=r.length;o>a;a++){var t=r[a];t.module=t.isDeclarative?{name:t.name,module:j({}),evaluated:!0}:{module:j({})},t.status="linked",v(e.loader,t)}return e.resolve(n)}var i=p(e);i||e.resolve(n)}}function g(e,n,r){var a=e.loader;e:if(n)if(e.loads[0].name==n.name)r=t(r,"Error loading "+n.name);else{for(var o=0;o<e.loads.length;o++)for(var i=e.loads[o],s=0;s<i.dependencies.length;s++){var l=i.dependencies[s];if(l.value==n.name){r=t(r,"Error loading "+n.name+' as "'+l.key+'" from '+i.name);break e}}r=t(r,"Error loading "+n.name+" from "+e.loads[0].name)}else r=t(r,"Error linking "+e.loads[0].name);for(var u=e.loads.concat([]),o=0,d=u.length;d>o;o++){var n=u[o];a.loaderObj.failed=a.loaderObj.failed||[],-1==C.call(a.loaderObj.failed,n)&&a.loaderObj.failed.push(n);var c=C.call(n.linkSets,e);if(n.linkSets.splice(c,1),0==n.linkSets.length){var f=C.call(e.loader.loads,n);-1!=f&&e.loader.loads.splice(f,1)}}e.reject(r)}function v(e,t){if(e.loaderObj.trace){e.loaderObj.loads||(e.loaderObj.loads={});var n={};t.dependencies.forEach(function(e){n[e.key]=e.value}),e.loaderObj.loads[t.name]={name:t.name,deps:t.dependencies.map(function(e){return e.key}),depMap:n,address:t.address,metadata:t.metadata,source:t.source,kind:t.isDeclarative?"declarative":"dynamic"}}t.name&&(e.modules[t.name]=t.module);var r=C.call(e.loads,t);-1!=r&&e.loads.splice(r,1);for(var a=0,o=t.linkSets.length;o>a;a++)r=C.call(t.linkSets[a].loads,t),-1!=r&&t.linkSets[a].loads.splice(r,1);t.linkSets.splice(0,t.linkSets.length)}function y(e,t,n){try{var a=t.execute()}catch(o){return void n(t,o)}return a&&a instanceof r?a:void n(t,new TypeError("Execution must define a Module instance"))}function b(e,t,n){var r=e._loader.importPromises;return r[t]=n.then(function(e){return r[t]=void 0,e},function(e){throw r[t]=void 0,e})}function w(e,t){var n=e.loader;if(e.loads.length)for(var r=e.loads.concat([]),a=0;a<r.length;a++){var o=r[a],i=y(e,o,t);if(!i)return;o.module={name:o.name,module:i},o.status="linked",v(n,o)}}function x(e,t){return t.module.module}function S(){}function E(){throw new TypeError("ES6 transpilation is only provided in the dev module loader build.")}var k=0;a.prototype={constructor:a,define:function(e,t,n){if(this._loader.importPromises[e])throw new TypeError("Module is already loading.");return b(this,e,new Promise(c({step:"translate",loader:this._loader,moduleName:e,moduleMetadata:n&&n.metadata||{},moduleSource:t,moduleAddress:n&&n.address})))},"delete":function(e){var t=this._loader;return delete t.importPromises[e],delete t.moduleRecords[e],t.modules[e]?delete t.modules[e]:!1},get:function(e){return this._loader.modules[e]?(S(this._loader.modules[e],[],this),this._loader.modules[e].module):void 0},has:function(e){return!!this._loader.modules[e]},"import":function(e,t,n){"object"==typeof t&&(t=t.name);var r=this;return Promise.resolve(r.normalize(e,t)).then(function(e){var t=r._loader;return t.modules[e]?(S(t.modules[e],[],t._loader),t.modules[e].module):t.importPromises[e]||b(r,e,i(t,e,{}).then(function(n){return delete t.importPromises[e],x(t,n)}))})},load:function(e){var t=this._loader;return t.modules[e]?Promise.resolve():t.importPromises[e]||b(this,e,new Promise(c({step:"locate",loader:t,moduleName:e,moduleMetadata:{},moduleSource:void 0,moduleAddress:void 0})).then(function(){delete t.importPromises[e]}))},module:function(e,t){var n=o();n.address=t&&t.address;var r=f(this._loader,n),a=Promise.resolve(e),i=this._loader,s=r.done.then(function(){return x(i,n)});return d(i,n,a),s},newModule:function(e){if("object"!=typeof e)throw new TypeError("Expected object");var t=new r,n=[];if(Object.getOwnPropertyNames&&null!=e)n=Object.getOwnPropertyNames(e);else for(var a in e)n.push(a);for(var o=0;o<n.length;o++)(function(n){A(t,n,{configurable:!1,enumerable:!0,get:function(){return e[n]},set:function(){throw new Error("Module exports cannot be changed externally.")}})})(n[o]);return Object.freeze&&Object.freeze(t),t},set:function(e,t){if(!(t instanceof r))throw new TypeError("Loader.set("+e+", module) must be a module");this._loader.modules[e]={module:t}},normalize:function(e,t,n){return e},locate:function(e){return e.name},fetch:function(e){},translate:function(e){return e.source},instantiate:function(e){}};var j=a.prototype.newModule}();var X;s.prototype=a.prototype,o.prototype=new s;var G;if("undefined"!=typeof XMLHttpRequest)G=function(e,t,n,r){function a(){n(i.responseText)}function o(){r(new Error("XHR error"+(i.status?" ("+i.status+(i.statusText?" "+i.statusText:"")+")":"")+" loading "+e))}var i=new XMLHttpRequest,s=!0,l=!1;if(!("withCredentials"in i)){var u=/^(\w+:)?\/\/([^\/]+)/.exec(e);u&&(s=u[2]===window.location.host,u[1]&&(s&=u[1]===window.location.protocol))}s||"undefined"==typeof XDomainRequest||(i=new XDomainRequest,i.onload=a,i.onerror=o,i.ontimeout=o,i.onprogress=function(){},i.timeout=0,l=!0),i.onreadystatechange=function(){4===i.readyState&&(0==i.status?i.responseText?a():(i.addEventListener("error",o),i.addEventListener("load",a)):200===i.status?a():o())},i.open("GET",e,!0),i.setRequestHeader&&(i.setRequestHeader("Accept","application/x-es-module, */*"),t&&("string"==typeof t&&i.setRequestHeader("Authorization",t),i.withCredentials=!0)),l?setTimeout(function(){i.send()},0):i.send(null)};else if("undefined"!="function"&&"undefined"!=typeof process){var V;G=function(e,t,n,r){if("file:///"!=e.substr(0,8))throw new Error('Unable to fetch "'+e+'". Only file URLs of the form file:/// allowed running in Node.');return V=V||__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),e=q?e.replace(/\//g,"\\").substr(8):e.substr(7),V.readFile(e,function(e,t){if(e)return r(e);var a=t+"";"\ufeff"===a[0]&&(a=a.substr(1)),n(a)})}}else{if("undefined"==typeof self||"undefined"==typeof self.fetch)throw new TypeError("No environment fetch API available.");G=function(e,t,n,r){var a={headers:{Accept:"application/x-es-module, */*"}};t&&("string"==typeof t&&(a.headers.Authorization=t),a.credentials="include"),fetch(e,a).then(function(e){if(e.ok)return e.text();throw new Error("Fetch error: "+e.status+" "+e.statusText)}).then(n,r)}}o.prototype.fetch=function(e){return new Promise(function(t,n){G(e.address,void 0,t,n)})},u.prototype=o.prototype,l.prototype=new u,l.prototype.constructor=l,l.prototype.instantiate=function(){};var Y,Z=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(B){Z=!1}var K=["main","format","defaultExtension","meta","map","basePath","depCache"],Q=/^[^\/]+:\/\//,W={},ee=new H(U);c(function(e){return function(){e.call(this),this.baseURL=U.substr(0,U.lastIndexOf("/")+1),this.map={},this.paths={},this.warnings=!1,this.defaultJSExtensions=!1,this.pluginFirst=!1,this.loaderErrorStack=!1,this.set("@empty",this.newModule({})),S.call(this,!1)}}),"undefined"=="function"||"undefined"==typeof process||process.browser||(l.prototype._nodeRequire=__webpack_require__(729));var te=["assert","buffer","child_process","cluster","console","constants","crypto","dgram","dns","domain","events","fs","http","https","module","net","os","path","process","punycode","querystring","readline","repl","stream","string_decoder","sys","timers","tls","tty","url","util","vm","zlib"];d("normalize",function(e){return function(e,t,n){var r=P.call(this,e,t);return n||!this.defaultJSExtensions||".js"==r.substr(r.length-3,3)||E(r)||(r+=".js"),r}});var ne="undefined"!=typeof XMLHttpRequest;d("locate",function(e){return function(t){return Promise.resolve(e.call(this,t)).then(function(e){return ne?e.replace(/#/g,"%23"):e})}}),d("fetch",function(){return function(e){return new Promise(function(t,n){G(e.address,e.metadata.authorization,t,n)})}}),d("import",function(e){return function(t,n,r){return n&&n.name&&y.call(this,"SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing "+t+" from "+n.name),e.call(this,t,n,r).then(function(e){return e.__useDefault?e["default"]:e})}}),d("translate",function(e){return function(t){return"detect"==t.metadata.format&&(t.metadata.format=void 0),e.call(this,t)}}),d("instantiate",function(e){return function(e){if("json"==e.metadata.format&&!this.builder){var t=e.metadata.entry=O();t.deps=[],t.execute=function(){try{return JSON.parse(e.source)}catch(t){throw new Error("Invalid JSON file "+e.name)}}}}}),l.prototype.env="development";var re;l.prototype.config=function(e){function t(e){for(var t in e)if(hasOwnProperty.call(e,t))return!0}var n=this;if("loaderErrorStack"in e&&(re=$__curScript,e.loaderErrorStack?$__curScript=void 0:$__curScript=re),"warnings"in e&&(n.warnings=e.warnings),e.transpilerRuntime===!1&&(n._loader.loadedTranspilerRuntime=!0),e.baseURL){if(t(n.packages)||t(n.meta)||t(n.depCache)||t(n.bundles)||t(n.packageConfigPaths))throw new TypeError("Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.");n.baseURL=e.baseURL,w.call(n)}if(e.defaultJSExtensions&&(n.defaultJSExtensions=e.defaultJSExtensions,y.call(n,"The defaultJSExtensions configuration option is deprecated, use packages configuration instead.")),e.pluginFirst&&(n.pluginFirst=e.pluginFirst),e.production&&S.call(n,!0),e.paths)for(var r in e.paths)n.paths[r]=e.paths[r];if(e.map){var a="";for(var r in e.map){var o=e.map[r];if("string"!=typeof o){a+=(a.length?", ":"")+'"'+r+'"';var i=n.defaultJSExtensions&&".js"!=r.substr(r.length-3,3),s=n.decanonicalize(r);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3));var l="";for(var u in n.packages)s.substr(0,u.length)==u&&(!s[u.length]||"/"==s[u.length])&&l.split("/").length<u.split("/").length&&(l=u);l&&n.packages[l].main&&(s=s.substr(0,s.length-n.packages[l].main.length-1));var u=n.packages[s]=n.packages[s]||{};u.map=o}else n.map[r]=o}a&&y.call(n,"The map configuration for "+a+' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "'+r+'": { map: {...} } } }).')}if(e.packageConfigPaths){for(var d=[],c=0;c<e.packageConfigPaths.length;c++){var f=e.packageConfigPaths[c],m=Math.max(f.lastIndexOf("*")+1,f.lastIndexOf("/")),i=n.defaultJSExtensions&&".js"!=f.substr(m-3,3),p=n.decanonicalize(f.substr(0,m));i&&".js"==p.substr(p.length-3,3)&&(p=p.substr(0,p.length-3)),d[c]=p+f.substr(m)}n.packageConfigPaths=d}if(e.bundles)for(var r in e.bundles){for(var h=[],c=0;c<e.bundles[r].length;c++){var i=n.defaultJSExtensions&&".js"!=e.bundles[r][c].substr(e.bundles[r][c].length-3,3),g=n.decanonicalize(e.bundles[r][c]);i&&".js"==g.substr(g.length-3,3)&&(g=g.substr(0,g.length-3)),h.push(g)}n.bundles[r]=h}if(e.packages)for(var r in e.packages){if(r.match(/^([^\/]+:)?\/\/$/))throw new TypeError('"'+r+'" is not a valid package name.');var s=P.call(n,r);"/"==s[s.length-1]&&(s=s.substr(0,s.length-1)),n.packages[s]=n.packages[s]||{};var u=e.packages[r];u.modules&&(y.call(n,"Package "+r+' is configured with "modules", which is deprecated as it has been renamed to "meta".'),u.meta=u.modules,delete u.modules),"object"==typeof u.main&&(u.map=u.map||{},u.map["./@main"]=u.main,u.main["default"]=u.main["default"]||"./",u.main="@main");for(var b in u)-1==C.call(K,b)&&y.call(n,'"'+b+'" is not a valid package configuration option in package '+r);v(n.packages[s],u)}for(var x in e){var o=e[x];if("baseURL"!=x&&"map"!=x&&"packages"!=x&&"bundles"!=x&&"paths"!=x&&"warnings"!=x&&"packageConfigPaths"!=x&&"loaderErrorStack"!=x)if("object"!=typeof o||o instanceof Array)n[x]=o;else{n[x]=n[x]||{};for(var r in o)if("meta"==x&&"*"==r[0])n[x][r]=o[r];else if("meta"==x){var k=P.call(n,r);n.defaultJSExtensions&&".js"!=k.substr(k.length-3,3)&&!E(k)&&(k+=".js"),n[x][k]=o[r]}else if("depCache"==x){var i=n.defaultJSExtensions&&".js"!=r.substr(r.length-3,3),s=n.decanonicalize(r);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3)),n[x][s]=o[r]}else n[x][r]=o[r]}}},function(){function e(e,t){var n,r,a=0;for(var o in e.packages)t.substr(0,o.length)!==o||t.length!==o.length&&"/"!==t[o.length]||(r=o.split("/").length,r>a&&(n=o,a=r));return n}function t(e,t,n,r,a){if(!r||"/"==r[r.length-1]||a||t.defaultExtension===!1)return r;if(r.match(oe))return r;var o=!1;if(t.meta&&p(t.meta,r,function(e,t,n){return 0==n||e.lastIndexOf("*")!=e.length-1?o=!0:void 0}),!o&&e.meta&&p(e.meta,n+"/"+r,function(e,t,n){return 0==n||e.lastIndexOf("*")!=e.length-1?o=!0:void 0}),o)return r;var i="."+(t.defaultExtension||"js");return r.substr(r.length-i.length)!=i?r+i:r}function n(e,n,r,o,i){if(!o){if(!n.main)return r+(e.defaultJSExtensions?".js":"");o="./"==n.main.substr(0,2)?n.main.substr(2):n.main}if(n.map){var s="./"+o,l=x(n.map,s);if(l||(s="./"+t(e,n,r,o,i),s!="./"+o&&(l=x(n.map,s))),l)return a(e,n,r,l,s,i)}return r+"/"+t(e,n,r,o,i)}function r(e,t,n){if("."==e)throw new Error("Package "+n+' has a map entry for "." which is not permitted.');if(t.substr(0,e.length)==e&&"/"!=e[e.length-1]&&"/"==t[e.length])throw new Error("Package "+n+' has a recursive map for "'+e+'" which is not permitted.')}function a(e,n,a,o,i,s){var l=n.map[o];if("object"==typeof l)throw new Error("Synchronous conditional normalization not supported sync normalizing "+o+" in "+a);if(r(o,l,a),"string"!=typeof l&&(l=o=i),r(o,l,a),"."==l)l=a;else if("./"==l.substr(0,2))return a+"/"+t(e,n,a,l.substr(2)+i.substr(o.length),s);return e.normalizeSync(l+i.substr(o.length),a+"/")}function o(e,n,r,a,o){if(!a){if(!n.main)return Promise.resolve(r+(e.defaultJSExtensions?".js":""));a="./"==n.main.substr(0,2)?n.main.substr(2):n.main}var i,l;return n.map&&(i="./"+a,l=x(n.map,i),l||(i="./"+t(e,n,r,a,o),i!="./"+a&&(l=x(n.map,i)))),(l?s(e,n,r,l,i,o):Promise.resolve()).then(function(i){return i?Promise.resolve(i):Promise.resolve(r+"/"+t(e,n,r,a,o))})}function i(e,n,r,a,o,i,s){if("."==o)o=r;else if("./"==o.substr(0,2))return Promise.resolve(r+"/"+t(e,n,r,o.substr(2)+i.substr(a.length),s)).then(function(t){return L.call(e,t,r+"/")});return e.normalize(o+i.substr(a.length),r+"/")}function s(e,t,n,a,o,s){var l=t.map[a];return"string"==typeof l?(r(a,l,n),i(e,t,n,a,l,o,s)):e.builder?Promise.resolve(n+"/#:"+o):e["import"](t.map["@env"]||"@system-env",n).then(function(e){for(var t in l){var n="~"==t[0],r=b(n?t.substr(1):t,e);if(!n&&r||n&&!r)return l[t]}}).then(function(l){if(l){if("string"!=typeof l)throw new Error("Unable to map a package conditional to a package conditional.");return r(a,l,n),i(e,t,n,a,l,o,s)}})}function u(e){var t=e.lastIndexOf("*"),n=Math.max(t+1,e.lastIndexOf("/"));return{length:n,regEx:new RegExp("^("+e.substr(0,n).replace(/[.+?^${}()|[\]\\]/g,"\\$&").replace(/\*/g,"[^\\/]+")+")(\\/|$)"),wildcard:-1!=t}}function f(e,t){for(var n,r,a=!1,o=0;o<e.packageConfigPaths.length;o++){var i=e.packageConfigPaths[o],s=h[i]||(h[i]=u(i));if(!(t.length<s.length)){var l=t.match(s.regEx);!l||n&&(a&&s.wildcard||!(n.length<l[1].length))||(n=l[1],a=!s.wildcard,r=n+i.substr(s.length))}}return n?{packageName:n,configPath:r}:void 0}function m(e,t,n){var r=e.pluginLoader||e;return(r.meta[n]=r.meta[n]||{}).format="json",r.meta[n].loader=null,r.load(n).then(function(){var a=r.get(n)["default"];a.systemjs&&(a=a.systemjs),a.modules&&(a.meta=a.modules,y.call(e,"Package config file "+n+' is configured with "modules", which is deprecated as it has been renamed to "meta".'));for(var o in a)-1==C.call(K,o)&&delete a[o];var i=e.packages[t]=e.packages[t]||{};if(v(i,a,!0),a.depCache){for(var s in a.depCache){var l;l="./"==s.substr(0,2)?t+"/"+s.substr(2):P.call(e,s),e.depCache[l]=(e.depCache[l]||[]).concat(a.depCache[s])}delete a.depCache}return"object"==typeof i.main&&(i.map=i.map||{},i.map["./@main"]=i.main,i.main["default"]=i.main["default"]||"./",i.main="@main"),i})}function p(e,t,n){var r;for(var a in e){var o="./"==a.substr(0,2)?"./":"";if(o&&(a=a.substr(2)),r=a.indexOf("*"),-1!==r&&a.substr(0,r)==t.substr(0,r)&&a.substr(r+1)==t.substr(t.length-a.length+r+1)&&n(a,e[o+a],a.split("/").length))return}var i=e[t]&&e.hasOwnProperty&&e.hasOwnProperty(t)?e[t]:e["./"+t];i&&n(i,i,0)}c(function(e){return function(){e.call(this),this.packages={},this.packageConfigPaths=[]}}),l.prototype.normalizeSync=l.prototype.decanonicalize=l.prototype.normalize,d("decanonicalize",function(t){return function(n,r){if(this.builder)return t.call(this,n,r,!0);var a=t.call(this,n,r);if(!this.defaultJSExtensions)return a;var o=e(this,a),i=this.packages[o],s=i&&i.defaultExtension;return void 0==s&&i&&i.meta&&p(i.meta,a.substr(o),function(e,t,n){return 0==n||e.lastIndexOf("*")!=e.length-1?(s=!1,!0):void 0}),(s===!1||s&&".js"!=s)&&".js"!=n.substr(n.length-3,3)&&".js"==a.substr(a.length-3,3)&&(a=a.substr(0,a.length-3)),a}}),d("normalizeSync",function(t){return function(r,o,i){y.call(this,"SystemJS.normalizeSync has been deprecated for SystemJS.decanonicalize.");var s=this;if(i=i===!0,o)var l=e(s,o)||s.defaultJSExtensions&&".js"==o.substr(o.length-3,3)&&e(s,o.substr(0,o.length-3));var u=l&&s.packages[l];if(u&&"."!=r[0]){var d=u.map,c=d&&x(d,r);if(c&&"string"==typeof d[c])return a(s,u,l,c,r,i)}var m=s.defaultJSExtensions&&".js"!=r.substr(r.length-3,3),p=t.call(s,r,o);m&&".js"!=p.substr(p.length-3,3)&&(m=!1),m&&(p=p.substr(0,p.length-3));var h=f(s,p),g=h&&h.packageName||e(s,p);if(!g)return p+(m?".js":"");var v=p.substr(g.length+1);return n(s,s.packages[g]||{},g,v,i)}}),d("normalize",function(t){return function(n,r,a){var i=this;return a=a===!0,Promise.resolve().then(function(){if(r)var t=e(i,r)||i.defaultJSExtensions&&".js"==r.substr(r.length-3,3)&&e(i,r.substr(0,r.length-3));var o=t&&i.packages[t];if(o&&"./"!=n.substr(0,2)){var l=o.map,u=l&&x(l,n);if(u)return s(i,o,t,u,n,a)}return Promise.resolve()}).then(function(s){if(s)return s;var l=i.defaultJSExtensions&&".js"!=n.substr(n.length-3,3),u=t.call(i,n,r);l&&".js"!=u.substr(u.length-3,3)&&(l=!1),l&&(u=u.substr(0,u.length-3));var d=f(i,u),c=d&&d.packageName||e(i,u);if(!c)return Promise.resolve(u+(l?".js":""));var p=i.packages[c],h=p&&(p.configured||!d);return(h?Promise.resolve(p):m(i,c,d.configPath)).then(function(e){var t=u.substr(c.length+1);return o(i,e,c,t,a)})})}});var h={};d("locate",function(t){return function(n){var r=this;return Promise.resolve(t.call(this,n)).then(function(t){var a=e(r,n.name);if(a){var o=r.packages[a],i=n.name.substr(a.length+1);o.format&&(n.metadata.format=n.metadata.format||o.format);var s={};if(o.meta){var l=0;p(o.meta,i,function(e,t,n){n>l&&(l=n),v(s,t,n&&l>n)}),v(n.metadata,s)}}return t})}})}(),function(){function t(){if(i&&"interactive"===i.script.readyState)return i.load;for(var e=0;e<u.length;e++)if("interactive"==u[e].script.readyState)return i=u[e],i.load}function n(e,t){return new Promise(function(e,n){t.metadata.integrity&&n(new Error("Subresource integrity checking is not supported in web workers.")),s=t;try{importScripts(t.address)}catch(r){s=null,n(r)}s=null,t.metadata.entry||n(new Error(t.address+" did not call System.register or AMD define")),e("")})}if("undefined"!=typeof document)var r=document.getElementsByTagName("head")[0];var a,o,i,s=null,l=r&&function(){var e=document.createElement("script"),t="undefined"!=typeof opera&&"[object Opera]"===opera.toString();return e.attachEvent&&!(e.attachEvent.toString&&e.attachEvent.toString().indexOf("[native code")<0)&&!t}(),u=[],c=0,f=[];d("pushRegister_",function(e){return function(n){return e.call(this,n)?!1:(s?this.reduceRegister_(s,n):l?this.reduceRegister_(t(),n):c?f.push(n):this.reduceRegister_(null,n),!0)}}),d("fetch",function(t){return function(s){var d=this;return"json"!=s.metadata.format&&s.metadata.scriptLoad&&(J||D)?D?n(d,s):new Promise(function(t,n){function m(e){if(!g.readyState||"loaded"==g.readyState||"complete"==g.readyState){if(c--,s.metadata.entry||f.length){if(!l){for(var r=0;r<f.length;r++)d.reduceRegister_(s,f[r]);f=[]}}else d.reduceRegister_(s);h(),s.metadata.entry||s.metadata.bundle||n(new Error(s.name+" did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.")),t("")}}function p(e){h(),n(new Error("Unable to load script "+s.address))}function h(){if(e.System=a,e.require=o,g.detachEvent){g.detachEvent("onreadystatechange",m);for(var t=0;t<u.length;t++)u[t].script==g&&(i&&i.script==g&&(i=null),u.splice(t,1))}else g.removeEventListener("load",m,!1),g.removeEventListener("error",p,!1);r.removeChild(g)}var g=document.createElement("script");g.async=!0,s.metadata.crossOrigin&&(g.crossOrigin=s.metadata.crossOrigin),s.metadata.integrity&&g.setAttribute("integrity",s.metadata.integrity),l?(g.attachEvent("onreadystatechange",m),u.push({script:g,load:s})):(g.addEventListener("load",m,!1),g.addEventListener("error",p,!1)),c++,a=e.System,o=e.require,
	g.src=s.address,r.appendChild(g)}):t.call(this,s)}})}();var ae=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;!function(){function t(e,n,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==C.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var a=0,o=e.normalizedDeps.length;o>a;a++){var i=e.normalizedDeps[a],s=n.defined[i];if(s&&!s.evaluated){var l=e.groupIndex+(s.declarative!=e.declarative);if(null===s.groupIndex||s.groupIndex<l){if(null!==s.groupIndex&&(r[s.groupIndex].splice(C.call(r[s.groupIndex],s),1),0==r[s.groupIndex].length))throw new Error("Mixed dependency cycle detected");s.groupIndex=l}t(s,n,r)}}}}function n(e,n){var r=n.defined[e];if(!r.module){r.groupIndex=0;var a=[];t(r,n,a);for(var o=!!r.declarative==a.length%2,s=a.length-1;s>=0;s--){for(var l=a[s],d=0;d<l.length;d++){var c=l[d];o?i(c,n):u(c,n)}o=!o}}}function a(){}function o(e,t){return t[e]||(t[e]={name:e,dependencies:[],exports:new a,importers:[]})}function i(t,n){if(!t.module){var r=n._loader.moduleRecords,a=t.module=o(t.name,r),s=t.module.exports,l=t.declare.call(e,function(e,t){if(a.locked=!0,"object"==typeof e)for(var n in e)s[n]=e[n];else s[e]=t;for(var r=0,o=a.importers.length;o>r;r++){var i=a.importers[r];if(!i.locked){var l=C.call(i.dependencies,a);i.setters[l](s)}}return a.locked=!1,t},{id:t.name});if(a.setters=l.setters,a.execute=l.execute,!a.setters||!a.execute)throw new TypeError("Invalid System.register form for "+t.name);for(var u=0,d=t.normalizedDeps.length;d>u;u++){var c,f=t.normalizedDeps[u],m=n.defined[f],p=r[f];p?c=p.exports:m&&!m.declarative?c=m.esModule:m?(i(m,n),p=m.module,c=p.exports):c=n.get(f),p&&p.importers?(p.importers.push(a),a.dependencies.push(p)):a.dependencies.push(null);for(var h=t.originalIndices[u],g=0,v=h.length;v>g;++g){var y=h[g];a.setters[y]&&a.setters[y](c)}}}}function s(e,t){var n,r=t.defined[e];if(r)r.declarative?p(e,[],t):r.evaluated||u(r,t),n=r.module.exports;else if(n=t.get(e),!n)throw new Error("Unable to load dependency "+e+".");return(!r||r.declarative)&&n&&n.__useDefault?n["default"]:n}function u(t,n){if(!t.module){var a={},o=t.module={exports:a,id:t.name};if(!t.executingRequire)for(var i=0,l=t.normalizedDeps.length;l>i;i++){var d=t.normalizedDeps[i],c=n.defined[d];c&&u(c,n)}t.evaluated=!0;var f=t.execute.call(e,function(e){for(var r=0,a=t.deps.length;a>r;r++)if(t.deps[r]==e)return s(t.normalizedDeps[r],n);var o=n.normalizeSync(e,t.name);if(-1!=C.call(t.normalizedDeps,o))return s(o,n);throw new Error("Module "+e+" not declared as a dependency of "+t.name)},a,o);f&&(o.exports=f),a=o.exports,a&&(a.__esModule||a instanceof r)?t.esModule=a:t.esmExports&&a!==e?t.esModule=m(a):t.esModule={"default":a}}}function p(t,n,r){var a=r.defined[t];if(a&&!a.evaluated&&a.declarative){n.push(t);for(var o=0,i=a.normalizedDeps.length;i>o;o++){var s=a.normalizedDeps[o];-1==C.call(n,s)&&(r.defined[s]?p(s,n,r):r.get(s))}a.evaluated||(a.evaluated=!0,a.module.execute.call(e))}}l.prototype.register=function(e,t,n){if("string"!=typeof e&&(n=t,t=e,e=null),"boolean"==typeof n)return this.registerDynamic.apply(this,arguments);var r=O();r.name=e&&(this.decanonicalize||this.normalize).call(this,e),r.declarative=!0,r.deps=t,r.declare=n,this.pushRegister_({amd:!1,entry:r})},l.prototype.registerDynamic=function(e,t,n,r){"string"!=typeof e&&(r=n,n=t,t=e,e=null);var a=O();a.name=e&&(this.decanonicalize||this.normalize).call(this,e),a.deps=t,a.execute=r,a.executingRequire=n,this.pushRegister_({amd:!1,entry:a})},d("reduceRegister_",function(){return function(e,t){if(t){var n=t.entry,r=e&&e.metadata;if(n.name&&(n.name in this.defined||(this.defined[n.name]=n),r&&(r.bundle=!0)),!n.name||e&&n.name==e.name){if(!r)throw new TypeError("Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.");if(r.entry)throw"register"==r.format?new Error("Multiple anonymous System.register calls in module "+e.name+". If loading a bundle, ensure all the System.register calls are named."):new Error("Module "+e.name+" interpreted as "+r.format+" module format, but called System.register.");r.format||(r.format="register"),r.entry=n}}}}),c(function(e){return function(){e.call(this),this.defined={},this._loader.moduleRecords={}}}),A(a,"toString",{value:function(){return"Module"}}),d("delete",function(e){return function(t){return delete this._loader.moduleRecords[t],delete this.defined[t],e.call(this,t)}}),d("fetch",function(e){return function(t){return this.defined[t.name]?(t.metadata.format="defined",""):(t.metadata.deps=t.metadata.deps||[],e.call(this,t))}}),d("translate",function(e){return function(t){return t.metadata.deps=t.metadata.deps||[],Promise.resolve(e.call(this,t)).then(function(e){return("register"==t.metadata.format||!t.metadata.format&&_(t.source))&&(t.metadata.format="register"),e})}}),d("instantiate",function(e){return function(t){"detect"==t.metadata.format&&(t.metadata.format=void 0),e.call(this,t);var r,a=this;if(a.defined[t.name])r=a.defined[t.name],r.declarative||(r.deps=r.deps.concat(t.metadata.deps));else if(t.metadata.entry)r=t.metadata.entry,r.deps=r.deps.concat(t.metadata.deps);else if(!(a.builder&&t.metadata.bundle||"register"!=t.metadata.format&&"esm"!=t.metadata.format&&"es6"!=t.metadata.format)){if("undefined"!=typeof __exec&&__exec.call(a,t),!t.metadata.entry&&!t.metadata.bundle)throw new Error(t.name+" detected as "+t.metadata.format+" but didn't execute.");r=t.metadata.entry,r&&t.metadata.deps&&(r.deps=r.deps.concat(t.metadata.deps))}r||(r=O(),r.deps=t.metadata.deps,r.execute=function(){}),a.defined[t.name]=r;var o=f(r.deps);r.deps=o.names,r.originalIndices=o.indices,r.name=t.name,r.esmExports=t.metadata.esmExports!==!1;for(var i=[],s=0,l=r.deps.length;l>s;s++)i.push(Promise.resolve(a.normalize(r.deps[s],t.name)));return Promise.all(i).then(function(e){return r.normalizedDeps=e,{deps:r.deps,execute:function(){return n(t.name,a),p(t.name,[],a),a.defined[t.name]=void 0,a.newModule(r.declarative?r.module.exports:r.esModule)}}})}})}(),d("reduceRegister_",function(e){return function(t,n){if(n||!t.metadata.exports)return e.call(this,t,n);t.metadata.format="global";var r=t.metadata.entry=O();r.deps=t.metadata.deps;var a=R(t.metadata.exports);r.execute=function(){return a}}}),c(function(t){return function(){function n(t){if(Object.keys)Object.keys(e).forEach(t);else for(var n in e)i.call(e,n)&&t(n)}function r(t){n(function(n){if(-1==C.call(s,n)){try{var r=e[n]}catch(a){s.push(n)}t(n,r)}})}var a=this;t.call(a);var o,i=Object.prototype.hasOwnProperty,s=["_g","sessionStorage","localStorage","clipboardData","frames","frameElement","external","mozAnimationStartTime","webkitStorageInfo","webkitIndexedDB","mozInnerScreenY","mozInnerScreenX"];a.set("@@global-helpers",a.newModule({prepareGlobal:function(t,n,a){var i=e.define;e.define=void 0;var s;if(a){s={};for(var l in a)s[l]=e[l],e[l]=a[l]}return n||(o={},r(function(e,t){o[e]=t})),function(){var t;if(n)t=R(n);else{t={};var a,l;r(function(e,n){o[e]!==n&&"undefined"!=typeof n&&(t[e]=n,"undefined"!=typeof a?l||a===n||(l=!0):a=n)}),t=l?t:a}if(s)for(var u in s)e[u]=s[u];return e.define=i,t}}}))}}),c(function(e){return function(){function t(e){return"file:///"==e.substr(0,8)?e.substr(7+!!q):r&&e.substr(0,r.length)==r?e.substr(r.length):e}var n=this;if(e.call(n),"undefined"!=typeof window&&"undefined"!=typeof document&&window.location)var r=location.protocol+"//"+location.hostname+(location.port?":"+location.port:"");n.set("@@cjs-helpers",n.newModule({requireResolve:function(e,r){return t(n.normalizeSync(e,r))},getPathVars:function(e){var n,r=e.lastIndexOf("!");n=-1!=r?e.substr(0,r):e;var a=n.split("/");return a.pop(),a=a.join("/"),{filename:t(n),dirname:t(a)}}}))}}),d("fetch",function(t){return function(n){return n.metadata.scriptLoad&&J&&(e.define=this.amdDefine),t.call(this,n)}}),c(function(t){return function(){function n(e,t){e=e.replace(i,"");var n=e.match(u),r=(n[1].split(",")[t]||"require").replace(c,""),a=f[r]||(f[r]=new RegExp(s+r+l,"g"));a.lastIndex=0;for(var o,d=[];o=a.exec(e);)d.push(o[2]||o[3]);return d}function r(e,t,n,a){if("object"==typeof e&&!(e instanceof Array))return r.apply(null,Array.prototype.splice.call(arguments,1,arguments.length-1));if("string"==typeof e&&"function"==typeof t&&(e=[e]),!(e instanceof Array)){if("string"==typeof e){var i=o.defaultJSExtensions&&".js"!=e.substr(e.length-3,3),s=o.decanonicalize(e,a);i&&".js"==s.substr(s.length-3,3)&&(s=s.substr(0,s.length-3));var l=o.get(s);if(!l)throw new Error('Module not already loaded loading "'+e+'" as '+s+(a?' from "'+a+'".':"."));return l.__useDefault?l["default"]:l}throw new TypeError("Invalid require")}for(var u=[],d=0;d<e.length;d++)u.push(o["import"](e[d],a));Promise.all(u).then(function(e){t&&t.apply(null,e)},n)}function a(t,a,i){function s(t,n,s){function c(e,n,a){return"string"==typeof e&&"function"!=typeof n?t(e):r.call(o,e,n,a,s.id)}for(var f=[],m=0;m<a.length;m++)f.push(t(a[m]));s.uri=s.id,s.config=function(){},-1!=d&&f.splice(d,0,s),-1!=u&&f.splice(u,0,n),-1!=l&&(c.toUrl=function(e){var t=o.defaultJSExtensions&&".js"!=e.substr(e.length-3,3),n=o.decanonicalize(e,s.id);return t&&".js"==n.substr(n.length-3,3)&&(n=n.substr(0,n.length-3)),n},f.splice(l,0,c));var p=e.require;e.require=r;var h=i.apply(-1==u?e:n,f);return e.require=p,"undefined"==typeof h&&s&&(h=s.exports),"undefined"!=typeof h?h:void 0}"string"!=typeof t&&(i=a,a=t,t=null),a instanceof Array||(i=a,a=["require","exports","module"].splice(0,i.length)),"function"!=typeof i&&(i=function(e){return function(){return e}}(i)),void 0===a[a.length-1]&&a.pop();var l,u,d;-1!=(l=C.call(a,"require"))&&(a.splice(l,1),t||(a=a.concat(n(i.toString(),l)))),-1!=(u=C.call(a,"exports"))&&a.splice(u,1),-1!=(d=C.call(a,"module"))&&a.splice(d,1);var c=O();c.name=t&&(o.decanonicalize||o.normalize).call(o,t),c.deps=a,c.execute=s,o.pushRegister_({amd:!0,entry:c})}var o=this;t.call(this);var i=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/gm,s="(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])",l="\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)",u=/\(([^\)]*)\)/,c=/^\s+|\s+$/g,f={};a.amd={},d("reduceRegister_",function(e){return function(t,n){if(!n||!n.amd)return e.call(this,t,n);var r=t&&t.metadata,a=n.entry;if(r)if(r.format&&"detect"!=r.format){if(!a.name&&"amd"!=r.format)throw new Error("AMD define called while executing "+r.format+" module "+t.name)}else r.format="amd";if(a.name)r&&(r.entry||r.bundle?r.entry&&r.entry.name&&(r.entry=void 0):r.entry=a,r.bundle=!0),a.name in this.defined||(this.defined[a.name]=a);else{if(!r)throw new TypeError("Unexpected anonymous AMD define.");if(r.entry&&!r.entry.name)throw new Error("Multiple anonymous defines in module "+t.name);r.entry=a}}}),o.amdDefine=a,o.amdRequire=r}}),function(){function e(e,t){if(t){var n;if(e.pluginFirst){if(-1!=(n=t.lastIndexOf("!")))return t.substr(n+1)}else if(-1!=(n=t.indexOf("!")))return t.substr(0,n);return t}}function t(e,t){var n,r,a=t.lastIndexOf("!");return-1!=a?(e.pluginFirst?(n=t.substr(a+1),r=t.substr(0,a)):(n=t.substr(0,a),r=t.substr(a+1)||n.substr(n.lastIndexOf(".")+1)),{argument:n,plugin:r}):void 0}function n(e,t,n,r){return r&&".js"==t.substr(t.length-3,3)&&(t=t.substr(0,t.length-3)),e.pluginFirst?n+"!"+t:t+"!"+n}function r(e,t){return e.defaultJSExtensions&&".js"!=t.substr(t.length-3,3)}function a(a){return function(o,i,s){var l=this;i=e(this,i);var u=t(l,o);if(!u)return a.call(this,o,i,s);var d=l.normalizeSync(u.argument,i,!0),c=l.normalizeSync(u.plugin,i,!0);return n(l,d,c,r(l,u.argument))}}d("decanonicalize",a),d("normalizeSync",a),d("normalize",function(a){return function(o,i,s){var l=this;i=e(this,i);var u=t(l,o);return u?Promise.all([l.normalize(u.argument,i,!0),l.normalize(u.plugin,i)]).then(function(e){return n(l,e[0],e[1],r(l,u.argument))}):a.call(l,o,i,s)}}),d("locate",function(e){return function(t){var n,r=this,a=t.name;return r.pluginFirst?-1!=(n=a.indexOf("!"))&&(t.metadata.loader=a.substr(0,n),t.name=a.substr(n+1)):-1!=(n=a.lastIndexOf("!"))&&(t.metadata.loader=a.substr(n+1),t.name=a.substr(0,n)),e.call(r,t).then(function(e){return-1==n&&t.metadata.loader?r.normalize(t.metadata.loader,t.name).then(function(n){return t.metadata.loader=n,e}):e}).then(function(e){var n=t.metadata.loader;if(!n)return e;if(t.name==n)throw new Error("Plugin "+n+" cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.");if(r.defined&&r.defined[a])return e;var o=r.pluginLoader||r;return o["import"](n).then(function(n){return t.metadata.loaderModule=n,t.address=e,n.locate?n.locate.call(r,t):e})})}}),d("fetch",function(e){return function(t){var n=this;return t.metadata.loaderModule&&t.metadata.loaderModule.fetch&&"defined"!=t.metadata.format?(t.metadata.scriptLoad=!1,t.metadata.loaderModule.fetch.call(n,t,function(t){return e.call(n,t)})):e.call(n,t)}}),d("translate",function(e){return function(t){var n=this;return t.metadata.loaderModule&&t.metadata.loaderModule.translate&&"defined"!=t.metadata.format?Promise.resolve(t.metadata.loaderModule.translate.call(n,t)).then(function(r){var a=t.metadata.sourceMap;if(a){if("object"!=typeof a)throw new Error("load.metadata.sourceMap must be set to an object.");var o=t.name.split("!")[0];a.file=o+"!transpiled",(!a.sources||a.sources.length<=1)&&(a.sources=[o])}return"string"==typeof r?t.source=r:y.call(this,"Plugin "+t.metadata.loader+" should return the source in translate, instead of setting load.source directly. This support will be deprecated."),e.call(n,t)}):e.call(n,t)}}),d("instantiate",function(e){return function(t){var n=this,r=!1;return t.metadata.loaderModule&&t.metadata.loaderModule.instantiate&&!n.builder&&"defined"!=t.metadata.format?Promise.resolve(t.metadata.loaderModule.instantiate.call(n,t,function(t){if(r)throw new Error("Instantiate must only be called once.");return r=!0,e.call(n,t)})).then(function(a){return r?a:(t.metadata.entry=O(),t.metadata.entry.execute=function(){return a},t.metadata.entry.deps=t.metadata.deps,t.metadata.format="defined",e.call(n,t))}):e.call(n,t)}})}();var oe=/#\{[^\}]+\}/;d("normalize",function(e){return function(t,n,r){var a=this;return T.call(a,t,n).then(function(t){return e.call(a,t,n,r)}).then(function(e){return L.call(a,e,n)})}}),function(){d("fetch",function(e){return function(t){var n=t.metadata.alias,r=t.metadata.deps||[];if(n){t.metadata.format="defined";var a=O();return this.defined[t.name]=a,a.declarative=!0,a.deps=r.concat([n]),a.declare=function(e){return{setters:[function(t){for(var n in t)e(n,t[n]);t.__useDefault&&(a.module.exports.__useDefault=!0)}],execute:function(){}}},""}return e.call(this,t)}})}(),function(){function e(e,t,n){for(var r,a=t.split(".");a.length>1;)r=a.shift(),e=e[r]=e[r]||{};r=a.shift(),r in e||(e[r]=n)}c(function(e){return function(){this.meta={},e.call(this)}}),d("locate",function(e){return function(t){var n,r=this.meta,a=t.name,o=0;for(var i in r)if(n=i.indexOf("*"),-1!==n&&i.substr(0,n)===a.substr(0,n)&&i.substr(n+1)===a.substr(a.length-i.length+n+1)){var s=i.split("/").length;s>o&&(o=s),v(t.metadata,r[i],o!=s)}return r[a]&&v(t.metadata,r[a]),e.call(this,t)}});var t=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/,n=/\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g;d("translate",function(r){return function(a){var o=a.source.match(t);if(o)for(var i=o[0].match(n),s=0;s<i.length;s++){var l=i[s],u=l.length,d=l.substr(0,1);if(";"==l.substr(u-1,1)&&u--,'"'==d||"'"==d){var c=l.substr(1,l.length-3),f=c.substr(0,c.indexOf(" "));if(f){var m=c.substr(f.length+1,c.length-f.length-1);"[]"==f.substr(f.length-2,2)?(f=f.substr(0,f.length-2),a.metadata[f]=a.metadata[f]||[],a.metadata[f].push(m)):a.metadata[f]instanceof Array?(y.call(this,"Module "+a.name+' contains deprecated "deps '+m+'" meta syntax.\nThis should be updated to "deps[] '+m+'" for pushing to array meta.'),a.metadata[f].push(m)):e(a.metadata,f,m)}else a.metadata[c]=!0}}return r.call(this,a)}})}(),function(){c(function(e){return function(){e.call(this),this.bundles={},this._loader.loadedBundles={}}}),d("locate",function(e){return function(t){var n=this,r=!1;if(!(t.name in n.defined))for(var a in n.bundles){for(var o=0;o<n.bundles[a].length;o++){var i=n.bundles[a][o];if(i==t.name){r=!0;break}if(-1!=i.indexOf("*")){var s=i.split("*");if(2!=s.length){n.bundles[a].splice(o--,1);continue}if(t.name.substring(0,s[0].length)==s[0]&&t.name.substr(t.name.length-s[1].length,s[1].length)==s[1]&&-1==t.name.substr(s[0].length,t.name.length-s[1].length-s[0].length).indexOf("/")){r=!0;break}}}if(r)return n["import"](a).then(function(){return e.call(n,t)})}return e.call(n,t)}})}(),function(){c(function(e){return function(){e.call(this),this.depCache={}}}),d("locate",function(e){return function(t){var n=this,r=n.depCache[t.name];if(r)for(var a=0;a<r.length;a++)n["import"](r[a],t.name);return e.call(n,t)}})}(),c(function(t){return function(){t.apply(this,arguments),e.define=this.amdDefine}}),d("fetch",function(e){return function(t){return t.metadata.scriptLoad=!0,e.call(this,t)}}),X=new l,e.SystemJS=X,X.version="0.19.27 CSP","object"==typeof exports&&(module.exports=a),e.Reflect=e.Reflect||{},e.Reflect.Loader=e.Reflect.Loader||a,e.Reflect.global=e.Reflect.global||e,e.LoaderPolyfill=a,X||(X=new o,X.constructor=o),"object"==typeof exports&&(module.exports=X),e.System=X}("undefined"!=typeof self?self:global)}var t="undefined"==typeof Promise;if("undefined"!=typeof document){var n=document.getElementsByTagName("script");if($__curScript=n[n.length-1],t){var r=$__curScript.src,a=r.substr(0,r.lastIndexOf("/")+1);window.systemJSBootstrap=e,document.write('<script type="text/javascript" src="'+a+'system-polyfills.js"></script>')}else e()}else if("undefined"!=typeof importScripts){var a="";try{throw new Error("_")}catch(o){o.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/,function(e,t){$__curScript={src:t},a=t.replace(/\/[^\/]*$/,"/")})}t&&importScripts(a+"system-polyfills.js"),e()}else $__curScript= true?{src:__filename}:null,e()}();
	//# sourceMappingURL=system-csp-production.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698), "/index.js"))

/***/ },
/* 731 */,
/* 732 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process, __filename) {/*
	 * SystemJS v0.19.27
	 */
	(function() {
	function bootstrap() {// from https://gist.github.com/Yaffle/1088850
	(function(global) {
	function URLPolyfill(url, baseURL) {
	  if (typeof url != 'string')
	    throw new TypeError('URL must be a string');
	  var m = String(url).replace(/^\s+|\s+$/g, "").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
	  if (!m)
	    throw new RangeError('Invalid URL format');
	  var protocol = m[1] || "";
	  var username = m[2] || "";
	  var password = m[3] || "";
	  var host = m[4] || "";
	  var hostname = m[5] || "";
	  var port = m[6] || "";
	  var pathname = m[7] || "";
	  var search = m[8] || "";
	  var hash = m[9] || "";
	  if (baseURL !== undefined) {
	    var base = baseURL instanceof URLPolyfill ? baseURL : new URLPolyfill(baseURL);
	    var flag = !protocol && !host && !username;
	    if (flag && !pathname && !search)
	      search = base.search;
	    if (flag && pathname[0] !== "/")
	      pathname = (pathname ? (((base.host || base.username) && !base.pathname ? "/" : "") + base.pathname.slice(0, base.pathname.lastIndexOf("/") + 1) + pathname) : base.pathname);
	    // dot segments removal
	    var output = [];
	    pathname.replace(/^(\.\.?(\/|$))+/, "")
	      .replace(/\/(\.(\/|$))+/g, "/")
	      .replace(/\/\.\.$/, "/../")
	      .replace(/\/?[^\/]*/g, function (p) {
	        if (p === "/..")
	          output.pop();
	        else
	          output.push(p);
	      });
	    pathname = output.join("").replace(/^\//, pathname[0] === "/" ? "/" : "");
	    if (flag) {
	      port = base.port;
	      hostname = base.hostname;
	      host = base.host;
	      password = base.password;
	      username = base.username;
	    }
	    if (!protocol)
	      protocol = base.protocol;
	  }

	  // convert windows file URLs to use /
	  if (protocol == 'file:')
	    pathname = pathname.replace(/\\/g, '/');

	  this.origin = host ? protocol + (protocol !== "" || host !== "" ? "//" : "") + host : "";
	  this.href = protocol + (protocol && host || protocol == "file:" ? "//" : "") + (username !== "" ? username + (password !== "" ? ":" + password : "") + "@" : "") + host + pathname + search + hash;
	  this.protocol = protocol;
	  this.username = username;
	  this.password = password;
	  this.host = host;
	  this.hostname = hostname;
	  this.port = port;
	  this.pathname = pathname;
	  this.search = search;
	  this.hash = hash;
	}
	global.URLPolyfill = URLPolyfill;
	})(typeof self != 'undefined' ? self : global);(function(__global) {

	  var isWorker = typeof window == 'undefined' && typeof self != 'undefined' && typeof importScripts != 'undefined';
	  var isBrowser = typeof window != 'undefined' && typeof document != 'undefined';
	  var isWindows = typeof process != 'undefined' && typeof process.platform != 'undefined' && !!process.platform.match(/^win/);

	  if (!__global.console)
	    __global.console = { assert: function() {} };

	  // IE8 support
	  var indexOf = Array.prototype.indexOf || function(item) {
	    for (var i = 0, thisLen = this.length; i < thisLen; i++) {
	      if (this[i] === item) {
	        return i;
	      }
	    }
	    return -1;
	  };
	  
	  var defineProperty;
	  (function () {
	    try {
	      if (!!Object.defineProperty({}, 'a', {}))
	        defineProperty = Object.defineProperty;
	    }
	    catch (e) {
	      defineProperty = function(obj, prop, opt) {
	        try {
	          obj[prop] = opt.value || opt.get.call(obj);
	        }
	        catch(e) {}
	      }
	    }
	  })();

	  var errArgs = new Error(0, '_').fileName == '_';

	  function addToError(err, msg) {
	    // parse the stack removing loader code lines for simplification
	    if (!err.originalErr) {
	      var stack = (err.stack || err.message || err).split('\n');
	      var newStack = [];
	      for (var i = 0; i < stack.length; i++) {
	        if (typeof $__curScript == 'undefined' || stack[i].indexOf($__curScript.src) == -1)
	          newStack.push(stack[i]);
	      }
	    }

	    var newMsg = (newStack ? newStack.join('\n\t') : err.message) + '\n\t' + msg;

	    // Convert file:/// URLs to paths in Node
	    if (!isBrowser)
	      newMsg = newMsg.replace(isWindows ? /file:\/\/\//g : /file:\/\//g, '');

	    var newErr = errArgs ? new Error(newMsg, err.fileName, err.lineNumber) : new Error(newMsg);
	    
	    // Node needs stack adjustment for throw to show message
	    if (!isBrowser)
	      newErr.stack = newMsg;
	    // Clearing the stack stops unnecessary loader lines showing
	    else
	      newErr.stack = null;
	    
	    // track the original error
	    newErr.originalErr = err.originalErr || err;

	    return newErr;
	  }

	  function __eval(source, debugName, context) {
	    try {
	      new Function(source).call(context);
	    }
	    catch(e) {
	      throw addToError(e, 'Evaluating ' + debugName);
	    }
	  }

	  var baseURI;
	  // environent baseURI detection
	  if (typeof document != 'undefined' && document.getElementsByTagName) {
	    baseURI = document.baseURI;

	    if (!baseURI) {
	      var bases = document.getElementsByTagName('base');
	      baseURI = bases[0] && bases[0].href || window.location.href;
	    }

	    // sanitize out the hash and querystring
	    baseURI = baseURI.split('#')[0].split('?')[0];
	    baseURI = baseURI.substr(0, baseURI.lastIndexOf('/') + 1);
	  }
	  else if (typeof process != 'undefined' && process.cwd) {
	    baseURI = 'file://' + (isWindows ? '/' : '') + process.cwd() + '/';
	    if (isWindows)
	      baseURI = baseURI.replace(/\\/g, '/');
	  }
	  else if (typeof location != 'undefined') {
	    baseURI = __global.location.href;
	  }
	  else {
	    throw new TypeError('No environment baseURI');
	  }

	  try {
	    var nativeURL = new __global.URL('test:///').protocol == 'test:';
	  }
	  catch(e) {}

	  var URL = nativeURL ? __global.URL : __global.URLPolyfill;
	/*
	*********************************************************************************************

	  Dynamic Module Loader Polyfill

	    - Implemented exactly to the former 2014-08-24 ES6 Specification Draft Rev 27, Section 15
	      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#august_24_2014_draft_rev_27

	    - Functions are commented with their spec numbers, with spec differences commented.

	    - Spec bugs are commented in this code with links.

	    - Abstract functions have been combined where possible, and their associated functions
	      commented.

	    - Realm implementation is entirely omitted.

	*********************************************************************************************
	*/

	function Module() {}
	// http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag
	defineProperty(Module.prototype, 'toString', {
	  value: function() {
	    return 'Module';
	  }
	});
	function Loader(options) {
	  this._loader = {
	    loaderObj: this,
	    loads: [],
	    modules: {},
	    importPromises: {},
	    moduleRecords: {}
	  };

	  // 26.3.3.6
	  defineProperty(this, 'global', {
	    get: function() {
	      return __global;
	    }
	  });

	  // 26.3.3.13 realm not implemented
	}

	(function() {

	// Some Helpers

	// logs a linkset snapshot for debugging
	/* function snapshot(loader) {
	  console.log('---Snapshot---');
	  for (var i = 0; i < loader.loads.length; i++) {
	    var load = loader.loads[i];
	    var linkSetLog = '  ' + load.name + ' (' + load.status + '): ';

	    for (var j = 0; j < load.linkSets.length; j++) {
	      linkSetLog += '{' + logloads(load.linkSets[j].loads) + '} ';
	    }
	    console.log(linkSetLog);
	  }
	  console.log('');
	}
	function logloads(loads) {
	  var log = '';
	  for (var k = 0; k < loads.length; k++)
	    log += loads[k].name + (k != loads.length - 1 ? ' ' : '');
	  return log;
	} */


	/* function checkInvariants() {
	  // see https://bugs.ecmascript.org/show_bug.cgi?id=2603#c1

	  var loads = System._loader.loads;
	  var linkSets = [];

	  for (var i = 0; i < loads.length; i++) {
	    var load = loads[i];
	    console.assert(load.status == 'loading' || load.status == 'loaded', 'Each load is loading or loaded');

	    for (var j = 0; j < load.linkSets.length; j++) {
	      var linkSet = load.linkSets[j];

	      for (var k = 0; k < linkSet.loads.length; k++)
	        console.assert(loads.indexOf(linkSet.loads[k]) != -1, 'linkSet loads are a subset of loader loads');

	      if (linkSets.indexOf(linkSet) == -1)
	        linkSets.push(linkSet);
	    }
	  }

	  for (var i = 0; i < loads.length; i++) {
	    var load = loads[i];
	    for (var j = 0; j < linkSets.length; j++) {
	      var linkSet = linkSets[j];

	      if (linkSet.loads.indexOf(load) != -1)
	        console.assert(load.linkSets.indexOf(linkSet) != -1, 'linkSet contains load -> load contains linkSet');

	      if (load.linkSets.indexOf(linkSet) != -1)
	        console.assert(linkSet.loads.indexOf(load) != -1, 'load contains linkSet -> linkSet contains load');
	    }
	  }

	  for (var i = 0; i < linkSets.length; i++) {
	    var linkSet = linkSets[i];
	    for (var j = 0; j < linkSet.loads.length; j++) {
	      var load = linkSet.loads[j];

	      for (var k = 0; k < load.dependencies.length; k++) {
	        var depName = load.dependencies[k].value;
	        var depLoad;
	        for (var l = 0; l < loads.length; l++) {
	          if (loads[l].name != depName)
	            continue;
	          depLoad = loads[l];
	          break;
	        }

	        // loading records are allowed not to have their dependencies yet
	        // if (load.status != 'loading')
	        //  console.assert(depLoad, 'depLoad found');

	        // console.assert(linkSet.loads.indexOf(depLoad) != -1, 'linkset contains all dependencies');
	      }
	    }
	  }
	} */

	  // 15.2.3 - Runtime Semantics: Loader State

	  // 15.2.3.11
	  function createLoaderLoad(object) {
	    return {
	      // modules is an object for ES5 implementation
	      modules: {},
	      loads: [],
	      loaderObj: object
	    };
	  }

	  // 15.2.3.2 Load Records and LoadRequest Objects

	  // 15.2.3.2.1
	  function createLoad(name) {
	    return {
	      status: 'loading',
	      name: name,
	      linkSets: [],
	      dependencies: [],
	      metadata: {}
	    };
	  }

	  // 15.2.3.2.2 createLoadRequestObject, absorbed into calling functions

	  // 15.2.4

	  // 15.2.4.1
	  function loadModule(loader, name, options) {
	    return new Promise(asyncStartLoadPartwayThrough({
	      step: options.address ? 'fetch' : 'locate',
	      loader: loader,
	      moduleName: name,
	      // allow metadata for import https://bugs.ecmascript.org/show_bug.cgi?id=3091
	      moduleMetadata: options && options.metadata || {},
	      moduleSource: options.source,
	      moduleAddress: options.address
	    }));
	  }

	  // 15.2.4.2
	  function requestLoad(loader, request, refererName, refererAddress) {
	    // 15.2.4.2.1 CallNormalize
	    return new Promise(function(resolve, reject) {
	      resolve(loader.loaderObj.normalize(request, refererName, refererAddress));
	    })
	    // 15.2.4.2.2 GetOrCreateLoad
	    .then(function(name) {
	      var load;
	      if (loader.modules[name]) {
	        load = createLoad(name);
	        load.status = 'linked';
	        // https://bugs.ecmascript.org/show_bug.cgi?id=2795
	        load.module = loader.modules[name];
	        return load;
	      }

	      for (var i = 0, l = loader.loads.length; i < l; i++) {
	        load = loader.loads[i];
	        if (load.name != name)
	          continue;
	        console.assert(load.status == 'loading' || load.status == 'loaded', 'loading or loaded');
	        return load;
	      }

	      load = createLoad(name);
	      loader.loads.push(load);

	      proceedToLocate(loader, load);

	      return load;
	    });
	  }

	  // 15.2.4.3
	  function proceedToLocate(loader, load) {
	    proceedToFetch(loader, load,
	      Promise.resolve()
	      // 15.2.4.3.1 CallLocate
	      .then(function() {
	        return loader.loaderObj.locate({ name: load.name, metadata: load.metadata });
	      })
	    );
	  }

	  // 15.2.4.4
	  function proceedToFetch(loader, load, p) {
	    proceedToTranslate(loader, load,
	      p
	      // 15.2.4.4.1 CallFetch
	      .then(function(address) {
	        // adjusted, see https://bugs.ecmascript.org/show_bug.cgi?id=2602
	        if (load.status != 'loading')
	          return;
	        load.address = address;

	        return loader.loaderObj.fetch({ name: load.name, metadata: load.metadata, address: address });
	      })
	    );
	  }

	  var anonCnt = 0;

	  // 15.2.4.5
	  function proceedToTranslate(loader, load, p) {
	    p
	    // 15.2.4.5.1 CallTranslate
	    .then(function(source) {
	      if (load.status != 'loading')
	        return;

	      return Promise.resolve(loader.loaderObj.translate({ name: load.name, metadata: load.metadata, address: load.address, source: source }))

	      // 15.2.4.5.2 CallInstantiate
	      .then(function(source) {
	        load.source = source;
	        return loader.loaderObj.instantiate({ name: load.name, metadata: load.metadata, address: load.address, source: source });
	      })

	      // 15.2.4.5.3 InstantiateSucceeded
	      .then(function(instantiateResult) {
	        if (instantiateResult === undefined) {
	          load.address = load.address || '<Anonymous Module ' + ++anonCnt + '>';

	          // instead of load.kind, use load.isDeclarative
	          load.isDeclarative = true;
	          return transpile.call(loader.loaderObj, load)
	          .then(function(transpiled) {
	            // Hijack System.register to set declare function
	            var curSystem = __global.System;
	            var curRegister = curSystem.register;
	            curSystem.register = function(name, deps, declare) {
	              if (typeof name != 'string') {
	                declare = deps;
	                deps = name;
	              }
	              // store the registered declaration as load.declare
	              // store the deps as load.deps
	              load.declare = declare;
	              load.depsList = deps;
	            }
	            // empty {} context is closest to undefined 'this' we can get
	            __eval(transpiled, load.address, {});
	            curSystem.register = curRegister;
	          });
	        }
	        else if (typeof instantiateResult == 'object') {
	          load.depsList = instantiateResult.deps || [];
	          load.execute = instantiateResult.execute;
	          load.isDeclarative = false;
	        }
	        else
	          throw TypeError('Invalid instantiate return value');
	      })
	      // 15.2.4.6 ProcessLoadDependencies
	      .then(function() {
	        load.dependencies = [];
	        var depsList = load.depsList;

	        var loadPromises = [];
	        for (var i = 0, l = depsList.length; i < l; i++) (function(request, index) {
	          loadPromises.push(
	            requestLoad(loader, request, load.name, load.address)

	            // 15.2.4.6.1 AddDependencyLoad (load is parentLoad)
	            .then(function(depLoad) {

	              // adjusted from spec to maintain dependency order
	              // this is due to the System.register internal implementation needs
	              load.dependencies[index] = {
	                key: request,
	                value: depLoad.name
	              };

	              if (depLoad.status != 'linked') {
	                var linkSets = load.linkSets.concat([]);
	                for (var i = 0, l = linkSets.length; i < l; i++)
	                  addLoadToLinkSet(linkSets[i], depLoad);
	              }

	              // console.log('AddDependencyLoad ' + depLoad.name + ' for ' + load.name);
	              // snapshot(loader);
	            })
	          );
	        })(depsList[i], i);

	        return Promise.all(loadPromises);
	      })

	      // 15.2.4.6.2 LoadSucceeded
	      .then(function() {
	        // console.log('LoadSucceeded ' + load.name);
	        // snapshot(loader);

	        console.assert(load.status == 'loading', 'is loading');

	        load.status = 'loaded';

	        var linkSets = load.linkSets.concat([]);
	        for (var i = 0, l = linkSets.length; i < l; i++)
	          updateLinkSetOnLoad(linkSets[i], load);
	      });
	    })
	    // 15.2.4.5.4 LoadFailed
	    ['catch'](function(exc) {
	      load.status = 'failed';
	      load.exception = exc;

	      var linkSets = load.linkSets.concat([]);
	      for (var i = 0, l = linkSets.length; i < l; i++) {
	        linkSetFailed(linkSets[i], load, exc);
	      }

	      console.assert(load.linkSets.length == 0, 'linkSets not removed');
	    });
	  }

	  // 15.2.4.7 PromiseOfStartLoadPartwayThrough absorbed into calling functions

	  // 15.2.4.7.1
	  function asyncStartLoadPartwayThrough(stepState) {
	    return function(resolve, reject) {
	      var loader = stepState.loader;
	      var name = stepState.moduleName;
	      var step = stepState.step;

	      if (loader.modules[name])
	        throw new TypeError('"' + name + '" already exists in the module table');

	      // adjusted to pick up existing loads
	      var existingLoad;
	      for (var i = 0, l = loader.loads.length; i < l; i++) {
	        if (loader.loads[i].name == name) {
	          existingLoad = loader.loads[i];

	          if (step == 'translate' && !existingLoad.source) {
	            existingLoad.address = stepState.moduleAddress;
	            proceedToTranslate(loader, existingLoad, Promise.resolve(stepState.moduleSource));
	          }

	          // a primary load -> use that existing linkset if it is for the direct load here
	          // otherwise create a new linkset unit
	          if (existingLoad.linkSets.length && existingLoad.linkSets[0].loads[0].name == existingLoad.name)
	            return existingLoad.linkSets[0].done.then(function() {
	              resolve(existingLoad);
	            });
	        }
	      }

	      var load = existingLoad || createLoad(name);

	      load.metadata = stepState.moduleMetadata;

	      var linkSet = createLinkSet(loader, load);

	      loader.loads.push(load);

	      resolve(linkSet.done);

	      if (step == 'locate')
	        proceedToLocate(loader, load);

	      else if (step == 'fetch')
	        proceedToFetch(loader, load, Promise.resolve(stepState.moduleAddress));

	      else {
	        console.assert(step == 'translate', 'translate step');
	        load.address = stepState.moduleAddress;
	        proceedToTranslate(loader, load, Promise.resolve(stepState.moduleSource));
	      }
	    }
	  }

	  // Declarative linking functions run through alternative implementation:
	  // 15.2.5.1.1 CreateModuleLinkageRecord not implemented
	  // 15.2.5.1.2 LookupExport not implemented
	  // 15.2.5.1.3 LookupModuleDependency not implemented

	  // 15.2.5.2.1
	  function createLinkSet(loader, startingLoad) {
	    var linkSet = {
	      loader: loader,
	      loads: [],
	      startingLoad: startingLoad, // added see spec bug https://bugs.ecmascript.org/show_bug.cgi?id=2995
	      loadingCount: 0
	    };
	    linkSet.done = new Promise(function(resolve, reject) {
	      linkSet.resolve = resolve;
	      linkSet.reject = reject;
	    });
	    addLoadToLinkSet(linkSet, startingLoad);
	    return linkSet;
	  }
	  // 15.2.5.2.2
	  function addLoadToLinkSet(linkSet, load) {
	    if (load.status == 'failed')
	      return;

	    console.assert(load.status == 'loading' || load.status == 'loaded', 'loading or loaded on link set');

	    for (var i = 0, l = linkSet.loads.length; i < l; i++)
	      if (linkSet.loads[i] == load)
	        return;

	    linkSet.loads.push(load);
	    load.linkSets.push(linkSet);

	    // adjustment, see https://bugs.ecmascript.org/show_bug.cgi?id=2603
	    if (load.status != 'loaded') {
	      linkSet.loadingCount++;
	    }

	    var loader = linkSet.loader;

	    for (var i = 0, l = load.dependencies.length; i < l; i++) {
	      if (!load.dependencies[i])
	        continue;

	      var name = load.dependencies[i].value;

	      if (loader.modules[name])
	        continue;

	      for (var j = 0, d = loader.loads.length; j < d; j++) {
	        if (loader.loads[j].name != name)
	          continue;

	        addLoadToLinkSet(linkSet, loader.loads[j]);
	        break;
	      }
	    }
	    // console.log('add to linkset ' + load.name);
	    // snapshot(linkSet.loader);
	  }

	  // linking errors can be generic or load-specific
	  // this is necessary for debugging info
	  function doLink(linkSet) {
	    var error = false;
	    try {
	      link(linkSet, function(load, exc) {
	        linkSetFailed(linkSet, load, exc);
	        error = true;
	      });
	    }
	    catch(e) {
	      linkSetFailed(linkSet, null, e);
	      error = true;
	    }
	    return error;
	  }

	  // 15.2.5.2.3
	  function updateLinkSetOnLoad(linkSet, load) {
	    // console.log('update linkset on load ' + load.name);
	    // snapshot(linkSet.loader);

	    console.assert(load.status == 'loaded' || load.status == 'linked', 'loaded or linked');

	    linkSet.loadingCount--;

	    if (linkSet.loadingCount > 0)
	      return;

	    // adjusted for spec bug https://bugs.ecmascript.org/show_bug.cgi?id=2995
	    var startingLoad = linkSet.startingLoad;

	    // non-executing link variation for loader tracing
	    // on the server. Not in spec.
	    /***/
	    if (linkSet.loader.loaderObj.execute === false) {
	      var loads = [].concat(linkSet.loads);
	      for (var i = 0, l = loads.length; i < l; i++) {
	        var load = loads[i];
	        load.module = !load.isDeclarative ? {
	          module: _newModule({})
	        } : {
	          name: load.name,
	          module: _newModule({}),
	          evaluated: true
	        };
	        load.status = 'linked';
	        finishLoad(linkSet.loader, load);
	      }
	      return linkSet.resolve(startingLoad);
	    }
	    /***/

	    var abrupt = doLink(linkSet);

	    if (abrupt)
	      return;

	    console.assert(linkSet.loads.length == 0, 'loads cleared');

	    linkSet.resolve(startingLoad);
	  }

	  // 15.2.5.2.4
	  function linkSetFailed(linkSet, load, exc) {
	    var loader = linkSet.loader;
	    var requests;

	    checkError: 
	    if (load) {
	      if (linkSet.loads[0].name == load.name) {
	        exc = addToError(exc, 'Error loading ' + load.name);
	      }
	      else {
	        for (var i = 0; i < linkSet.loads.length; i++) {
	          var pLoad = linkSet.loads[i];
	          for (var j = 0; j < pLoad.dependencies.length; j++) {
	            var dep = pLoad.dependencies[j];
	            if (dep.value == load.name) {
	              exc = addToError(exc, 'Error loading ' + load.name + ' as "' + dep.key + '" from ' + pLoad.name);
	              break checkError;
	            }
	          }
	        }
	        exc = addToError(exc, 'Error loading ' + load.name + ' from ' + linkSet.loads[0].name);
	      }
	    }
	    else {
	      exc = addToError(exc, 'Error linking ' + linkSet.loads[0].name);
	    }


	    var loads = linkSet.loads.concat([]);
	    for (var i = 0, l = loads.length; i < l; i++) {
	      var load = loads[i];

	      // store all failed load records
	      loader.loaderObj.failed = loader.loaderObj.failed || [];
	      if (indexOf.call(loader.loaderObj.failed, load) == -1)
	        loader.loaderObj.failed.push(load);

	      var linkIndex = indexOf.call(load.linkSets, linkSet);
	      console.assert(linkIndex != -1, 'link not present');
	      load.linkSets.splice(linkIndex, 1);
	      if (load.linkSets.length == 0) {
	        var globalLoadsIndex = indexOf.call(linkSet.loader.loads, load);
	        if (globalLoadsIndex != -1)
	          linkSet.loader.loads.splice(globalLoadsIndex, 1);
	      }
	    }
	    linkSet.reject(exc);
	  }

	  // 15.2.5.2.5
	  function finishLoad(loader, load) {
	    // add to global trace if tracing
	    if (loader.loaderObj.trace) {
	      if (!loader.loaderObj.loads)
	        loader.loaderObj.loads = {};
	      var depMap = {};
	      load.dependencies.forEach(function(dep) {
	        depMap[dep.key] = dep.value;
	      });
	      loader.loaderObj.loads[load.name] = {
	        name: load.name,
	        deps: load.dependencies.map(function(dep){ return dep.key }),
	        depMap: depMap,
	        address: load.address,
	        metadata: load.metadata,
	        source: load.source,
	        kind: load.isDeclarative ? 'declarative' : 'dynamic'
	      };
	    }
	    // if not anonymous, add to the module table
	    if (load.name) {
	      console.assert(!loader.modules[load.name], 'load not in module table');
	      loader.modules[load.name] = load.module;
	    }
	    var loadIndex = indexOf.call(loader.loads, load);
	    if (loadIndex != -1)
	      loader.loads.splice(loadIndex, 1);
	    for (var i = 0, l = load.linkSets.length; i < l; i++) {
	      loadIndex = indexOf.call(load.linkSets[i].loads, load);
	      if (loadIndex != -1)
	        load.linkSets[i].loads.splice(loadIndex, 1);
	    }
	    load.linkSets.splice(0, load.linkSets.length);
	  }

	  function doDynamicExecute(linkSet, load, linkError) {
	    try {
	      var module = load.execute();
	    }
	    catch(e) {
	      linkError(load, e);
	      return;
	    }
	    if (!module || !(module instanceof Module))
	      linkError(load, new TypeError('Execution must define a Module instance'));
	    else
	      return module;
	  }

	  // 26.3 Loader

	  // 26.3.1.1
	  // defined at top

	  // importPromises adds ability to import a module twice without error - https://bugs.ecmascript.org/show_bug.cgi?id=2601
	  function createImportPromise(loader, name, promise) {
	    var importPromises = loader._loader.importPromises;
	    return importPromises[name] = promise.then(function(m) {
	      importPromises[name] = undefined;
	      return m;
	    }, function(e) {
	      importPromises[name] = undefined;
	      throw e;
	    });
	  }

	  Loader.prototype = {
	    // 26.3.3.1
	    constructor: Loader,
	    // 26.3.3.2
	    define: function(name, source, options) {
	      // check if already defined
	      if (this._loader.importPromises[name])
	        throw new TypeError('Module is already loading.');
	      return createImportPromise(this, name, new Promise(asyncStartLoadPartwayThrough({
	        step: 'translate',
	        loader: this._loader,
	        moduleName: name,
	        moduleMetadata: options && options.metadata || {},
	        moduleSource: source,
	        moduleAddress: options && options.address
	      })));
	    },
	    // 26.3.3.3
	    'delete': function(name) {
	      var loader = this._loader;
	      delete loader.importPromises[name];
	      delete loader.moduleRecords[name];
	      return loader.modules[name] ? delete loader.modules[name] : false;
	    },
	    // 26.3.3.4 entries not implemented
	    // 26.3.3.5
	    get: function(key) {
	      if (!this._loader.modules[key])
	        return;
	      doEnsureEvaluated(this._loader.modules[key], [], this);
	      return this._loader.modules[key].module;
	    },
	    // 26.3.3.7
	    has: function(name) {
	      return !!this._loader.modules[name];
	    },
	    // 26.3.3.8
	    'import': function(name, parentName, parentAddress) {
	      if (typeof parentName == 'object')
	        parentName = parentName.name;

	      // run normalize first
	      var loaderObj = this;

	      // added, see https://bugs.ecmascript.org/show_bug.cgi?id=2659
	      return Promise.resolve(loaderObj.normalize(name, parentName))
	      .then(function(name) {
	        var loader = loaderObj._loader;

	        if (loader.modules[name]) {
	          doEnsureEvaluated(loader.modules[name], [], loader._loader);
	          return loader.modules[name].module;
	        }

	        return loader.importPromises[name] || createImportPromise(loaderObj, name,
	          loadModule(loader, name, {})
	          .then(function(load) {
	            delete loader.importPromises[name];
	            return evaluateLoadedModule(loader, load);
	          }));
	      });
	    },
	    // 26.3.3.9 keys not implemented
	    // 26.3.3.10
	    load: function(name) {
	      var loader = this._loader;
	      if (loader.modules[name])
	        return Promise.resolve();
	      return loader.importPromises[name] || createImportPromise(this, name, new Promise(asyncStartLoadPartwayThrough({
	        step: 'locate',
	        loader: loader,
	        moduleName: name,
	        moduleMetadata: {},
	        moduleSource: undefined,
	        moduleAddress: undefined
	      }))
	      .then(function() {
	        delete loader.importPromises[name];
	      }));
	    },
	    // 26.3.3.11
	    module: function(source, options) {
	      var load = createLoad();
	      load.address = options && options.address;
	      var linkSet = createLinkSet(this._loader, load);
	      var sourcePromise = Promise.resolve(source);
	      var loader = this._loader;
	      var p = linkSet.done.then(function() {
	        return evaluateLoadedModule(loader, load);
	      });
	      proceedToTranslate(loader, load, sourcePromise);
	      return p;
	    },
	    // 26.3.3.12
	    newModule: function (obj) {
	      if (typeof obj != 'object')
	        throw new TypeError('Expected object');

	      var m = new Module();

	      var pNames = [];
	      if (Object.getOwnPropertyNames && obj != null)
	        pNames = Object.getOwnPropertyNames(obj);
	      else
	        for (var key in obj)
	          pNames.push(key);

	      for (var i = 0; i < pNames.length; i++) (function(key) {
	        defineProperty(m, key, {
	          configurable: false,
	          enumerable: true,
	          get: function () {
	            return obj[key];
	          },
	          set: function() {
	            throw new Error('Module exports cannot be changed externally.');
	          }
	        });
	      })(pNames[i]);

	      if (Object.freeze)
	        Object.freeze(m);

	      return m;
	    },
	    // 26.3.3.14
	    set: function(name, module) {
	      if (!(module instanceof Module))
	        throw new TypeError('Loader.set(' + name + ', module) must be a module');
	      this._loader.modules[name] = {
	        module: module
	      };
	    },
	    // 26.3.3.15 values not implemented
	    // 26.3.3.16 @@iterator not implemented
	    // 26.3.3.17 @@toStringTag not implemented

	    // 26.3.3.18.1
	    normalize: function(name, referrerName, referrerAddress) {
	      return name;
	    },
	    // 26.3.3.18.2
	    locate: function(load) {
	      return load.name;
	    },
	    // 26.3.3.18.3
	    fetch: function(load) {
	    },
	    // 26.3.3.18.4
	    translate: function(load) {
	      return load.source;
	    },
	    // 26.3.3.18.5
	    instantiate: function(load) {
	    }
	  };

	  var _newModule = Loader.prototype.newModule;
	/*
	 * ES6 Module Declarative Linking Code - Dev Build Only
	 */
	  function link(linkSet, linkError) {

	    var loader = linkSet.loader;

	    if (!linkSet.loads.length)
	      return;

	    var loads = linkSet.loads.concat([]);

	    for (var i = 0; i < loads.length; i++) {
	      var load = loads[i];

	      var module = doDynamicExecute(linkSet, load, linkError);
	      if (!module)
	        return;
	      load.module = {
	        name: load.name,
	        module: module
	      };
	      load.status = 'linked';

	      finishLoad(loader, load);
	    }
	  }

	  function evaluateLoadedModule(loader, load) {
	    console.assert(load.status == 'linked', 'is linked ' + load.name);
	    return load.module.module;
	  }

	  function doEnsureEvaluated() {}

	  function transpile() {
	    throw new TypeError('ES6 transpilation is only provided in the dev module loader build.');
	  }
	})();/*
	*********************************************************************************************

	  System Loader Implementation

	    - Implemented to https://github.com/jorendorff/js-loaders/blob/master/browser-loader.js

	    - <script type="module"> supported

	*********************************************************************************************
	*/

	var System;

	function SystemLoader() {
	  Loader.call(this);
	  this.paths = {};
	}

	// NB no specification provided for System.paths, used ideas discussed in https://github.com/jorendorff/js-loaders/issues/25
	function applyPaths(paths, name) {
	  // most specific (most number of slashes in path) match wins
	  var pathMatch = '', wildcard, maxWildcardPrefixLen = 0;

	  // check to see if we have a paths entry
	  for (var p in paths) {
	    var pathParts = p.split('*');
	    if (pathParts.length > 2)
	      throw new TypeError('Only one wildcard in a path is permitted');

	    // exact path match
	    if (pathParts.length == 1) {
	      if (name == p)
	        return paths[p];
	      
	      // support trailing / in paths rules
	      else if (name.substr(0, p.length - 1) == p.substr(0, p.length - 1) && (name.length < p.length || name[p.length - 1] == p[p.length - 1]) && paths[p][paths[p].length - 1] == '/')
	        return paths[p].substr(0, paths[p].length - 1) + (name.length > p.length ? '/' + name.substr(p.length) : '');
	    }
	    // wildcard path match
	    else {
	      var wildcardPrefixLen = pathParts[0].length;
	      if (wildcardPrefixLen >= maxWildcardPrefixLen &&
	          name.substr(0, pathParts[0].length) == pathParts[0] &&
	          name.substr(name.length - pathParts[1].length) == pathParts[1]) {
	            maxWildcardPrefixLen = wildcardPrefixLen;
	            pathMatch = p;
	            wildcard = name.substr(pathParts[0].length, name.length - pathParts[1].length - pathParts[0].length);
	          }
	    }
	  }

	  var outPath = paths[pathMatch];
	  if (typeof wildcard == 'string')
	    outPath = outPath.replace('*', wildcard);

	  return outPath;
	}

	// inline Object.create-style class extension
	function LoaderProto() {}
	LoaderProto.prototype = Loader.prototype;
	SystemLoader.prototype = new LoaderProto();
	  var fetchTextFromURL;
	  if (typeof XMLHttpRequest != 'undefined') {
	    fetchTextFromURL = function(url, authorization, fulfill, reject) {
	      var xhr = new XMLHttpRequest();
	      var sameDomain = true;
	      var doTimeout = false;
	      if (!('withCredentials' in xhr)) {
	        // check if same domain
	        var domainCheck = /^(\w+:)?\/\/([^\/]+)/.exec(url);
	        if (domainCheck) {
	          sameDomain = domainCheck[2] === window.location.host;
	          if (domainCheck[1])
	            sameDomain &= domainCheck[1] === window.location.protocol;
	        }
	      }
	      if (!sameDomain && typeof XDomainRequest != 'undefined') {
	        xhr = new XDomainRequest();
	        xhr.onload = load;
	        xhr.onerror = error;
	        xhr.ontimeout = error;
	        xhr.onprogress = function() {};
	        xhr.timeout = 0;
	        doTimeout = true;
	      }
	      function load() {
	        fulfill(xhr.responseText);
	      }
	      function error() {
	        reject(new Error('XHR error' + (xhr.status ? ' (' + xhr.status + (xhr.statusText ? ' ' + xhr.statusText  : '') + ')' : '') + ' loading ' + url));
	      }

	      xhr.onreadystatechange = function () {
	        if (xhr.readyState === 4) {
	          // in Chrome on file:/// URLs, status is 0
	          if (xhr.status == 0) {
	            if (xhr.responseText) {
	              load();
	            }
	            else {
	              // when responseText is empty, wait for load or error event
	              // to inform if it is a 404 or empty file
	              xhr.addEventListener('error', error);
	              xhr.addEventListener('load', load);
	            }
	          }
	          else if (xhr.status === 200) {
	            load();
	          }
	          else {
	            error();
	          }
	        }
	      };
	      xhr.open("GET", url, true);

	      if (xhr.setRequestHeader) {
	        xhr.setRequestHeader('Accept', 'application/x-es-module, */*');
	        // can set "authorization: true" to enable withCredentials only
	        if (authorization) {
	          if (typeof authorization == 'string')
	            xhr.setRequestHeader('Authorization', authorization);
	          xhr.withCredentials = true;
	        }
	      }

	      if (doTimeout) {
	        setTimeout(function() {
	          xhr.send();
	        }, 0);
	      } else {
	        xhr.send(null);
	      }
	    };
	  }
	  else if ("function" != 'undefined' && typeof process != 'undefined') {
	    var fs;
	    fetchTextFromURL = function(url, authorization, fulfill, reject) {
	      if (url.substr(0, 8) != 'file:///')
	        throw new Error('Unable to fetch "' + url + '". Only file URLs of the form file:/// allowed running in Node.');
	      fs = fs || __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	      if (isWindows)
	        url = url.replace(/\//g, '\\').substr(8);
	      else
	        url = url.substr(7);
	      return fs.readFile(url, function(err, data) {
	        if (err) {
	          return reject(err);
	        }
	        else {
	          // Strip Byte Order Mark out if it's the leading char
	          var dataString = data + '';
	          if (dataString[0] === '\ufeff')
	            dataString = dataString.substr(1);

	          fulfill(dataString);
	        }
	      });
	    };
	  }
	  else if (typeof self != 'undefined' && typeof self.fetch != 'undefined') {
	    fetchTextFromURL = function(url, authorization, fulfill, reject) {
	      var opts = {
	        headers: {'Accept': 'application/x-es-module, */*'}
	      };

	      if (authorization) {
	        if (typeof authorization == 'string')
	          opts.headers['Authorization'] = authorization;
	        opts.credentials = 'include';
	      }

	      fetch(url, opts)
	        .then(function (r) {
	          if (r.ok) {
	            return r.text();
	          } else {
	            throw new Error('Fetch error: ' + r.status + ' ' + r.statusText);
	          }
	        })
	        .then(fulfill, reject);
	    }
	  }
	  else {
	    throw new TypeError('No environment fetch API available.');
	  }

	  SystemLoader.prototype.fetch = function(load) {
	    return new Promise(function(resolve, reject) {
	      fetchTextFromURL(load.address, undefined, resolve, reject);
	    });
	  };
	// SystemJS Loader Class and Extension helpers

	function SystemJSLoader() {
	  SystemLoader.call(this);

	  systemJSConstructor.call(this);
	}

	// inline Object.create-style class extension
	function SystemProto() {};
	SystemProto.prototype = SystemLoader.prototype;
	SystemJSLoader.prototype = new SystemProto();
	SystemJSLoader.prototype.constructor = SystemJSLoader;

	// remove ESML instantiate
	SystemJSLoader.prototype.instantiate = function() {};

	var systemJSConstructor;

	function hook(name, hook) {
	  SystemJSLoader.prototype[name] = hook(SystemJSLoader.prototype[name] || function() {});
	}
	function hookConstructor(hook) {
	  systemJSConstructor = hook(systemJSConstructor || function() {});
	}

	function dedupe(deps) {
	  var newDeps = [];
	  for (var i = 0, l = deps.length; i < l; i++)
	    if (indexOf.call(newDeps, deps[i]) == -1)
	      newDeps.push(deps[i])
	  return newDeps;
	}

	function group(deps) {
	  var names = [];
	  var indices = [];
	  for (var i = 0, l = deps.length; i < l; i++) {
	    var index = indexOf.call(names, deps[i]);
	    if (index === -1) {
	      names.push(deps[i]);
	      indices.push([i]);
	    }
	    else {
	      indices[index].push(i);
	    }
	  }
	  return { names: names, indices: indices };
	}

	var getOwnPropertyDescriptor = true;
	try {
	  Object.getOwnPropertyDescriptor({ a: 0 }, 'a');
	}
	catch(e) {
	  getOwnPropertyDescriptor = false;
	}

	// converts any module.exports object into an object ready for SystemJS.newModule
	function getESModule(exports) {
	  var esModule = {};
	  // don't trigger getters/setters in environments that support them
	  if (typeof exports == 'object' || typeof exports == 'function') {
	    var hasOwnProperty = exports && exports.hasOwnProperty;
	    if (getOwnPropertyDescriptor) {
	      for (var p in exports) {
	        if (!trySilentDefineProperty(esModule, exports, p))
	          setPropertyIfHasOwnProperty(esModule, exports, p, hasOwnProperty);
	      }
	    }
	    else {
	      for (var p in exports)
	        setPropertyIfHasOwnProperty(esModule, exports, p, hasOwnProperty);
	    }
	  }
	  esModule['default'] = exports;
	  defineProperty(esModule, '__useDefault', {
	    value: true
	  });
	  return esModule;
	}

	function setPropertyIfHasOwnProperty(targetObj, sourceObj, propName, hasOwnProperty) {
	  if (!hasOwnProperty || sourceObj.hasOwnProperty(propName))
	    targetObj[propName] = sourceObj[propName];
	}

	function trySilentDefineProperty(targetObj, sourceObj, propName) {
	  try {
	    var d;
	    if (d = Object.getOwnPropertyDescriptor(sourceObj, propName))
	      defineProperty(targetObj, propName, d);

	    return true;
	  } catch (ex) {
	    // Object.getOwnPropertyDescriptor threw an exception, fall back to normal set property.
	    return false;
	  }
	}

	function extend(a, b, prepend) {
	  for (var p in b) {
	    if (!prepend || !(p in a))
	      a[p] = b[p];
	  }
	  return a;
	}

	// package configuration options
	var packageProperties = ['main', 'format', 'defaultExtension', 'meta', 'map', 'basePath', 'depCache'];

	// meta first-level extends where:
	// array + array appends
	// object + object extends
	// other properties replace
	function extendMeta(a, b, prepend) {
	  for (var p in b) {
	    var val = b[p];
	    if (!(p in a))
	      a[p] = val;
	    else if (val instanceof Array && a[p] instanceof Array)
	      a[p] = [].concat(prepend ? val : a[p]).concat(prepend ? a[p] : val);
	    else if (typeof val == 'object' && val !== null && typeof a[p] == 'object')
	      a[p] = extend(extend({}, a[p]), val, prepend);
	    else if (!prepend)
	      a[p] = val;
	  }
	}

	function warn(msg) {
	  if (this.warnings && typeof console != 'undefined' && console.warn)
	    console.warn(msg);
	}
	var absURLRegEx = /^[^\/]+:\/\//;

	function readMemberExpression(p, value) {
	  var pParts = p.split('.');
	  while (pParts.length)
	    value = value[pParts.shift()];
	  return value;
	}

	var baseURLCache = {};
	function getBaseURLObj() {
	  if (baseURLCache[this.baseURL])
	    return baseURLCache[this.baseURL];

	  // normalize baseURL if not already
	  if (this.baseURL[this.baseURL.length - 1] != '/')
	    this.baseURL += '/';

	  var baseURL = new URL(this.baseURL, baseURI);

	  this.baseURL = baseURL.href;

	  return (baseURLCache[this.baseURL] = baseURL);
	}

	function getMapMatch(map, name) {
	  var bestMatch, bestMatchLength = 0;

	  for (var p in map) {
	    if (name.substr(0, p.length) == p && (name.length == p.length || name[p.length] == '/')) {
	      var curMatchLength = p.split('/').length;
	      if (curMatchLength <= bestMatchLength)
	        continue;
	      bestMatch = p;
	      bestMatchLength = curMatchLength;
	    }
	  }

	  return bestMatch;
	}

	function setProduction(isProduction) {
	  this.set('@system-env', this.newModule({
	    browser: isBrowser,
	    node: !!this._nodeRequire,
	    production: isProduction,
	    'default': true
	  }));
	}

	var baseURIObj = new URL(baseURI);

	hookConstructor(function(constructor) {
	  return function() {
	    constructor.call(this);

	    // support baseURL
	    this.baseURL = baseURI.substr(0, baseURI.lastIndexOf('/') + 1);

	    // support map and paths
	    this.map = {};
	    this.paths = {};

	    // global behaviour flags
	    this.warnings = false;
	    this.defaultJSExtensions = false;
	    this.pluginFirst = false;
	    this.loaderErrorStack = false;

	    // by default load ".json" files as json
	    // leading * meta doesn't need normalization
	    // NB add this in next breaking release
	    // this.meta['*.json'] = { format: 'json' };

	    // support the empty module, as a concept
	    this.set('@empty', this.newModule({}));

	    setProduction.call(this, false);
	  };
	});

	// include the node require since we're overriding it
	if ("function" != 'undefined' && typeof process != 'undefined' && !process.browser)
	  SystemJSLoader.prototype._nodeRequire = __webpack_require__(729);

	var nodeCoreModules = ['assert', 'buffer', 'child_process', 'cluster', 'console', 'constants', 
	    'crypto', 'dgram', 'dns', 'domain', 'events', 'fs', 'http', 'https', 'module', 'net', 'os', 'path', 
	    'process', 'punycode', 'querystring', 'readline', 'repl', 'stream', 'string_decoder', 'sys', 'timers', 
	    'tls', 'tty', 'url', 'util', 'vm', 'zlib'];

	/*
	  Core SystemJS Normalization

	  If a name is relative, we apply URL normalization to the page
	  If a name is an absolute URL, we leave it as-is

	  Plain names (neither of the above) run through the map and paths
	  normalization phases.

	  The paths normalization phase applies last (paths extension), which
	  defines the `decanonicalize` function and normalizes everything into
	  a URL.
	 */

	function isPlain(name) {
	  return (name[0] != '.' || (!!name[1] && name[1] != '/' && name[1] != '.')) && name[0] != '/' && !name.match(absURLRegEx);
	}

	function urlResolve(name, parent) {
	  if (parent)
	    parent = parent.replace(/#/g, '%05');
	  return new URL(name, parent || baseURIObj).href.replace(/%05/g, '#');
	}

	// only applies to plain names
	function baseURLResolve(loader, name) {
	  return new URL(name, getBaseURLObj.call(loader)).href;
	}

	function coreResolve(name, parentName) {
	  // standard URL resolution
	  if (!isPlain(name))
	    return urlResolve(name, parentName);

	  // plain names not starting with './', '://' and '/' go through custom resolution
	  var mapMatch = getMapMatch(this.map, name);

	  if (mapMatch) {
	    name = this.map[mapMatch] + name.substr(mapMatch.length);

	    if (!isPlain(name))
	      return urlResolve(name);
	  }

	  if (this.has(name))
	    return name;
	  // dynamically load node-core modules when requiring `@node/fs` for example
	  if (name.substr(0, 6) == '@node/' && nodeCoreModules.indexOf(name.substr(6)) != -1) {
	    if (!this._nodeRequire)
	      throw new TypeError('Error loading ' + name + '. Can only load node core modules in Node.');
	    this.set(name, this.newModule(getESModule(this._nodeRequire(name.substr(6)))));
	    return name;
	  }

	  var pathed = applyPaths(this.paths, name);

	  if (pathed && !isPlain(pathed))
	    return urlResolve(pathed);

	  return baseURLResolve(this, pathed || name);
	}

	hook('normalize', function(normalize) {
	  return function(name, parentName, skipExt) {
	    var resolved = coreResolve.call(this, name, parentName);
	    if (!skipExt && this.defaultJSExtensions && resolved.substr(resolved.length - 3, 3) != '.js' && !isPlain(resolved))
	      resolved += '.js';
	    return resolved;
	  };
	});

	// percent encode just '#' in urls if using HTTP requests
	var httpRequest = typeof XMLHttpRequest != 'undefined';
	hook('locate', function(locate) {
	  return function(load) {
	    return Promise.resolve(locate.call(this, load))
	    .then(function(address) {
	      if (httpRequest)
	        return address.replace(/#/g, '%23');
	      return address;
	    });
	  };
	});

	/*
	 * Fetch with authorization
	 */
	hook('fetch', function() {
	  return function(load) {
	    return new Promise(function(resolve, reject) {
	      fetchTextFromURL(load.address, load.metadata.authorization, resolve, reject);
	    });
	  };
	});

	/*
	  __useDefault
	  
	  When a module object looks like:
	  newModule(
	    __useDefault: true,
	    default: 'some-module'
	  })

	  Then importing that module provides the 'some-module'
	  result directly instead of the full module.

	  Useful for eg module.exports = function() {}
	*/
	hook('import', function(systemImport) {
	  return function(name, parentName, parentAddress) {
	    if (parentName && parentName.name)
	      warn.call(this, 'SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing ' + name + ' from ' + parentName.name);
	    return systemImport.call(this, name, parentName, parentAddress).then(function(module) {
	      return module.__useDefault ? module['default'] : module;
	    });
	  };
	});

	/*
	 * Allow format: 'detect' meta to enable format detection
	 */
	hook('translate', function(systemTranslate) {
	  return function(load) {
	    if (load.metadata.format == 'detect')
	      load.metadata.format = undefined;
	    return systemTranslate.call(this, load);
	  };
	});


	/*
	 * JSON format support
	 *
	 * Supports loading JSON files as a module format itself
	 *
	 * Usage:
	 *
	 * SystemJS.config({
	 *   meta: {
	 *     '*.json': { format: 'json' }
	 *   }
	 * });
	 *
	 * Module is returned as if written:
	 *
	 * export default {JSON}
	 *
	 * No named exports are provided
	 *
	 * Files ending in ".json" are treated as json automatically by SystemJS
	 */
	hook('instantiate', function(instantiate) {
	  return function(load) {
	    if (load.metadata.format == 'json' && !this.builder) {
	      var entry = load.metadata.entry = createEntry();
	      entry.deps = [];
	      entry.execute = function() {
	        try {
	          return JSON.parse(load.source);
	        }
	        catch(e) {
	          throw new Error("Invalid JSON file " + load.name);
	        }
	      };
	    }
	  };
	})

	/*
	 Extend config merging one deep only

	  loader.config({
	    some: 'random',
	    config: 'here',
	    deep: {
	      config: { too: 'too' }
	    }
	  });

	  <=>

	  loader.some = 'random';
	  loader.config = 'here'
	  loader.deep = loader.deep || {};
	  loader.deep.config = { too: 'too' };


	  Normalizes meta and package configs allowing for:

	  SystemJS.config({
	    meta: {
	      './index.js': {}
	    }
	  });

	  To become

	  SystemJS.meta['https://thissite.com/index.js'] = {};

	  For easy normalization canonicalization with latest URL support.

	*/
	SystemJSLoader.prototype.env = 'development';

	var curCurScript;
	SystemJSLoader.prototype.config = function(cfg) {
	  var loader = this;

	  if ('loaderErrorStack' in cfg) {
	    curCurScript = $__curScript;
	    if (cfg.loaderErrorStack)
	      $__curScript = undefined;
	    else
	      $__curScript = curCurScript;
	  }

	  if ('warnings' in cfg)
	    loader.warnings = cfg.warnings;

	  // transpiler deprecation path
	  if (cfg.transpilerRuntime === false)
	    loader._loader.loadedTranspilerRuntime = true;

	  // always configure baseURL first
	  if (cfg.baseURL) {
	    var hasConfig = false;
	    function checkHasConfig(obj) {
	      for (var p in obj)
	        if (hasOwnProperty.call(obj, p))
	          return true;
	    }
	    if (checkHasConfig(loader.packages) || checkHasConfig(loader.meta) || checkHasConfig(loader.depCache) || checkHasConfig(loader.bundles) || checkHasConfig(loader.packageConfigPaths))
	      throw new TypeError('Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.');

	    loader.baseURL = cfg.baseURL;

	    // sanitize baseURL
	    getBaseURLObj.call(loader);
	  }

	  if (cfg.defaultJSExtensions) {
	    loader.defaultJSExtensions = cfg.defaultJSExtensions;
	    warn.call(loader, 'The defaultJSExtensions configuration option is deprecated, use packages configuration instead.');
	  }

	  if (cfg.pluginFirst)
	    loader.pluginFirst = cfg.pluginFirst;

	  if (cfg.production)
	    setProduction.call(loader, true);

	  if (cfg.paths) {
	    for (var p in cfg.paths)
	      loader.paths[p] = cfg.paths[p];
	  }

	  if (cfg.map) {
	    var objMaps = '';
	    for (var p in cfg.map) {
	      var v = cfg.map[p];

	      // object map backwards-compat into packages configuration
	      if (typeof v !== 'string') {
	        objMaps += (objMaps.length ? ', ' : '') + '"' + p + '"';

	        var defaultJSExtension = loader.defaultJSExtensions && p.substr(p.length - 3, 3) != '.js';
	        var prop = loader.decanonicalize(p);
	        if (defaultJSExtension && prop.substr(prop.length - 3, 3) == '.js')
	          prop = prop.substr(0, prop.length - 3);

	        // if a package main, revert it
	        var pkgMatch = '';
	        for (var pkg in loader.packages) {
	          if (prop.substr(0, pkg.length) == pkg 
	              && (!prop[pkg.length] || prop[pkg.length] == '/') 
	              && pkgMatch.split('/').length < pkg.split('/').length)
	            pkgMatch = pkg;
	        }
	        if (pkgMatch && loader.packages[pkgMatch].main)
	          prop = prop.substr(0, prop.length - loader.packages[pkgMatch].main.length - 1);

	        var pkg = loader.packages[prop] = loader.packages[prop] || {};
	        pkg.map = v;
	      }
	      else {
	        loader.map[p] = v;
	      }
	    }
	    if (objMaps)
	      warn.call(loader, 'The map configuration for ' + objMaps + ' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "' + p + '": { map: {...} } } }).');
	  }

	  if (cfg.packageConfigPaths) {
	    var packageConfigPaths = [];
	    for (var i = 0; i < cfg.packageConfigPaths.length; i++) {
	      var path = cfg.packageConfigPaths[i];
	      var packageLength = Math.max(path.lastIndexOf('*') + 1, path.lastIndexOf('/'));
	      var defaultJSExtension = loader.defaultJSExtensions && path.substr(packageLength - 3, 3) != '.js';
	      var normalized = loader.decanonicalize(path.substr(0, packageLength));
	      if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) == '.js')
	        normalized = normalized.substr(0, normalized.length - 3);
	      packageConfigPaths[i] = normalized + path.substr(packageLength);
	    }
	    loader.packageConfigPaths = packageConfigPaths;
	  }

	  if (cfg.bundles) {
	    for (var p in cfg.bundles) {
	      var bundle = [];
	      for (var i = 0; i < cfg.bundles[p].length; i++) {
	        var defaultJSExtension = loader.defaultJSExtensions && cfg.bundles[p][i].substr(cfg.bundles[p][i].length - 3, 3) != '.js';
	        var normalizedBundleDep = loader.decanonicalize(cfg.bundles[p][i]);
	        if (defaultJSExtension && normalizedBundleDep.substr(normalizedBundleDep.length - 3, 3) == '.js')
	          normalizedBundleDep = normalizedBundleDep.substr(0, normalizedBundleDep.length - 3);
	        bundle.push(normalizedBundleDep);
	      }
	      loader.bundles[p] = bundle;
	    }
	  }

	  if (cfg.packages) {
	    for (var p in cfg.packages) {
	      if (p.match(/^([^\/]+:)?\/\/$/))
	        throw new TypeError('"' + p + '" is not a valid package name.');

	      var prop = coreResolve.call(loader, p);

	      // allow trailing slash in packages
	      if (prop[prop.length - 1] == '/')
	        prop = prop.substr(0, prop.length - 1);

	      loader.packages[prop] = loader.packages[prop] || {};

	      var pkg = cfg.packages[p];

	      // meta backwards compatibility
	      if (pkg.modules) {
	        warn.call(loader, 'Package ' + p + ' is configured with "modules", which is deprecated as it has been renamed to "meta".');
	        pkg.meta = pkg.modules;
	        delete pkg.modules;
	      }

	      if (typeof pkg.main == 'object') {
	        pkg.map = pkg.map || {};
	        pkg.map['./@main'] = pkg.main;
	        pkg.main['default'] = pkg.main['default'] || './';
	        pkg.main = '@main';
	      }

	      for (var q in pkg)
	        if (indexOf.call(packageProperties, q) == -1)
	          warn.call(loader, '"' + q + '" is not a valid package configuration option in package ' + p);

	      extendMeta(loader.packages[prop], pkg);
	    }
	  }

	  for (var c in cfg) {
	    var v = cfg[c];

	    if (c == 'baseURL' || c == 'map' || c == 'packages' || c == 'bundles' || c == 'paths' || c == 'warnings' || c == 'packageConfigPaths' || c == 'loaderErrorStack')
	      continue;

	    if (typeof v != 'object' || v instanceof Array) {
	      loader[c] = v;
	    }
	    else {
	      loader[c] = loader[c] || {};

	      for (var p in v) {
	        // base-level wildcard meta does not normalize to retain catch-all quality
	        if (c == 'meta' && p[0] == '*') {
	          loader[c][p] = v[p];
	        }
	        else if (c == 'meta') {
	          // meta can go through global map, with defaultJSExtensions adding
	          var resolved = coreResolve.call(loader, p);
	          if (loader.defaultJSExtensions && resolved.substr(resolved.length - 3, 3) != '.js' && !isPlain(resolved))
	            resolved += '.js';
	          loader[c][resolved] = v[p];
	        }
	        else if (c == 'depCache') {
	          var defaultJSExtension = loader.defaultJSExtensions && p.substr(p.length - 3, 3) != '.js';
	          var prop = loader.decanonicalize(p);
	          if (defaultJSExtension && prop.substr(prop.length - 3, 3) == '.js')
	            prop = prop.substr(0, prop.length - 3);
	          loader[c][prop] = v[p];
	        }
	        else {
	          loader[c][p] = v[p];
	        }
	      }
	    }
	  }
	};/*
	 * Package Configuration Extension
	 *
	 * Example:
	 *
	 * SystemJS.packages = {
	 *   jquery: {
	 *     main: 'index.js', // when not set, package name is requested directly
	 *     format: 'amd',
	 *     defaultExtension: 'ts', // defaults to 'js', can be set to false
	 *     modules: {
	 *       '*.ts': {
	 *         loader: 'typescript'
	 *       },
	 *       'vendor/sizzle.js': {
	 *         format: 'global'
	 *       }
	 *     },
	 *     map: {
	 *        // map internal require('sizzle') to local require('./vendor/sizzle')
	 *        sizzle: './vendor/sizzle.js',
	 *        // map any internal or external require of 'jquery/vendor/another' to 'another/index.js'
	 *        './vendor/another.js': './another/index.js',
	 *        // test.js / test -> lib/test.js
	 *        './test.js': './lib/test.js',
	 *
	 *        // environment-specific map configurations
	 *        './index.js': {
	 *          '~browser': './index-node.js'
	 *        }
	 *     },
	 *     // allows for setting package-prefixed depCache
	 *     // keys are normalized module names relative to the package itself
	 *     depCache: {
	 *       // import 'package/index.js' loads in parallel package/lib/test.js,package/vendor/sizzle.js
	 *       './index.js': ['./test'],
	 *       './test.js': ['external-dep'],
	 *       'external-dep/path.js': ['./another.js']
	 *     }
	 *   }
	 * };
	 *
	 * Then:
	 *   import 'jquery'                       -> jquery/index.js
	 *   import 'jquery/submodule'             -> jquery/submodule.js
	 *   import 'jquery/submodule.ts'          -> jquery/submodule.ts loaded as typescript
	 *   import 'jquery/vendor/another'        -> another/index.js
	 *
	 * Detailed Behaviours
	 * - main can have a leading "./" can be added optionally
	 * - map and defaultExtension are applied to the main
	 * - defaultExtension adds the extension only if the exact extension is not present
	 * - defaultJSExtensions applies after map when defaultExtension is not set
	 * - if a meta value is available for a module, map and defaultExtension are skipped
	 * - like global map, package map also applies to subpaths (sizzle/x, ./vendor/another/sub)
	 * - condition module map is '@env' module in package or '@system-env' globally
	 * - map targets support conditional interpolation ('./x': './x.#{|env}.js')
	 * - internal package map targets cannot use boolean conditionals
	 *
	 * Package Configuration Loading
	 *
	 * Not all packages may already have their configuration present in the System config
	 * For these cases, a list of packageConfigPaths can be provided, which when matched against
	 * a request, will first request a ".json" file by the package name to derive the package
	 * configuration from. This allows dynamic loading of non-predetermined code, a key use
	 * case in SystemJS.
	 *
	 * Example:
	 *
	 *   SystemJS.packageConfigPaths = ['packages/test/package.json', 'packages/*.json'];
	 *
	 *   // will first request 'packages/new-package/package.json' for the package config
	 *   // before completing the package request to 'packages/new-package/path'
	 *   SystemJS.import('packages/new-package/path');
	 *
	 *   // will first request 'packages/test/package.json' before the main
	 *   SystemJS.import('packages/test');
	 *
	 * When a package matches packageConfigPaths, it will always send a config request for
	 * the package configuration.
	 * The package name itself is taken to be the match up to and including the last wildcard
	 * or trailing slash.
	 * The most specific package config path will be used.
	 * Any existing package configurations for the package will deeply merge with the
	 * package config, with the existing package configurations taking preference.
	 * To opt-out of the package configuration request for a package that matches
	 * packageConfigPaths, use the { configured: true } package config option.
	 *
	 */
	(function() {

	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.packages = {};
	      this.packageConfigPaths = [];
	    };
	  });

	  function getPackage(loader, normalized) {
	    // use most specific package
	    var curPkg, curPkgLen = 0, pkgLen;
	    for (var p in loader.packages) {
	      if (normalized.substr(0, p.length) === p && (normalized.length === p.length || normalized[p.length] === '/')) {
	        pkgLen = p.split('/').length;
	        if (pkgLen > curPkgLen) {
	          curPkg = p;
	          curPkgLen = pkgLen;
	        }
	      }
	    }
	    return curPkg;
	  }

	  function addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions) {
	    // don't apply extensions to folders or if defaultExtension = false
	    if (!subPath || subPath[subPath.length - 1] == '/' || skipExtensions || pkg.defaultExtension === false)
	      return subPath;

	    // NB are you sure about this?
	    // skip if we have interpolation conditional syntax in subPath?
	    if (subPath.match(interpolationRegEx))
	      return subPath;

	    var metaMatch = false;

	    // exact meta or meta with any content after the last wildcard skips extension
	    if (pkg.meta)
	      getMetaMatches(pkg.meta, subPath, function(metaPattern, matchMeta, matchDepth) {
	        if (matchDepth == 0 || metaPattern.lastIndexOf('*') != metaPattern.length - 1)
	          return metaMatch = true;
	      });

	    // exact global meta or meta with any content after the last wildcard skips extension
	    if (!metaMatch && loader.meta)
	      getMetaMatches(loader.meta, pkgName + '/' + subPath, function(metaPattern, matchMeta, matchDepth) {
	        if (matchDepth == 0 || metaPattern.lastIndexOf('*') != metaPattern.length - 1)
	          return metaMatch = true;
	      });

	    if (metaMatch)
	      return subPath;

	    // work out what the defaultExtension is and add if not there already
	    // NB reconsider if default should really be ".js"?
	    var defaultExtension = '.' + (pkg.defaultExtension || 'js');
	    if (subPath.substr(subPath.length - defaultExtension.length) != defaultExtension)
	      return subPath + defaultExtension;
	    else
	      return subPath;
	  }

	  function applyPackageConfigSync(loader, pkg, pkgName, subPath, skipExtensions) {
	    // main
	    if (!subPath) {
	      if (pkg.main)
	        subPath = pkg.main.substr(0, 2) == './' ? pkg.main.substr(2) : pkg.main;
	      // also no submap if name is package itself (import 'pkg' -> 'path/to/pkg.js')
	      else
	        // NB can add a default package main convention here when defaultJSExtensions is deprecated
	        // if it becomes internal to the package then it would no longer be an exit path
	        return pkgName + (loader.defaultJSExtensions ? '.js' : '');
	    }

	    // map config checking without then with extensions
	    if (pkg.map) {
	      var mapPath = './' + subPath;

	      var mapMatch = getMapMatch(pkg.map, mapPath);

	      // we then check map with the default extension adding
	      if (!mapMatch) {
	        mapPath = './' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions);
	        if (mapPath != './' + subPath)
	          mapMatch = getMapMatch(pkg.map, mapPath);
	      }
	      if (mapMatch)
	        return doMapSync(loader, pkg, pkgName, mapMatch, mapPath, skipExtensions);
	    }

	    // normal package resolution
	    return pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions);
	  }

	  function validateMapping(mapMatch, mapped, pkgName) {
	    // disallow internal to subpath maps
	    if (mapMatch == '.')
	      throw new Error('Package ' + pkgName + ' has a map entry for "." which is not permitted.');
	    // disallow internal ./x -> ./x/y recursive maps
	    else if (mapped.substr(0, mapMatch.length) == mapMatch && (mapMatch[mapMatch.length - 1] != '/' && mapped[mapMatch.length] == '/'))
	      throw new Error('Package ' + pkgName + ' has a recursive map for "' + mapMatch + '" which is not permitted.');
	  }

	  function doMapSync(loader, pkg, pkgName, mapMatch, path, skipExtensions) {
	    var mapped = pkg.map[mapMatch];

	    if (typeof mapped == 'object')
	      throw new Error('Synchronous conditional normalization not supported sync normalizing ' + mapMatch + ' in ' + pkgName);

	    validateMapping(mapMatch, mapped, pkgName);

	    // ignore conditionals in sync
	    if (typeof mapped != 'string')
	      mapped = mapMatch = path;

	    validateMapping(mapMatch, mapped, pkgName);

	    // package map to main / base-level
	    if (mapped == '.')
	      mapped = pkgName;

	    // internal package map
	    else if (mapped.substr(0, 2) == './')
	      return pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, mapped.substr(2) + path.substr(mapMatch.length), skipExtensions);
	    
	    // external map reference
	    return loader.normalizeSync(mapped + path.substr(mapMatch.length), pkgName + '/');
	  }

	  function applyPackageConfig(loader, pkg, pkgName, subPath, skipExtensions) {
	    // main
	    if (!subPath) {
	      if (pkg.main)
	        subPath = pkg.main.substr(0, 2) == './' ? pkg.main.substr(2) : pkg.main;
	      // also no submap if name is package itself (import 'pkg' -> 'path/to/pkg.js')
	      else
	        // NB can add a default package main convention here when defaultJSExtensions is deprecated
	        // if it becomes internal to the package then it would no longer be an exit path
	        return Promise.resolve(pkgName + (loader.defaultJSExtensions ? '.js' : ''));
	    }

	    // map config checking without then with extensions
	    var mapPath, mapMatch;

	    if (pkg.map) {
	      mapPath = './' + subPath;
	      mapMatch = getMapMatch(pkg.map, mapPath);

	      // we then check map with the default extension adding
	      if (!mapMatch) {
	        mapPath = './' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions);
	        if (mapPath != './' + subPath)
	          mapMatch = getMapMatch(pkg.map, mapPath);
	      }
	    }

	    return (mapMatch ? doMap(loader, pkg, pkgName, mapMatch, mapPath, skipExtensions) : Promise.resolve())
	    .then(function(mapped) {
	      if (mapped)
	        return Promise.resolve(mapped);

	      // normal package resolution / fallback resolution for no conditional match
	      return Promise.resolve(pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions));
	    });
	  }

	  function doStringMap(loader, pkg, pkgName, mapMatch, mapped, path, skipExtensions) {
	    // NB the interpolation cases should strictly skip subsequent interpolation

	    // package map to main / base-level
	    if (mapped == '.')
	      mapped = pkgName;
	    
	    // internal package map
	    else if (mapped.substr(0, 2) == './')
	      return Promise.resolve(pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, mapped.substr(2) + path.substr(mapMatch.length), skipExtensions))
	      .then(function(name) {
	        return interpolateConditional.call(loader, name, pkgName + '/');
	      });
	    
	    // external map reference
	    return loader.normalize(mapped + path.substr(mapMatch.length), pkgName + '/');
	  }

	  function doMap(loader, pkg, pkgName, mapMatch, path, skipExtensions) {
	    var mapped = pkg.map[mapMatch];

	    if (typeof mapped == 'string') {
	      validateMapping(mapMatch, mapped, pkgName);
	      return doStringMap(loader, pkg, pkgName, mapMatch, mapped, path, skipExtensions);
	    }

	    // we use a special conditional syntax to allow the builder to handle conditional branch points further
	    if (loader.builder)
	      return Promise.resolve(pkgName + '/#:' + path);

	    // map object -> conditional map
	    return loader['import'](pkg.map['@env'] || '@system-env', pkgName)
	    .then(function(env) {
	      // first map condition to match is used
	      for (var e in mapped) {
	        var negate = e[0] == '~';

	        var value = readMemberExpression(negate ? e.substr(1) : e, env);

	        if (!negate && value || negate && !value)
	          return mapped[e];
	      }
	    })
	    .then(function(mapped) {
	      if (mapped) {
	        if (typeof mapped != 'string')
	          throw new Error('Unable to map a package conditional to a package conditional.');
	        validateMapping(mapMatch, mapped, pkgName);
	        return doStringMap(loader, pkg, pkgName, mapMatch, mapped, path, skipExtensions);
	      }

	      // no environment match -> fallback to original subPath by returning undefined
	    });
	  }

	  // normalizeSync = decanonicalize + package resolution
	  SystemJSLoader.prototype.normalizeSync = SystemJSLoader.prototype.decanonicalize = SystemJSLoader.prototype.normalize;

	  // decanonicalize must JUST handle package defaultExtension: false case when defaultJSExtensions is set
	  // to be deprecated!
	  hook('decanonicalize', function(decanonicalize) {
	    return function(name, parentName) {
	      if (this.builder)
	        return decanonicalize.call(this, name, parentName, true);

	      var decanonicalized = decanonicalize.call(this, name, parentName);

	      if (!this.defaultJSExtensions)
	        return decanonicalized;
	    
	      var pkgName = getPackage(this, decanonicalized);

	      var pkg = this.packages[pkgName];
	      var defaultExtension = pkg && pkg.defaultExtension;

	      if (defaultExtension == undefined && pkg && pkg.meta)
	        getMetaMatches(pkg.meta, decanonicalized.substr(pkgName), function(metaPattern, matchMeta, matchDepth) {
	          if (matchDepth == 0 || metaPattern.lastIndexOf('*') != metaPattern.length - 1) {
	            defaultExtension = false;
	            return true;
	          }
	        });
	      
	      if ((defaultExtension === false || defaultExtension && defaultExtension != '.js') && name.substr(name.length - 3, 3) != '.js' && decanonicalized.substr(decanonicalized.length - 3, 3) == '.js')
	        decanonicalized = decanonicalized.substr(0, decanonicalized.length - 3);

	      return decanonicalized;
	    };
	  });

	  hook('normalizeSync', function(normalizeSync) {
	    return function(name, parentName, isPlugin) {
	      warn.call(this, 'SystemJS.normalizeSync has been deprecated for SystemJS.decanonicalize.');

	      var loader = this;
	      isPlugin = isPlugin === true;

	      // apply contextual package map first
	      // (we assume the parent package config has already been loaded)
	      if (parentName)
	        var parentPackageName = getPackage(loader, parentName) ||
	            loader.defaultJSExtensions && parentName.substr(parentName.length - 3, 3) == '.js' &&
	            getPackage(loader, parentName.substr(0, parentName.length - 3));

	      var parentPackage = parentPackageName && loader.packages[parentPackageName];

	      // ignore . since internal maps handled by standard package resolution
	      if (parentPackage && name[0] != '.') {
	        var parentMap = parentPackage.map;
	        var parentMapMatch = parentMap && getMapMatch(parentMap, name);

	        if (parentMapMatch && typeof parentMap[parentMapMatch] == 'string')
	          return doMapSync(loader, parentPackage, parentPackageName, parentMapMatch, name, isPlugin);
	      }

	      var defaultJSExtension = loader.defaultJSExtensions && name.substr(name.length - 3, 3) != '.js';

	      // apply map, core, paths, contextual package map
	      var normalized = normalizeSync.call(loader, name, parentName);

	      // undo defaultJSExtension
	      if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) != '.js')
	        defaultJSExtension = false;
	      if (defaultJSExtension)
	        normalized = normalized.substr(0, normalized.length - 3);

	      var pkgConfigMatch = getPackageConfigMatch(loader, normalized);
	      var pkgName = pkgConfigMatch && pkgConfigMatch.packageName || getPackage(loader, normalized);

	      if (!pkgName)
	        return normalized + (defaultJSExtension ? '.js' : '');

	      var subPath = normalized.substr(pkgName.length + 1);

	      return applyPackageConfigSync(loader, loader.packages[pkgName] || {}, pkgName, subPath, isPlugin);
	    };
	  });

	  hook('normalize', function(normalize) {
	    return function(name, parentName, isPlugin) {
	      var loader = this;
	      isPlugin = isPlugin === true;

	      return Promise.resolve()
	      .then(function() {
	        // apply contextual package map first
	        // (we assume the parent package config has already been loaded)
	        if (parentName)
	          var parentPackageName = getPackage(loader, parentName) ||
	              loader.defaultJSExtensions && parentName.substr(parentName.length - 3, 3) == '.js' &&
	              getPackage(loader, parentName.substr(0, parentName.length - 3));

	        var parentPackage = parentPackageName && loader.packages[parentPackageName];

	        // ignore . since internal maps handled by standard package resolution
	        if (parentPackage && name.substr(0, 2) != './') {
	          var parentMap = parentPackage.map;
	          var parentMapMatch = parentMap && getMapMatch(parentMap, name);

	          if (parentMapMatch)
	            return doMap(loader, parentPackage, parentPackageName, parentMapMatch, name, isPlugin);
	        }

	        return Promise.resolve();
	      })
	      .then(function(mapped) {
	        if (mapped)
	          return mapped;

	        var defaultJSExtension = loader.defaultJSExtensions && name.substr(name.length - 3, 3) != '.js';

	        // apply map, core, paths, contextual package map
	        var normalized = normalize.call(loader, name, parentName);

	        // undo defaultJSExtension
	        if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) != '.js')
	          defaultJSExtension = false;
	        if (defaultJSExtension)
	          normalized = normalized.substr(0, normalized.length - 3);

	        var pkgConfigMatch = getPackageConfigMatch(loader, normalized);
	        var pkgName = pkgConfigMatch && pkgConfigMatch.packageName || getPackage(loader, normalized);

	        if (!pkgName)
	          return Promise.resolve(normalized + (defaultJSExtension ? '.js' : ''));

	        var pkg = loader.packages[pkgName];

	        // if package is already configured or not a dynamic config package, use existing package config
	        var isConfigured = pkg && (pkg.configured || !pkgConfigMatch);
	        return (isConfigured ? Promise.resolve(pkg) : loadPackageConfigPath(loader, pkgName, pkgConfigMatch.configPath))
	        .then(function(pkg) {
	          var subPath = normalized.substr(pkgName.length + 1);

	          return applyPackageConfig(loader, pkg, pkgName, subPath, isPlugin);
	        });
	      });
	    };
	  });

	  // check if the given normalized name matches a packageConfigPath
	  // if so, loads the config
	  var packageConfigPaths = {};

	  // data object for quick checks against package paths
	  function createPkgConfigPathObj(path) {
	    var lastWildcard = path.lastIndexOf('*');
	    var length = Math.max(lastWildcard + 1, path.lastIndexOf('/'));
	    return {
	      length: length,
	      regEx: new RegExp('^(' + path.substr(0, length).replace(/[.+?^${}()|[\]\\]/g, '\\$&').replace(/\*/g, '[^\\/]+') + ')(\\/|$)'),
	      wildcard: lastWildcard != -1
	    };
	  }

	  // most specific match wins
	  function getPackageConfigMatch(loader, normalized) {
	    var pkgName, exactMatch = false, configPath;
	    for (var i = 0; i < loader.packageConfigPaths.length; i++) {
	      var packageConfigPath = loader.packageConfigPaths[i];
	      var p = packageConfigPaths[packageConfigPath] || (packageConfigPaths[packageConfigPath] = createPkgConfigPathObj(packageConfigPath));
	      if (normalized.length < p.length)
	        continue;
	      var match = normalized.match(p.regEx);
	      if (match && (!pkgName || (!(exactMatch && p.wildcard) && pkgName.length < match[1].length))) {
	        pkgName = match[1];
	        exactMatch = !p.wildcard;
	        configPath = pkgName + packageConfigPath.substr(p.length);
	      }
	    }

	    if (!pkgName)
	      return;

	    return {
	      packageName: pkgName,
	      configPath: configPath
	    };
	  }

	  function loadPackageConfigPath(loader, pkgName, pkgConfigPath) {
	    var configLoader = loader.pluginLoader || loader;

	    // NB remove this when json is default
	    (configLoader.meta[pkgConfigPath] = configLoader.meta[pkgConfigPath] || {}).format = 'json';
	    configLoader.meta[pkgConfigPath].loader = null;

	    return configLoader.load(pkgConfigPath)
	    .then(function() {
	      var cfg = configLoader.get(pkgConfigPath)['default'];

	      // support "systemjs" prefixing
	      if (cfg.systemjs)
	        cfg = cfg.systemjs;

	      // modules backwards compatibility
	      if (cfg.modules) {
	        cfg.meta = cfg.modules;
	        warn.call(loader, 'Package config file ' + pkgConfigPath + ' is configured with "modules", which is deprecated as it has been renamed to "meta".');
	      }

	      // remove any non-system properties if generic config file (eg package.json)
	      for (var p in cfg) {
	        if (indexOf.call(packageProperties, p) == -1)
	          delete cfg[p];
	      }

	      // deeply-merge (to first level) config with any existing package config
	      var pkg = loader.packages[pkgName] = loader.packages[pkgName] || {};
	      extendMeta(pkg, cfg, true);

	      // support external depCache
	      if (cfg.depCache) {
	        for (var d in cfg.depCache) {
	          var dNormalized;

	          if (d.substr(0, 2) == './')
	            dNormalized = pkgName + '/' + d.substr(2);
	          else
	            dNormalized = coreResolve.call(loader, d);
	          loader.depCache[dNormalized] = (loader.depCache[dNormalized] || []).concat(cfg.depCache[d]);
	        }
	        delete cfg.depCache;
	      }

	      // main object becomes main map
	      if (typeof pkg.main == 'object') {
	        pkg.map = pkg.map || {};
	        pkg.map['./@main'] = pkg.main;
	        pkg.main['default'] = pkg.main['default'] || './';
	        pkg.main = '@main';
	      }

	      return pkg;
	    });
	  }

	  function getMetaMatches(pkgMeta, subPath, matchFn) {
	    // wildcard meta
	    var meta = {};
	    var wildcardIndex;
	    for (var module in pkgMeta) {
	      // allow meta to start with ./ for flexibility
	      var dotRel = module.substr(0, 2) == './' ? './' : '';
	      if (dotRel)
	        module = module.substr(2);

	      wildcardIndex = module.indexOf('*');
	      if (wildcardIndex === -1)
	        continue;

	      if (module.substr(0, wildcardIndex) == subPath.substr(0, wildcardIndex)
	          && module.substr(wildcardIndex + 1) == subPath.substr(subPath.length - module.length + wildcardIndex + 1)) {
	        // alow match function to return true for an exit path
	        if (matchFn(module, pkgMeta[dotRel + module], module.split('/').length))
	          return;
	      }
	    }
	    // exact meta
	    var exactMeta = pkgMeta[subPath] && pkgMeta.hasOwnProperty && pkgMeta.hasOwnProperty(subPath) ? pkgMeta[subPath] : pkgMeta['./' + subPath];
	    if (exactMeta)
	      matchFn(exactMeta, exactMeta, 0);
	  }

	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      return Promise.resolve(locate.call(this, load))
	      .then(function(address) {
	        var pkgName = getPackage(loader, load.name);
	        if (pkgName) {
	          var pkg = loader.packages[pkgName];
	          var subPath = load.name.substr(pkgName.length + 1);

	          // format
	          if (pkg.format)
	            load.metadata.format = load.metadata.format || pkg.format;

	          var meta = {};
	          if (pkg.meta) {
	            var bestDepth = 0;

	            // NB support a main shorthand in meta here?
	            getMetaMatches(pkg.meta, subPath, function(metaPattern, matchMeta, matchDepth) {
	              if (matchDepth > bestDepth)
	                bestDepth = matchDepth;
	              extendMeta(meta, matchMeta, matchDepth && bestDepth > matchDepth);
	            });

	            extendMeta(load.metadata, meta);
	          }
	        }

	        return address;
	      });
	    };
	  });

	})();
	/*
	 * Script tag fetch
	 *
	 * When load.metadata.scriptLoad is true, we load via script tag injection.
	 */
	(function() {

	  if (typeof document != 'undefined')
	    var head = document.getElementsByTagName('head')[0];

	  var curSystem;
	  var curRequire;

	  // if doing worker executing, this is set to the load record being executed
	  var workerLoad = null;
	  
	  // interactive mode handling method courtesy RequireJS
	  var ieEvents = head && (function() {
	    var s = document.createElement('script');
	    var isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]';
	    return s.attachEvent && !(s.attachEvent.toString && s.attachEvent.toString().indexOf('[native code') < 0) && !isOpera;
	  })();

	  // IE interactive-only part
	  // we store loading scripts array as { script: <script>, load: {...} }
	  var interactiveLoadingScripts = [];
	  var interactiveScript;
	  function getInteractiveScriptLoad() {
	    if (interactiveScript && interactiveScript.script.readyState === 'interactive')
	      return interactiveScript.load;

	    for (var i = 0; i < interactiveLoadingScripts.length; i++)
	      if (interactiveLoadingScripts[i].script.readyState == 'interactive') {
	        interactiveScript = interactiveLoadingScripts[i];
	        return interactiveScript.load;
	      }
	  }
	  
	  // System.register, System.registerDynamic, AMD define pipeline
	  // this is called by the above methods when they execute
	  // we then run the reduceRegister_ collection function either immediately
	  // if we are in IE and know the currently executing script (interactive)
	  // or later if we need to wait for the synchronous load callback to know the script
	  var loadingCnt = 0;
	  var registerQueue = [];
	  hook('pushRegister_', function(pushRegister) {
	    return function(register) {
	      // if using eval-execution then skip
	      if (pushRegister.call(this, register))
	        return false;

	      // if using worker execution, then we're done
	      if (workerLoad)
	        this.reduceRegister_(workerLoad, register);

	      // detect if we know the currently executing load (IE)
	      // if so, immediately call reduceRegister
	      else if (ieEvents)
	        this.reduceRegister_(getInteractiveScriptLoad(), register);

	      // otherwise, add to our execution queue
	      // to call reduceRegister on sync script load event
	      else if (loadingCnt)
	        registerQueue.push(register);

	      // if we're not currently loading anything though
	      // then do the reduction against a null load
	      // (out of band named define or named register)
	      // note even in non-script environments, this catch is used
	      else
	        this.reduceRegister_(null, register);

	      return true;
	    };
	  });

	  function webWorkerImport(loader, load) {
	    return new Promise(function(resolve, reject) {
	      if (load.metadata.integrity)
	        reject(new Error('Subresource integrity checking is not supported in web workers.'));

	      workerLoad = load;
	      try {
	        importScripts(load.address);
	      }
	      catch(e) {
	        workerLoad = null;
	        reject(e);
	      }
	      workerLoad = null;

	      // if nothing registered, then something went wrong
	      if (!load.metadata.entry)
	        reject(new Error(load.address + ' did not call System.register or AMD define'));

	      resolve('');
	    });
	  }

	  // override fetch to use script injection
	  hook('fetch', function(fetch) {
	    return function(load) {
	      var loader = this;

	      if (load.metadata.format == 'json' || !load.metadata.scriptLoad || (!isBrowser && !isWorker))
	        return fetch.call(this, load);

	      if (isWorker)
	        return webWorkerImport(loader, load);

	      return new Promise(function(resolve, reject) {
	        var s = document.createElement('script');
	        
	        s.async = true;

	        if (load.metadata.crossOrigin)
	          s.crossOrigin = load.metadata.crossOrigin;

	        if (load.metadata.integrity)
	          s.setAttribute('integrity', load.metadata.integrity);

	        if (ieEvents) {
	          s.attachEvent('onreadystatechange', complete);
	          interactiveLoadingScripts.push({
	            script: s,
	            load: load
	          });
	        }
	        else {
	          s.addEventListener('load', complete, false);
	          s.addEventListener('error', error, false);
	        }

	        loadingCnt++;

	        curSystem = __global.System;
	        curRequire = __global.require;

	        s.src = load.address;
	        head.appendChild(s);

	        function complete(evt) {
	          if (s.readyState && s.readyState != 'loaded' && s.readyState != 'complete')
	            return;

	          loadingCnt--;

	          // complete call is sync on execution finish
	          // (in ie already done reductions)
	          if (!load.metadata.entry && !registerQueue.length) {
	            loader.reduceRegister_(load);
	          }
	          else if (!ieEvents) {
	            for (var i = 0; i < registerQueue.length; i++)
	              loader.reduceRegister_(load, registerQueue[i]);
	            registerQueue = [];
	          }

	          cleanup();

	          // if nothing registered, then something went wrong
	          if (!load.metadata.entry && !load.metadata.bundle)
	            reject(new Error(load.name + ' did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.'));

	          resolve('');
	        }

	        function error(evt) {
	          cleanup();
	          reject(new Error('Unable to load script ' + load.address));
	        }

	        function cleanup() {
	          __global.System = curSystem;
	          __global.require = curRequire;

	          if (s.detachEvent) {
	            s.detachEvent('onreadystatechange', complete);
	            for (var i = 0; i < interactiveLoadingScripts.length; i++)
	              if (interactiveLoadingScripts[i].script == s) {
	                if (interactiveScript && interactiveScript.script == s)
	                  interactiveScript = null;
	                interactiveLoadingScripts.splice(i, 1);
	              }
	          }
	          else {
	            s.removeEventListener('load', complete, false);
	            s.removeEventListener('error', error, false);
	          }

	          head.removeChild(s);
	        }
	      });
	    };
	  });
	})();
	/*
	 * Instantiate registry extension
	 *
	 * Supports Traceur System.register 'instantiate' output for loading ES6 as ES5.
	 *
	 * - Creates the loader.register function
	 * - Also supports metadata.format = 'register' in instantiate for anonymous register modules
	 * - Also supports metadata.deps, metadata.execute and metadata.executingRequire
	 *     for handling dynamic modules alongside register-transformed ES6 modules
	 *
	 *
	 * The code here replicates the ES6 linking groups algorithm to ensure that
	 * circular ES6 compiled into System.register can work alongside circular AMD 
	 * and CommonJS, identically to the actual ES6 loader.
	 *
	 */


	/*
	 * Registry side table entries in loader.defined
	 * Registry Entry Contains:
	 *    - name
	 *    - deps 
	 *    - declare for declarative modules
	 *    - execute for dynamic modules, different to declarative execute on module
	 *    - executingRequire indicates require drives execution for circularity of dynamic modules
	 *    - declarative optional boolean indicating which of the above
	 *
	 * Can preload modules directly on SystemJS.defined['my/module'] = { deps, execute, executingRequire }
	 *
	 * Then the entry gets populated with derived information during processing:
	 *    - normalizedDeps derived from deps, created in instantiate
	 *    - groupIndex used by group linking algorithm
	 *    - evaluated indicating whether evaluation has happend
	 *    - module the module record object, containing:
	 *      - exports actual module exports
	 *
	 *    For dynamic we track the es module with:
	 *    - esModule actual es module value
	 *    - esmExports whether to extend the esModule with named exports
	 *      
	 *    Then for declarative only we track dynamic bindings with the 'module' records:
	 *      - name
	 *      - exports
	 *      - setters declarative setter functions
	 *      - dependencies, module records of dependencies
	 *      - importers, module records of dependents
	 *
	 * After linked and evaluated, entries are removed, declarative module records remain in separate
	 * module binding table
	 *
	 */

	var leadingCommentAndMetaRegEx = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;
	function detectRegisterFormat(source) {
	  var leadingCommentAndMeta = source.match(leadingCommentAndMetaRegEx);
	  return leadingCommentAndMeta && source.substr(leadingCommentAndMeta[0].length, 15) == 'System.register';
	}

	function createEntry() {
	  return {
	    name: null,
	    deps: null,
	    originalIndices: null,
	    declare: null,
	    execute: null,
	    executingRequire: false,
	    declarative: false,
	    normalizedDeps: null,
	    groupIndex: null,
	    evaluated: false,
	    module: null,
	    esModule: null,
	    esmExports: false
	  };
	}

	(function() {

	  /*
	   * There are two variations of System.register:
	   * 1. System.register for ES6 conversion (2-3 params) - System.register([name, ]deps, declare)
	   *    see https://github.com/ModuleLoader/es6-module-loader/wiki/System.register-Explained
	   *
	   * 2. System.registerDynamic for dynamic modules (3-4 params) - System.registerDynamic([name, ]deps, executingRequire, execute)
	   * the true or false statement 
	   *
	   * this extension implements the linking algorithm for the two variations identical to the spec
	   * allowing compiled ES6 circular references to work alongside AMD and CJS circular references.
	   *
	   */
	  SystemJSLoader.prototype.register = function(name, deps, declare) {
	    if (typeof name != 'string') {
	      declare = deps;
	      deps = name;
	      name = null;
	    }

	    // dynamic backwards-compatibility
	    // can be deprecated eventually
	    if (typeof declare == 'boolean')
	      return this.registerDynamic.apply(this, arguments);

	    var entry = createEntry();
	    // ideally wouldn't apply map config to bundle names but 
	    // dependencies go through map regardless so we can't restrict
	    // could reconsider in shift to new spec
	    entry.name = name && (this.decanonicalize || this.normalize).call(this, name);
	    entry.declarative = true;
	    entry.deps = deps;
	    entry.declare = declare;

	    this.pushRegister_({
	      amd: false,
	      entry: entry
	    });
	  };
	  SystemJSLoader.prototype.registerDynamic = function(name, deps, declare, execute) {
	    if (typeof name != 'string') {
	      execute = declare;
	      declare = deps;
	      deps = name;
	      name = null;
	    }

	    // dynamic
	    var entry = createEntry();
	    entry.name = name && (this.decanonicalize || this.normalize).call(this, name);
	    entry.deps = deps;
	    entry.execute = execute;
	    entry.executingRequire = declare;

	    this.pushRegister_({
	      amd: false,
	      entry: entry
	    });
	  };
	  hook('reduceRegister_', function() {
	    return function(load, register) {
	      if (!register)
	        return;

	      var entry = register.entry;
	      var curMeta = load && load.metadata;

	      // named register
	      if (entry.name) {
	        if (!(entry.name in this.defined))
	          this.defined[entry.name] = entry;

	        if (curMeta)
	          curMeta.bundle = true;
	      }
	      // anonymous register
	      if (!entry.name || load && entry.name == load.name) {
	        if (!curMeta)
	          throw new TypeError('Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.');
	        if (curMeta.entry) {
	          if (curMeta.format == 'register')
	            throw new Error('Multiple anonymous System.register calls in module ' + load.name + '. If loading a bundle, ensure all the System.register calls are named.');
	          else
	            throw new Error('Module ' + load.name + ' interpreted as ' + curMeta.format + ' module format, but called System.register.');
	        }
	        if (!curMeta.format)
	          curMeta.format = 'register';
	        curMeta.entry = entry;
	      }
	    };
	  });

	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);

	      this.defined = {};
	      this._loader.moduleRecords = {};
	    };
	  });

	  function buildGroups(entry, loader, groups) {
	    groups[entry.groupIndex] = groups[entry.groupIndex] || [];

	    if (indexOf.call(groups[entry.groupIndex], entry) != -1)
	      return;

	    groups[entry.groupIndex].push(entry);

	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      var depEntry = loader.defined[depName];
	      
	      // not in the registry means already linked / ES6
	      if (!depEntry || depEntry.evaluated)
	        continue;
	      
	      // now we know the entry is in our unlinked linkage group
	      var depGroupIndex = entry.groupIndex + (depEntry.declarative != entry.declarative);

	      // the group index of an entry is always the maximum
	      if (depEntry.groupIndex === null || depEntry.groupIndex < depGroupIndex) {
	        
	        // if already in a group, remove from the old group
	        if (depEntry.groupIndex !== null) {
	          groups[depEntry.groupIndex].splice(indexOf.call(groups[depEntry.groupIndex], depEntry), 1);

	          // if the old group is empty, then we have a mixed depndency cycle
	          if (groups[depEntry.groupIndex].length == 0)
	            throw new Error("Mixed dependency cycle detected");
	        }

	        depEntry.groupIndex = depGroupIndex;
	      }

	      buildGroups(depEntry, loader, groups);
	    }
	  }

	  function link(name, loader) {
	    var startEntry = loader.defined[name];

	    // skip if already linked
	    if (startEntry.module)
	      return;

	    startEntry.groupIndex = 0;

	    var groups = [];

	    buildGroups(startEntry, loader, groups);

	    var curGroupDeclarative = !!startEntry.declarative == groups.length % 2;
	    for (var i = groups.length - 1; i >= 0; i--) {
	      var group = groups[i];
	      for (var j = 0; j < group.length; j++) {
	        var entry = group[j];

	        // link each group
	        if (curGroupDeclarative)
	          linkDeclarativeModule(entry, loader);
	        else
	          linkDynamicModule(entry, loader);
	      }
	      curGroupDeclarative = !curGroupDeclarative; 
	    }
	  }

	  // module binding records
	  function ModuleRecord() {}
	  defineProperty(ModuleRecord, 'toString', {
	    value: function() {
	      return 'Module';
	    }
	  });

	  function getOrCreateModuleRecord(name, moduleRecords) {
	    return moduleRecords[name] || (moduleRecords[name] = {
	      name: name,
	      dependencies: [],
	      exports: new ModuleRecord(), // start from an empty module and extend
	      importers: []
	    });
	  }

	  function linkDeclarativeModule(entry, loader) {
	    // only link if already not already started linking (stops at circular)
	    if (entry.module)
	      return;

	    var moduleRecords = loader._loader.moduleRecords;
	    var module = entry.module = getOrCreateModuleRecord(entry.name, moduleRecords);
	    var exports = entry.module.exports;

	    var declaration = entry.declare.call(__global, function(name, value) {
	      module.locked = true;

	      if (typeof name == 'object') {
	        for (var p in name)
	          exports[p] = name[p];
	      }
	      else {
	        exports[name] = value;
	      }

	      for (var i = 0, l = module.importers.length; i < l; i++) {
	        var importerModule = module.importers[i];
	        if (!importerModule.locked) {
	          var importerIndex = indexOf.call(importerModule.dependencies, module);
	          importerModule.setters[importerIndex](exports);
	        }
	      }

	      module.locked = false;
	      return value;
	    }, { id: entry.name });
	    
	    module.setters = declaration.setters;
	    module.execute = declaration.execute;

	    if (!module.setters || !module.execute) {
	      throw new TypeError('Invalid System.register form for ' + entry.name);
	    }

	    // now link all the module dependencies
	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      var depEntry = loader.defined[depName];
	      var depModule = moduleRecords[depName];

	      // work out how to set depExports based on scenarios...
	      var depExports;

	      if (depModule) {
	        depExports = depModule.exports;
	      }
	      // dynamic, already linked in our registry
	      else if (depEntry && !depEntry.declarative) {
	        depExports = depEntry.esModule;
	      }
	      // in the loader registry
	      else if (!depEntry) {
	        depExports = loader.get(depName);
	      }
	      // we have an entry -> link
	      else {
	        linkDeclarativeModule(depEntry, loader);
	        depModule = depEntry.module;
	        depExports = depModule.exports;
	      }

	      // only declarative modules have dynamic bindings
	      if (depModule && depModule.importers) {
	        depModule.importers.push(module);
	        module.dependencies.push(depModule);
	      }
	      else {
	        module.dependencies.push(null);
	      }
	      
	      // run setters for all entries with the matching dependency name
	      var originalIndices = entry.originalIndices[i];
	      for (var j = 0, len = originalIndices.length; j < len; ++j) {
	        var index = originalIndices[j];
	        if (module.setters[index]) {
	          module.setters[index](depExports);
	        }
	      }
	    }
	  }

	  // An analog to loader.get covering execution of all three layers (real declarative, simulated declarative, simulated dynamic)
	  function getModule(name, loader) {
	    var exports;
	    var entry = loader.defined[name];

	    if (!entry) {
	      exports = loader.get(name);
	      if (!exports)
	        throw new Error('Unable to load dependency ' + name + '.');
	    }

	    else {
	      if (entry.declarative)
	        ensureEvaluated(name, [], loader);
	    
	      else if (!entry.evaluated)
	        linkDynamicModule(entry, loader);

	      exports = entry.module.exports;
	    }

	    if ((!entry || entry.declarative) && exports && exports.__useDefault)
	      return exports['default'];
	    
	    return exports;
	  }

	  function linkDynamicModule(entry, loader) {
	    if (entry.module)
	      return;

	    var exports = {};

	    var module = entry.module = { exports: exports, id: entry.name };

	    // AMD requires execute the tree first
	    if (!entry.executingRequire) {
	      for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	        var depName = entry.normalizedDeps[i];
	        // we know we only need to link dynamic due to linking algorithm
	        var depEntry = loader.defined[depName];
	        if (depEntry)
	          linkDynamicModule(depEntry, loader);
	      }
	    }

	    // now execute
	    entry.evaluated = true;
	    var output = entry.execute.call(__global, function(name) {
	      for (var i = 0, l = entry.deps.length; i < l; i++) {
	        if (entry.deps[i] != name)
	          continue;
	        return getModule(entry.normalizedDeps[i], loader);
	      }
	      // try and normalize the dependency to see if we have another form
	      var nameNormalized = loader.normalizeSync(name, entry.name);
	      if (indexOf.call(entry.normalizedDeps, nameNormalized) != -1)
	        return getModule(nameNormalized, loader);

	      throw new Error('Module ' + name + ' not declared as a dependency of ' + entry.name);
	    }, exports, module);
	    
	    if (output)
	      module.exports = output;

	    // create the esModule object, which allows ES6 named imports of dynamics
	    exports = module.exports;

	    // __esModule flag treats as already-named
	    if (exports && (exports.__esModule || exports instanceof Module))
	      entry.esModule = exports;
	    // set module as 'default' export, then fake named exports by iterating properties
	    else if (entry.esmExports && exports !== __global)
	      entry.esModule = getESModule(exports);
	    // just use the 'default' export
	    else
	      entry.esModule = { 'default': exports };
	  }

	  /*
	   * Given a module, and the list of modules for this current branch,
	   *  ensure that each of the dependencies of this module is evaluated
	   *  (unless one is a circular dependency already in the list of seen
	   *  modules, in which case we execute it)
	   *
	   * Then we evaluate the module itself depth-first left to right 
	   * execution to match ES6 modules
	   */
	  function ensureEvaluated(moduleName, seen, loader) {
	    var entry = loader.defined[moduleName];

	    // if already seen, that means it's an already-evaluated non circular dependency
	    if (!entry || entry.evaluated || !entry.declarative)
	      return;

	    // this only applies to declarative modules which late-execute

	    seen.push(moduleName);

	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      if (indexOf.call(seen, depName) == -1) {
	        if (!loader.defined[depName])
	          loader.get(depName);
	        else
	          ensureEvaluated(depName, seen, loader);
	      }
	    }

	    if (entry.evaluated)
	      return;

	    entry.evaluated = true;
	    entry.module.execute.call(__global);
	  }

	  // override the delete method to also clear the register caches
	  hook('delete', function(del) {
	    return function(name) {
	      delete this._loader.moduleRecords[name];
	      delete this.defined[name];
	      return del.call(this, name);
	    };
	  });

	  hook('fetch', function(fetch) {
	    return function(load) {
	      if (this.defined[load.name]) {
	        load.metadata.format = 'defined';
	        return '';
	      }

	      load.metadata.deps = load.metadata.deps || [];
	      
	      return fetch.call(this, load);
	    };
	  });

	  hook('translate', function(translate) {
	    // we run the meta detection here (register is after meta)
	    return function(load) {
	      load.metadata.deps = load.metadata.deps || [];
	      return Promise.resolve(translate.call(this, load)).then(function(source) {
	        // run detection for register format
	        if (load.metadata.format == 'register' || !load.metadata.format && detectRegisterFormat(load.source))
	          load.metadata.format = 'register';
	        return source;
	      });
	    };
	  });

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      if (load.metadata.format == 'detect')
	        load.metadata.format = undefined;

	      // assumes previous instantiate is sync
	      // (core json support)
	      instantiate.call(this, load);

	      var loader = this;

	      var entry;

	      // first we check if this module has already been defined in the registry
	      if (loader.defined[load.name]) {
	        entry = loader.defined[load.name];
	        // don't support deps for ES modules
	        if (!entry.declarative)
	          entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // picked up already by an anonymous System.register script injection
	      // or via the dynamic formats
	      else if (load.metadata.entry) {
	        entry = load.metadata.entry;
	        entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // Contains System.register calls
	      // (dont run bundles in the builder)
	      else if (!(loader.builder && load.metadata.bundle) 
	          && (load.metadata.format == 'register' || load.metadata.format == 'esm' || load.metadata.format == 'es6')) {
	        
	        if (typeof __exec != 'undefined')
	          __exec.call(loader, load);

	        if (!load.metadata.entry && !load.metadata.bundle)
	          throw new Error(load.name + ' detected as ' + load.metadata.format + ' but didn\'t execute.');

	        entry = load.metadata.entry;

	        // support metadata deps for System.register
	        if (entry && load.metadata.deps)
	          entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // named bundles are just an empty module
	      if (!entry) {
	        entry = createEntry();
	        entry.deps = load.metadata.deps;
	        entry.execute = function() {};
	      }

	      // place this module onto defined for circular references
	      loader.defined[load.name] = entry;
	      
	      var grouped = group(entry.deps);
	      
	      entry.deps = grouped.names;
	      entry.originalIndices = grouped.indices;
	      entry.name = load.name;
	      entry.esmExports = load.metadata.esmExports !== false;

	      // first, normalize all dependencies
	      var normalizePromises = [];
	      for (var i = 0, l = entry.deps.length; i < l; i++)
	        normalizePromises.push(Promise.resolve(loader.normalize(entry.deps[i], load.name)));

	      return Promise.all(normalizePromises).then(function(normalizedDeps) {

	        entry.normalizedDeps = normalizedDeps;

	        return {
	          deps: entry.deps,
	          execute: function() {
	            // recursively ensure that the module and all its 
	            // dependencies are linked (with dependency group handling)
	            link(load.name, loader);

	            // now handle dependency execution in correct order
	            ensureEvaluated(load.name, [], loader);

	            // remove from the registry
	            loader.defined[load.name] = undefined;

	            // return the defined module object
	            return loader.newModule(entry.declarative ? entry.module.exports : entry.esModule);
	          }
	        };
	      });
	    };
	  });
	})();


	function getGlobalValue(exports) {
	  if (typeof exports == 'string')
	    return readMemberExpression(exports, __global);

	  if (!(exports instanceof Array))
	    throw new Error('Global exports must be a string or array.');

	  var globalValue = {};
	  var first = true;
	  for (var i = 0; i < exports.length; i++) {
	    var val = readMemberExpression(exports[i], __global);
	    if (first) {
	      globalValue['default'] = val;
	      first = false;
	    }
	    globalValue[exports[i].split('.').pop()] = val;
	  }
	  return globalValue;
	}

	hook('reduceRegister_', function(reduceRegister) {
	  return function(load, register) {
	    if (register || !load.metadata.exports)
	      return reduceRegister.call(this, load, register);

	    load.metadata.format = 'global';
	    var entry = load.metadata.entry = createEntry();
	    entry.deps = load.metadata.deps;
	    var globalValue = getGlobalValue(load.metadata.exports);
	    entry.execute = function() {
	      return globalValue;
	    };
	  };
	});

	hookConstructor(function(constructor) {
	  return function() {
	    var loader = this;
	    constructor.call(loader);

	    var hasOwnProperty = Object.prototype.hasOwnProperty;

	    // bare minimum ignores
	    var ignoredGlobalProps = ['_g', 'sessionStorage', 'localStorage', 'clipboardData', 'frames', 'frameElement', 'external', 
	      'mozAnimationStartTime', 'webkitStorageInfo', 'webkitIndexedDB', 'mozInnerScreenY', 'mozInnerScreenX'];

	    var globalSnapshot;

	    function forEachGlobal(callback) {
	      if (Object.keys)
	        Object.keys(__global).forEach(callback);
	      else
	        for (var g in __global) {
	          if (!hasOwnProperty.call(__global, g))
	            continue;
	          callback(g);
	        }
	    }

	    function forEachGlobalValue(callback) {
	      forEachGlobal(function(globalName) {
	        if (indexOf.call(ignoredGlobalProps, globalName) != -1)
	          return;
	        try {
	          var value = __global[globalName];
	        }
	        catch (e) {
	          ignoredGlobalProps.push(globalName);
	        }
	        callback(globalName, value);
	      });
	    }

	    loader.set('@@global-helpers', loader.newModule({
	      prepareGlobal: function(moduleName, exports, globals) {
	        // disable module detection
	        var curDefine = __global.define;
	        
	        __global.define = undefined;

	        // set globals
	        var oldGlobals;
	        if (globals) {
	          oldGlobals = {};
	          for (var g in globals) {
	            oldGlobals[g] = __global[g];
	            __global[g] = globals[g];
	          }
	        }

	        // store a complete copy of the global object in order to detect changes
	        if (!exports) {
	          globalSnapshot = {};

	          forEachGlobalValue(function(name, value) {
	            globalSnapshot[name] = value;
	          });
	        }

	        // return function to retrieve global
	        return function() {
	          var globalValue;

	          if (exports) {
	            globalValue = getGlobalValue(exports);
	          }
	          else {
	            globalValue = {};
	            var singleGlobal;
	            var multipleExports;

	            forEachGlobalValue(function(name, value) {
	              if (globalSnapshot[name] === value)
	                return;
	              if (typeof value == 'undefined')
	                return;
	              globalValue[name] = value;

	              if (typeof singleGlobal != 'undefined') {
	                if (!multipleExports && singleGlobal !== value)
	                  multipleExports = true;
	              }
	              else {
	                singleGlobal = value;
	              }
	            });
	            globalValue = multipleExports ? globalValue : singleGlobal;
	          }

	          // revert globals
	          if (oldGlobals) {
	            for (var g in oldGlobals)
	              __global[g] = oldGlobals[g];
	          }
	          __global.define = curDefine;

	          return globalValue;
	        };
	      }
	    }));
	  };
	});
	hookConstructor(function(constructor) {
	  return function() {
	    var loader = this;
	    constructor.call(loader);

	    if (typeof window != 'undefined' && typeof document != 'undefined' && window.location)
	      var windowOrigin = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');

	    function stripOrigin(path) {
	      if (path.substr(0, 8) == 'file:///')
	        return path.substr(7 + !!isWindows);
	      
	      if (windowOrigin && path.substr(0, windowOrigin.length) == windowOrigin)
	        return path.substr(windowOrigin.length);

	      return path;
	    }

	    loader.set('@@cjs-helpers', loader.newModule({
	      requireResolve: function(request, parentId) {
	        return stripOrigin(loader.normalizeSync(request, parentId));
	      },
	      getPathVars: function(moduleId) {
	        // remove any plugin syntax
	        var pluginIndex = moduleId.lastIndexOf('!');
	        var filename;
	        if (pluginIndex != -1)
	          filename = moduleId.substr(0, pluginIndex);
	        else
	          filename = moduleId;

	        var dirname = filename.split('/');
	        dirname.pop();
	        dirname = dirname.join('/');

	        return {
	          filename: stripOrigin(filename),
	          dirname: stripOrigin(dirname)
	        };
	      }
	    }))
	  };
	});/*
	 * AMD Helper function module
	 * Separated into its own file as this is the part needed for full AMD support in SFX builds
	 * NB since implementations have now diverged this can be merged back with amd.js
	 */

	hook('fetch', function(fetch) {
	  return function(load) {
	    // script load implies define global leak
	    if (load.metadata.scriptLoad && isBrowser)
	      __global.define = this.amdDefine;
	    return fetch.call(this, load);
	  };
	});
	 
	hookConstructor(function(constructor) {
	  return function() {
	    var loader = this;
	    constructor.call(this);

	    var commentRegEx = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg;
	    var cjsRequirePre = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])";
	    var cjsRequirePost = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)";
	    var fnBracketRegEx = /\(([^\)]*)\)/;
	    var wsRegEx = /^\s+|\s+$/g;
	    
	    var requireRegExs = {};

	    function getCJSDeps(source, requireIndex) {

	      // remove comments
	      source = source.replace(commentRegEx, '');

	      // determine the require alias
	      var params = source.match(fnBracketRegEx);
	      var requireAlias = (params[1].split(',')[requireIndex] || 'require').replace(wsRegEx, '');

	      // find or generate the regex for this requireAlias
	      var requireRegEx = requireRegExs[requireAlias] || (requireRegExs[requireAlias] = new RegExp(cjsRequirePre + requireAlias + cjsRequirePost, 'g'));

	      requireRegEx.lastIndex = 0;

	      var deps = [];

	      var match;
	      while (match = requireRegEx.exec(source))
	        deps.push(match[2] || match[3]);

	      return deps;
	    }

	    /*
	      AMD-compatible require
	      To copy RequireJS, set window.require = window.requirejs = loader.amdRequire
	    */
	    function require(names, callback, errback, referer) {
	      // in amd, first arg can be a config object... we just ignore
	      if (typeof names == 'object' && !(names instanceof Array))
	        return require.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));

	      // amd require
	      if (typeof names == 'string' && typeof callback == 'function')
	        names = [names];
	      if (names instanceof Array) {
	        var dynamicRequires = [];
	        for (var i = 0; i < names.length; i++)
	          dynamicRequires.push(loader['import'](names[i], referer));
	        Promise.all(dynamicRequires).then(function(modules) {
	          if (callback)
	            callback.apply(null, modules);
	        }, errback);
	      }

	      // commonjs require
	      else if (typeof names == 'string') {
	        var defaultJSExtension = loader.defaultJSExtensions && names.substr(names.length - 3, 3) != '.js';
	        var normalized = loader.decanonicalize(names, referer);
	        if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) == '.js')
	          normalized = normalized.substr(0, normalized.length - 3);
	        var module = loader.get(normalized);
	        if (!module)
	          throw new Error('Module not already loaded loading "' + names + '" as ' + normalized + (referer ? ' from "' + referer + '".' : '.'));
	        return module.__useDefault ? module['default'] : module;
	      }

	      else
	        throw new TypeError('Invalid require');
	    }

	    function define(name, deps, factory) {
	      if (typeof name != 'string') {
	        factory = deps;
	        deps = name;
	        name = null;
	      }
	      if (!(deps instanceof Array)) {
	        factory = deps;
	        deps = ['require', 'exports', 'module'].splice(0, factory.length);
	      }

	      if (typeof factory != 'function')
	        factory = (function(factory) {
	          return function() { return factory; }
	        })(factory);

	      // in IE8, a trailing comma becomes a trailing undefined entry
	      if (deps[deps.length - 1] === undefined)
	        deps.pop();

	      // remove system dependencies
	      var requireIndex, exportsIndex, moduleIndex;
	      
	      if ((requireIndex = indexOf.call(deps, 'require')) != -1) {
	        
	        deps.splice(requireIndex, 1);

	        // only trace cjs requires for non-named
	        // named defines assume the trace has already been done
	        if (!name)
	          deps = deps.concat(getCJSDeps(factory.toString(), requireIndex));
	      }

	      if ((exportsIndex = indexOf.call(deps, 'exports')) != -1)
	        deps.splice(exportsIndex, 1);
	      
	      if ((moduleIndex = indexOf.call(deps, 'module')) != -1)
	        deps.splice(moduleIndex, 1);

	      function execute(req, exports, module) {
	        var depValues = [];
	        for (var i = 0; i < deps.length; i++)
	          depValues.push(req(deps[i]));

	        module.uri = module.id;

	        module.config = function() {};

	        // add back in system dependencies
	        if (moduleIndex != -1)
	          depValues.splice(moduleIndex, 0, module);
	        
	        if (exportsIndex != -1)
	          depValues.splice(exportsIndex, 0, exports);
	        
	        if (requireIndex != -1) {
	          function contextualRequire(names, callback, errback) {
	            if (typeof names == 'string' && typeof callback != 'function')
	              return req(names);
	            return require.call(loader, names, callback, errback, module.id);
	          }
	          contextualRequire.toUrl = function(name) {
	            // normalize without defaultJSExtensions
	            var defaultJSExtension = loader.defaultJSExtensions && name.substr(name.length - 3, 3) != '.js';
	            var url = loader.decanonicalize(name, module.id);
	            if (defaultJSExtension && url.substr(url.length - 3, 3) == '.js')
	              url = url.substr(0, url.length - 3);
	            return url;
	          };
	          depValues.splice(requireIndex, 0, contextualRequire);
	        }

	        // set global require to AMD require
	        var curRequire = __global.require;
	        __global.require = require;

	        var output = factory.apply(exportsIndex == -1 ? __global : exports, depValues);

	        __global.require = curRequire;

	        if (typeof output == 'undefined' && module)
	          output = module.exports;

	        if (typeof output != 'undefined')
	          return output;
	      }

	      var entry = createEntry();
	      entry.name = name && (loader.decanonicalize || loader.normalize).call(loader, name);
	      entry.deps = deps;
	      entry.execute = execute;

	      loader.pushRegister_({
	        amd: true,
	        entry: entry
	      });
	    }
	    define.amd = {};

	    // reduction function to attach defines to a load record
	    hook('reduceRegister_', function(reduceRegister) {
	      return function(load, register) {
	        // only handle AMD registers here
	        if (!register || !register.amd)
	          return reduceRegister.call(this, load, register);

	        var curMeta = load && load.metadata;
	        var entry = register.entry;

	        if (curMeta) {
	          if (!curMeta.format || curMeta.format == 'detect')
	            curMeta.format = 'amd';
	          else if (!entry.name && curMeta.format != 'amd')
	            throw new Error('AMD define called while executing ' + curMeta.format + ' module ' + load.name);
	        }

	        // anonymous define
	        if (!entry.name) {
	          if (!curMeta)
	            throw new TypeError('Unexpected anonymous AMD define.');

	          if (curMeta.entry && !curMeta.entry.name)
	            throw new Error('Multiple anonymous defines in module ' + load.name);
	          
	          curMeta.entry = entry;
	        }
	        // named define
	        else {
	          // if we don't have any other defines, 
	          // then let this be an anonymous define
	          // this is just to support single modules of the form:
	          // define('jquery')
	          // still loading anonymously
	          // because it is done widely enough to be useful
	          // as soon as there is more than one define, this gets removed though
	          if (curMeta) {
	            if (!curMeta.entry && !curMeta.bundle)
	              curMeta.entry = entry;
	            else if (curMeta.entry && curMeta.entry.name)
	              curMeta.entry = undefined;

	            // note this is now a bundle
	            curMeta.bundle = true;
	          }

	          // define the module through the register registry
	          if (!(entry.name in this.defined))
	            this.defined[entry.name] = entry;
	        }
	      };
	    });

	    loader.amdDefine = define;
	    loader.amdRequire = require;
	  };
	});/*
	  SystemJS Loader Plugin Support

	  Supports plugin loader syntax with "!", or via metadata.loader

	  The plugin name is loaded as a module itself, and can override standard loader hooks
	  for the plugin resource. See the plugin section of the systemjs readme.
	*/

	(function() {
	  function getParentName(loader, parentName) {
	    // if parent is a plugin, normalize against the parent plugin argument only
	    if (parentName) {
	      var parentPluginIndex;
	      if (loader.pluginFirst) {
	        if ((parentPluginIndex = parentName.lastIndexOf('!')) != -1)
	          return parentName.substr(parentPluginIndex + 1);
	      }
	      else {
	        if ((parentPluginIndex = parentName.indexOf('!')) != -1)
	          return parentName.substr(0, parentPluginIndex);
	      }

	      return parentName;
	    }
	  }

	  function parsePlugin(loader, name) {
	    var argumentName;
	    var pluginName;

	    var pluginIndex = name.lastIndexOf('!');

	    if (pluginIndex == -1)
	      return;

	    if (loader.pluginFirst) {
	      argumentName = name.substr(pluginIndex + 1);
	      pluginName = name.substr(0, pluginIndex);
	    }
	    else {
	      argumentName = name.substr(0, pluginIndex);
	      pluginName = name.substr(pluginIndex + 1) || argumentName.substr(argumentName.lastIndexOf('.') + 1);
	    }

	    return {
	      argument: argumentName,
	      plugin: pluginName
	    };
	  }

	  // put name back together after parts have been normalized
	  function combinePluginParts(loader, argumentName, pluginName, defaultExtension) {
	    if (defaultExtension && argumentName.substr(argumentName.length - 3, 3) == '.js')
	      argumentName = argumentName.substr(0, argumentName.length - 3);

	    if (loader.pluginFirst) {
	      return pluginName + '!' + argumentName;
	    }
	    else {
	      return argumentName + '!' + pluginName;
	    }
	  }

	  // note if normalize will add a default js extension
	  // if so, remove for backwards compat
	  // this is strange and sucks, but will be deprecated
	  function checkDefaultExtension(loader, arg) {
	    return loader.defaultJSExtensions && arg.substr(arg.length - 3, 3) != '.js'; 
	  }

	  function createNormalizeSync(normalizeSync) {
	    return function(name, parentName, isPlugin) {
	      var loader = this;
	      
	      parentName = getParentName(this, parentName);
	      var parsed = parsePlugin(loader, name);

	      if (!parsed)
	        return normalizeSync.call(this, name, parentName, isPlugin);

	      // if this is a plugin, normalize the plugin name and the argument
	      var argumentName = loader.normalizeSync(parsed.argument, parentName, true);
	      var pluginName = loader.normalizeSync(parsed.plugin, parentName, true);
	      return combinePluginParts(loader, argumentName, pluginName, checkDefaultExtension(loader, parsed.argument));
	    };
	  }
	  
	  hook('decanonicalize', createNormalizeSync);
	  hook('normalizeSync', createNormalizeSync);

	  hook('normalize', function(normalize) {
	    return function(name, parentName, isPlugin) {
	      var loader = this;

	      parentName = getParentName(this, parentName);

	      var parsed = parsePlugin(loader, name);

	      if (!parsed)
	        return normalize.call(loader, name, parentName, isPlugin);

	      return Promise.all([
	        loader.normalize(parsed.argument, parentName, true),
	        loader.normalize(parsed.plugin, parentName)
	      ])
	      .then(function(normalized) {
	        return combinePluginParts(loader, normalized[0], normalized[1], checkDefaultExtension(loader, parsed.argument));
	      });
	    }
	  });

	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;

	      var name = load.name;

	      // plugin syntax
	      var pluginSyntaxIndex;
	      if (loader.pluginFirst) {
	        if ((pluginSyntaxIndex = name.indexOf('!')) != -1) {
	          load.metadata.loader = name.substr(0, pluginSyntaxIndex);
	          load.name = name.substr(pluginSyntaxIndex + 1);
	        }
	      }
	      else {
	        if ((pluginSyntaxIndex = name.lastIndexOf('!')) != -1) {
	          load.metadata.loader = name.substr(pluginSyntaxIndex + 1);
	          load.name = name.substr(0, pluginSyntaxIndex);
	        }
	      }

	      return locate.call(loader, load)
	      .then(function(address) {
	        if (pluginSyntaxIndex != -1 || !load.metadata.loader)
	          return address;

	        // normalize plugin relative to parent in locate here when
	        // using plugin via loader metadata
	        return loader.normalize(load.metadata.loader, load.name)
	        .then(function(loaderNormalized) {
	          load.metadata.loader = loaderNormalized;
	          return address;
	        });
	      })
	      .then(function(address) {
	        var plugin = load.metadata.loader;

	        if (!plugin)
	          return address;

	        // don't allow a plugin to load itself
	        if (load.name == plugin)
	          throw new Error('Plugin ' + plugin + ' cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.');

	        // only fetch the plugin itself if this name isn't defined
	        if (loader.defined && loader.defined[name])
	          return address;

	        var pluginLoader = loader.pluginLoader || loader;

	        // load the plugin module and run standard locate
	        return pluginLoader['import'](plugin)
	        .then(function(loaderModule) {
	          // store the plugin module itself on the metadata
	          load.metadata.loaderModule = loaderModule;

	          load.address = address;
	          if (loaderModule.locate)
	            return loaderModule.locate.call(loader, load);

	          return address;
	        });
	      });
	    };
	  });

	  hook('fetch', function(fetch) {
	    return function(load) {
	      var loader = this;
	      if (load.metadata.loaderModule && load.metadata.loaderModule.fetch && load.metadata.format != 'defined') {
	        load.metadata.scriptLoad = false;
	        return load.metadata.loaderModule.fetch.call(loader, load, function(load) {
	          return fetch.call(loader, load);
	        });
	      }
	      else {
	        return fetch.call(loader, load);
	      }
	    };
	  });

	  hook('translate', function(translate) {
	    return function(load) {
	      var loader = this;
	      if (load.metadata.loaderModule && load.metadata.loaderModule.translate && load.metadata.format != 'defined') {
	        return Promise.resolve(load.metadata.loaderModule.translate.call(loader, load)).then(function(result) {
	          var sourceMap = load.metadata.sourceMap;

	          // sanitize sourceMap if an object not a JSON string
	          if (sourceMap) {
	            if (typeof sourceMap != 'object')
	              throw new Error('load.metadata.sourceMap must be set to an object.');

	            var originalName = load.name.split('!')[0];
	            
	            // force set the filename of the original file
	            sourceMap.file = originalName + '!transpiled';

	            // force set the sources list if only one source
	            if (!sourceMap.sources || sourceMap.sources.length <= 1)
	              sourceMap.sources = [originalName];
	          }

	          // if running on file:/// URLs, sourcesContent is necessary
	          // load.metadata.sourceMap.sourcesContent = [load.source];

	          if (typeof result == 'string')
	            load.source = result;
	          else
	            warn.call(this, 'Plugin ' + load.metadata.loader + ' should return the source in translate, instead of setting load.source directly. This support will be deprecated.');

	          return translate.call(loader, load);
	        });
	      }
	      else {
	        return translate.call(loader, load);
	      }
	    };
	  });

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      var loader = this;
	      var calledInstantiate = false;

	      if (load.metadata.loaderModule && load.metadata.loaderModule.instantiate && !loader.builder && load.metadata.format != 'defined')
	        return Promise.resolve(load.metadata.loaderModule.instantiate.call(loader, load, function(load) {
	          if (calledInstantiate)
	            throw new Error('Instantiate must only be called once.');
	          calledInstantiate = true;
	          return instantiate.call(loader, load);
	        })).then(function(result) {
	          if (calledInstantiate)
	            return result;

	          load.metadata.entry = createEntry();
	          load.metadata.entry.execute = function() {
	            return result;
	          }
	          load.metadata.entry.deps = load.metadata.deps;
	          load.metadata.format = 'defined';
	          return instantiate.call(loader, load);
	        });
	      else
	        return instantiate.call(loader, load);
	    };
	  });

	})();/*
	 * Conditions Extension
	 *
	 *   Allows a condition module to alter the resolution of an import via syntax:
	 *
	 *     import $ from 'jquery/#{browser}';
	 *
	 *   Will first load the module 'browser' via `SystemJS.import('browser')` and 
	 *   take the default export of that module.
	 *   If the default export is not a string, an error is thrown.
	 * 
	 *   We then substitute the string into the require to get the conditional resolution
	 *   enabling environment-specific variations like:
	 * 
	 *     import $ from 'jquery/ie'
	 *     import $ from 'jquery/firefox'
	 *     import $ from 'jquery/chrome'
	 *     import $ from 'jquery/safari'
	 *
	 *   It can be useful for a condition module to define multiple conditions.
	 *   This can be done via the `|` modifier to specify an export member expression:
	 *
	 *     import 'jquery/#{./browser.js|grade.version}'
	 *
	 *   Where the `grade` export `version` member in the `browser.js` module  is substituted.
	 *
	 *
	 * Boolean Conditionals
	 *
	 *   For polyfill modules, that are used as imports but have no module value,
	 *   a binary conditional allows a module not to be loaded at all if not needed:
	 *
	 *     import 'es5-shim#?./conditions.js|needs-es5shim'
	 *
	 *   These conditions can also be negated via:
	 *     
	 *     import 'es5-shim#?~./conditions.js|es6'
	 *
	 */

	  function parseCondition(condition) {
	    var conditionExport, conditionModule, negation;

	    var negation = condition[0] == '~';
	    var conditionExportIndex = condition.lastIndexOf('|');
	    if (conditionExportIndex != -1) {
	      conditionExport = condition.substr(conditionExportIndex + 1);
	      conditionModule = condition.substr(negation, conditionExportIndex - negation) || '@system-env';
	    }
	    else {
	      conditionExport = null;
	      conditionModule = condition.substr(negation);
	    }

	    return {
	      module: conditionModule,
	      prop: conditionExport,
	      negate: negation
	    };
	  }

	  function serializeCondition(conditionObj) {
	    return (conditionObj.negate ? '~' : '') + conditionObj.module + (conditionObj.prop ? '|' + conditionObj.prop : '');
	  }

	  function resolveCondition(conditionObj, parentName, bool) {
	    return this['import'](conditionObj.module, parentName)
	    .then(function(m) {
	      if (conditionObj.prop)
	        m = readMemberExpression(conditionObj.prop, m);
	      else if (typeof m == 'object' && m + '' == 'Module')
	        m = m['default'];

	      if (bool && typeof m != 'boolean')
	        throw new TypeError('Condition ' + serializeCondition(conditionObj) + ' did not resolve to a boolean.');

	      return conditionObj.negate ? !m : m;
	    });
	  }

	  var interpolationRegEx = /#\{[^\}]+\}/;
	  function interpolateConditional(name, parentName) {
	    // first we normalize the conditional
	    var conditionalMatch = name.match(interpolationRegEx);

	    if (!conditionalMatch)
	      return Promise.resolve(name);

	    var conditionObj = parseCondition(conditionalMatch[0].substr(2, conditionalMatch[0].length - 3));

	    // in builds, return normalized conditional
	    if (this.builder)
	      return this['normalize'](conditionObj.module, parentName)
	      .then(function(conditionModule) {
	        conditionObj.module = conditionModule;
	        return name.replace(interpolationRegEx, '#{' + serializeCondition(conditionObj) + '}');
	      });

	    return resolveCondition.call(this, conditionObj, parentName, false)
	    .then(function(conditionValue) {
	      if (typeof conditionValue !== 'string')
	        throw new TypeError('The condition value for ' + name + ' doesn\'t resolve to a string.');

	      if (conditionValue.indexOf('/') != -1)
	        throw new TypeError('Unabled to interpolate conditional ' + name + (parentName ? ' in ' + parentName : '') + '\n\tThe condition value ' + conditionValue + ' cannot contain a "/" separator.');

	      return name.replace(interpolationRegEx, conditionValue);
	    });
	  }

	  function booleanConditional(name, parentName) {
	    // first we normalize the conditional
	    var booleanIndex = name.lastIndexOf('#?');

	    if (booleanIndex == -1)
	      return Promise.resolve(name);

	    var conditionObj = parseCondition(name.substr(booleanIndex + 2));

	    // in builds, return normalized conditional
	    if (this.builder)
	      return this['normalize'](conditionObj.module, parentName)
	      .then(function(conditionModule) {
	        conditionObj.module = conditionModule;
	        return name.substr(0, booleanIndex) + '#?' + serializeCondition(conditionObj);
	      });

	    return resolveCondition.call(this, conditionObj, parentName, true)
	    .then(function(conditionValue) {
	      return conditionValue ? name.substr(0, booleanIndex) : '@empty';
	    });
	  }

	  // normalizeSync does not parse conditionals at all although it could
	  hook('normalize', function(normalize) {
	    return function(name, parentName, parentAddress) {
	      var loader = this;
	      return booleanConditional.call(loader, name, parentName)
	      .then(function(name) {
	        return normalize.call(loader, name, parentName, parentAddress);
	      })
	      .then(function(normalized) {
	        return interpolateConditional.call(loader, normalized, parentName);
	      });
	    };
	  });
	/*
	 * Alias Extension
	 *
	 * Allows a module to be a plain copy of another module by module name
	 *
	 * SystemJS.meta['mybootstrapalias'] = { alias: 'bootstrap' };
	 *
	 */
	(function() {
	  // aliases
	  hook('fetch', function(fetch) {
	    return function(load) {
	      var alias = load.metadata.alias;
	      var aliasDeps = load.metadata.deps || [];
	      if (alias) {
	        load.metadata.format = 'defined';
	        var entry = createEntry();
	        this.defined[load.name] = entry;
	        entry.declarative = true;
	        entry.deps = aliasDeps.concat([alias]);
	        entry.declare = function(_export) {
	          return {
	            setters: [function(module) {
	              for (var p in module)
	                _export(p, module[p]);
	              if (module.__useDefault)
	                entry.module.exports.__useDefault = true;
	            }],
	            execute: function() {}
	          };
	        };
	        return '';
	      }

	      return fetch.call(this, load);
	    };
	  });
	})();/*
	 * Meta Extension
	 *
	 * Sets default metadata on a load record (load.metadata) from
	 * loader.metadata via SystemJS.meta function.
	 *
	 *
	 * Also provides an inline meta syntax for module meta in source.
	 *
	 * Eg:
	 *
	 * loader.meta({
	 *   'my/module': { deps: ['jquery'] }
	 *   'my/*': { format: 'amd' }
	 * });
	 *
	 * Which in turn populates loader.metadata.
	 *
	 * load.metadata.deps and load.metadata.format will then be set
	 * for 'my/module'
	 *
	 * The same meta could be set with a my/module.js file containing:
	 *
	 * my/module.js
	 *   "format amd";
	 *   "deps[] jquery";
	 *   "globals.some value"
	 *   console.log('this is my/module');
	 *
	 * Configuration meta always takes preference to inline meta.
	 *
	 * Multiple matches in wildcards are supported and ammend the meta.
	 *
	 *
	 * The benefits of the function form is that paths are URL-normalized
	 * supporting say
	 *
	 * loader.meta({ './app': { format: 'cjs' } });
	 *
	 * Instead of needing to set against the absolute URL (https://site.com/app.js)
	 *
	 */

	(function() {

	  hookConstructor(function(constructor) {
	    return function() {
	      this.meta = {};
	      constructor.call(this);
	    };
	  });

	  hook('locate', function(locate) {
	    return function(load) {
	      var meta = this.meta;
	      var name = load.name;

	      // NB for perf, maybe introduce a fast-path wildcard lookup cache here
	      // which is checked first

	      // apply wildcard metas
	      var bestDepth = 0;
	      var wildcardIndex;
	      for (var module in meta) {
	        wildcardIndex = module.indexOf('*');
	        if (wildcardIndex === -1)
	          continue;
	        if (module.substr(0, wildcardIndex) === name.substr(0, wildcardIndex)
	            && module.substr(wildcardIndex + 1) === name.substr(name.length - module.length + wildcardIndex + 1)) {
	          var depth = module.split('/').length;
	          if (depth > bestDepth)
	            bestDepth = depth;
	          extendMeta(load.metadata, meta[module], bestDepth != depth);
	        }
	      }

	      // apply exact meta
	      if (meta[name])
	        extendMeta(load.metadata, meta[name]);

	      return locate.call(this, load);
	    };
	  });

	  // detect any meta header syntax
	  // only set if not already set
	  var metaRegEx = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/;
	  var metaPartRegEx = /\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g;

	  function setMetaProperty(target, p, value) {
	    var pParts = p.split('.');
	    var curPart;
	    while (pParts.length > 1) {
	      curPart = pParts.shift();
	      target = target[curPart] = target[curPart] || {};
	    }
	    curPart = pParts.shift();
	    if (!(curPart in target))
	      target[curPart] = value;
	  }

	  hook('translate', function(translate) {
	    return function(load) {
	      // NB meta will be post-translate pending transpiler conversion to plugins
	      var meta = load.source.match(metaRegEx);
	      if (meta) {
	        var metaParts = meta[0].match(metaPartRegEx);

	        for (var i = 0; i < metaParts.length; i++) {
	          var curPart = metaParts[i];
	          var len = curPart.length;

	          var firstChar = curPart.substr(0, 1);
	          if (curPart.substr(len - 1, 1) == ';')
	            len--;

	          if (firstChar != '"' && firstChar != "'")
	            continue;

	          var metaString = curPart.substr(1, curPart.length - 3);
	          var metaName = metaString.substr(0, metaString.indexOf(' '));

	          if (metaName) {
	            var metaValue = metaString.substr(metaName.length + 1, metaString.length - metaName.length - 1);

	            if (metaName.substr(metaName.length - 2, 2) == '[]') {
	              metaName = metaName.substr(0, metaName.length - 2);
	              load.metadata[metaName] = load.metadata[metaName] || [];
	              load.metadata[metaName].push(metaValue);
	            }
	            else if (load.metadata[metaName] instanceof Array) {
	              // temporary backwards compat for previous "deps" syntax
	              warn.call(this, 'Module ' + load.name + ' contains deprecated "deps ' + metaValue + '" meta syntax.\nThis should be updated to "deps[] ' + metaValue + '" for pushing to array meta.');
	              load.metadata[metaName].push(metaValue);
	            }
	            else {
	              setMetaProperty(load.metadata, metaName, metaValue);
	            }
	          }
	          else {
	            load.metadata[metaString] = true;
	          }
	        }
	      }

	      return translate.call(this, load);
	    };
	  });
	})();
	/*
	  System bundles

	  Allows a bundle module to be specified which will be dynamically 
	  loaded before trying to load a given module.

	  For example:
	  SystemJS.bundles['mybundle'] = ['jquery', 'bootstrap/js/bootstrap']

	  Will result in a load to "mybundle" whenever a load to "jquery"
	  or "bootstrap/js/bootstrap" is made.

	  In this way, the bundle becomes the request that provides the module
	*/

	(function() {
	  // bundles support (just like RequireJS)
	  // bundle name is module name of bundle itself
	  // bundle is array of modules defined by the bundle
	  // when a module in the bundle is requested, the bundle is loaded instead
	  // of the form SystemJS.bundles['mybundle'] = ['jquery', 'bootstrap/js/bootstrap']
	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.bundles = {};
	      this._loader.loadedBundles = {};
	    };
	  });

	  // assign bundle metadata for bundle loads
	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      var matched = false;

	      if (!(load.name in loader.defined))
	        for (var b in loader.bundles) {
	          for (var i = 0; i < loader.bundles[b].length; i++) {
	            var curModule = loader.bundles[b][i];

	            if (curModule == load.name) {
	              matched = true;
	              break;
	            }

	            // wildcard in bundles does not include / boundaries
	            if (curModule.indexOf('*') != -1) {
	              var parts = curModule.split('*');
	              if (parts.length != 2) {
	                loader.bundles[b].splice(i--, 1);
	                continue;
	              }
	              
	              if (load.name.substring(0, parts[0].length) == parts[0] &&
	                  load.name.substr(load.name.length - parts[1].length, parts[1].length) == parts[1] &&
	                  load.name.substr(parts[0].length, load.name.length - parts[1].length - parts[0].length).indexOf('/') == -1) {
	                matched = true;
	                break;
	              }
	            }
	          }

	          if (matched)
	            return loader['import'](b)
	            .then(function() {
	              return locate.call(loader, load);
	            });
	        }

	      return locate.call(loader, load);
	    };
	  });
	})();
	/*
	 * Dependency Tree Cache
	 * 
	 * Allows a build to pre-populate a dependency trace tree on the loader of 
	 * the expected dependency tree, to be loaded upfront when requesting the
	 * module, avoinding the n round trips latency of module loading, where 
	 * n is the dependency tree depth.
	 *
	 * eg:
	 * SystemJS.depCache = {
	 *  'app': ['normalized', 'deps'],
	 *  'normalized': ['another'],
	 *  'deps': ['tree']
	 * };
	 * 
	 * SystemJS.import('app') 
	 * // simultaneously starts loading all of:
	 * // 'normalized', 'deps', 'another', 'tree'
	 * // before "app" source is even loaded
	 *
	 */

	(function() {
	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.depCache = {};
	    }
	  });

	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      // load direct deps, in turn will pick up their trace trees
	      var deps = loader.depCache[load.name];
	      if (deps)
	        for (var i = 0; i < deps.length; i++)
	          loader['import'](deps[i], load.name);

	      return locate.call(loader, load);
	    };
	  });
	})();
	  
	/*
	 * Script-only addition used for production loader
	 *
	 */
	hookConstructor(function(constructor) {
	  return function() {
	    constructor.apply(this, arguments);
	    __global.define = this.amdDefine;
	  };
	});

	hook('fetch', function(fetch) {
	  return function(load) {
	    load.metadata.scriptLoad = true;
	    return fetch.call(this, load);
	  };
	});System = new SystemJSLoader();

	__global.SystemJS = System;
	System.version = '0.19.27 CSP';
	  // -- exporting --

	  if (true)
	    module.exports = Loader;

	  __global.Reflect = __global.Reflect || {};
	  __global.Reflect.Loader = __global.Reflect.Loader || Loader;
	  __global.Reflect.global = __global.Reflect.global || __global;
	  __global.LoaderPolyfill = Loader;

	  if (!System) {
	    System = new SystemLoader();
	    System.constructor = SystemLoader;
	  }

	  if (true)
	    module.exports = System;

	  __global.System = System;

	})(typeof self != 'undefined' ? self : global);}

	// auto-load Promise polyfill if needed in the browser
	var doPolyfill = typeof Promise === 'undefined';

	// document.write
	if (typeof document !== 'undefined') {
	  var scripts = document.getElementsByTagName('script');
	  $__curScript = scripts[scripts.length - 1];
	  if (doPolyfill) {
	    var curPath = $__curScript.src;
	    var basePath = curPath.substr(0, curPath.lastIndexOf('/') + 1);
	    window.systemJSBootstrap = bootstrap;
	    document.write(
	      '<' + 'script type="text/javascript" src="' + basePath + 'system-polyfills.js">' + '<' + '/script>'
	    );
	  }
	  else {
	    bootstrap();
	  }
	}
	// importScripts
	else if (typeof importScripts !== 'undefined') {
	  var basePath = '';
	  try {
	    throw new Error('_');
	  } catch (e) {
	    e.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/, function(m, url) {
	      $__curScript = { src: url };
	      basePath = url.replace(/\/[^\/]*$/, '/');
	    });
	  }
	  if (doPolyfill)
	    importScripts(basePath + 'system-polyfills.js');
	  bootstrap();
	}
	else {
	  $__curScript =  true ? { src: __filename } : null;
	  bootstrap();
	}


	})();
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698), "/index.js"))

/***/ },
/* 733 */
/***/ function(module, exports, __webpack_require__) {

	var require;var require;/* WEBPACK VAR INJECTION */(function(global, process) {/*
	 * SystemJS Polyfills for URL and Promise providing IE8+ Support
	 */
	!function(t){!function(e){ true?module.exports=e():"function"==typeof t&&t.amd?t(e):"undefined"!=typeof window?window.Promise=e():"undefined"!=typeof global?global.Promise=e():"undefined"!=typeof self&&(self.Promise=e())}(function(){var t;return function e(t,n,o){function r(u,c){if(!n[u]){if(!t[u]){var f="function"==typeof require&&require;if(!c&&f)return require(u,!0);if(i)return i(u,!0);throw new Error("Cannot find module '"+u+"'")}var s=n[u]={exports:{}};t[u][0].call(s.exports,function(e){var n=t[u][1][e];return r(n?n:e)},s,s.exports,e,t,n,o)}return n[u].exports}for(var i="function"==typeof require&&require,u=0;u<o.length;u++)r(o[u]);return r}({1:[function(t,e,n){var o=t("../lib/decorators/unhandledRejection"),r=o(t("../lib/Promise"));e.exports="undefined"!=typeof global?global.Promise=r:"undefined"!=typeof self?self.Promise=r:r},{"../lib/Promise":2,"../lib/decorators/unhandledRejection":4}],2:[function(e,n,o){!function(t){"use strict";t(function(t){var e=t("./makePromise"),n=t("./Scheduler"),o=t("./env").asap;return e({scheduler:new n(o)})})}("function"==typeof t&&t.amd?t:function(t){n.exports=t(e)})},{"./Scheduler":3,"./env":5,"./makePromise":7}],3:[function(e,n,o){!function(t){"use strict";t(function(){function t(t){this._async=t,this._running=!1,this._queue=this,this._queueLen=0,this._afterQueue={},this._afterQueueLen=0;var e=this;this.drain=function(){e._drain()}}return t.prototype.enqueue=function(t){this._queue[this._queueLen++]=t,this.run()},t.prototype.afterQueue=function(t){this._afterQueue[this._afterQueueLen++]=t,this.run()},t.prototype.run=function(){this._running||(this._running=!0,this._async(this.drain))},t.prototype._drain=function(){for(var t=0;t<this._queueLen;++t)this._queue[t].run(),this._queue[t]=void 0;for(this._queueLen=0,this._running=!1,t=0;t<this._afterQueueLen;++t)this._afterQueue[t].run(),this._afterQueue[t]=void 0;this._afterQueueLen=0},t})}("function"==typeof t&&t.amd?t:function(t){n.exports=t()})},{}],4:[function(e,n,o){!function(t){"use strict";t(function(t){function e(t){throw t}function n(){}var o=t("../env").setTimer,r=t("../format");return function(t){function i(t){t.handled||(l.push(t),a("Potentially unhandled rejection ["+t.id+"] "+r.formatError(t.value)))}function u(t){var e=l.indexOf(t);e>=0&&(l.splice(e,1),h("Handled previous rejection ["+t.id+"] "+r.formatObject(t.value)))}function c(t,e){p.push(t,e),null===d&&(d=o(f,0))}function f(){for(d=null;p.length>0;)p.shift()(p.shift())}var s,a=n,h=n;"undefined"!=typeof console&&(s=console,a="undefined"!=typeof s.error?function(t){s.error(t)}:function(t){s.log(t)},h="undefined"!=typeof s.info?function(t){s.info(t)}:function(t){s.log(t)}),t.onPotentiallyUnhandledRejection=function(t){c(i,t)},t.onPotentiallyUnhandledRejectionHandled=function(t){c(u,t)},t.onFatalRejection=function(t){c(e,t.value)};var p=[],l=[],d=null;return t}})}("function"==typeof t&&t.amd?t:function(t){n.exports=t(e)})},{"../env":5,"../format":6}],5:[function(e,n,o){!function(t){"use strict";t(function(t){function e(){return"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process)}function n(){return"function"==typeof MutationObserver&&MutationObserver||"function"==typeof WebKitMutationObserver&&WebKitMutationObserver}function o(t){function e(){var t=n;n=void 0,t()}var n,o=document.createTextNode(""),r=new t(e);r.observe(o,{characterData:!0});var i=0;return function(t){n=t,o.data=i^=1}}var r,i="undefined"!=typeof setTimeout&&setTimeout,u=function(t,e){return setTimeout(t,e)},c=function(t){return clearTimeout(t)},f=function(t){return i(t,0)};if(e())f=function(t){return process.nextTick(t)};else if(r=n())f=o(r);else if(!i){var s=t,a=s("vertx");u=function(t,e){return a.setTimer(e,t)},c=a.cancelTimer,f=a.runOnLoop||a.runOnContext}return{setTimer:u,clearTimer:c,asap:f}})}("function"==typeof t&&t.amd?t:function(t){n.exports=t(e)})},{}],6:[function(e,n,o){!function(t){"use strict";t(function(){function t(t){var n="object"==typeof t&&null!==t&&(t.stack||t.message)?t.stack||t.message:e(t);return t instanceof Error?n:n+" (WARNING: non-Error used)"}function e(t){var e=String(t);return"[object Object]"===e&&"undefined"!=typeof JSON&&(e=n(t,e)),e}function n(t,e){try{return JSON.stringify(t)}catch(n){return e}}return{formatError:t,formatObject:e,tryStringify:n}})}("function"==typeof t&&t.amd?t:function(t){n.exports=t()})},{}],7:[function(e,n,o){!function(t){"use strict";t(function(){return function(t){function e(t,e){this._handler=t===_?e:n(t)}function n(t){function e(t){r.resolve(t)}function n(t){r.reject(t)}function o(t){r.notify(t)}var r=new b;try{t(e,n,o)}catch(i){n(i)}return r}function o(t){return k(t)?t:new e(_,new x(v(t)))}function r(t){return new e(_,new x(new P(t)))}function i(){return $}function u(){return new e(_,new b)}function c(t,e){var n=new b(t.receiver,t.join().context);return new e(_,n)}function f(t){return a(B,null,t)}function s(t,e){return a(M,t,e)}function a(t,n,o){function r(e,r,u){u.resolved||h(o,i,e,t(n,r,e),u)}function i(t,e,n){a[t]=e,0===--s&&n.become(new q(a))}for(var u,c="function"==typeof n?r:i,f=new b,s=o.length>>>0,a=new Array(s),p=0;p<o.length&&!f.resolved;++p)u=o[p],void 0!==u||p in o?h(o,c,p,u,f):--s;return 0===s&&f.become(new q(a)),new e(_,f)}function h(t,e,n,o,r){if(U(o)){var i=m(o),u=i.state();0===u?i.fold(e,n,void 0,r):u>0?e(n,i.value,r):(r.become(i),p(t,n+1,i))}else e(n,o,r)}function p(t,e,n){for(var o=e;o<t.length;++o)l(v(t[o]),n)}function l(t,e){if(t!==e){var n=t.state();0===n?t.visit(t,void 0,t._unreport):0>n&&t._unreport()}}function d(t){return"object"!=typeof t||null===t?r(new TypeError("non-iterable passed to race()")):0===t.length?i():1===t.length?o(t[0]):y(t)}function y(t){var n,o,r,i=new b;for(n=0;n<t.length;++n)if(o=t[n],void 0!==o||n in t){if(r=v(o),0!==r.state()){i.become(r),p(t,n+1,r);break}r.visit(i,i.resolve,i.reject)}return new e(_,i)}function v(t){return k(t)?t._handler.join():U(t)?j(t):new q(t)}function m(t){return k(t)?t._handler.join():j(t)}function j(t){try{var e=t.then;return"function"==typeof e?new g(e,t):new q(t)}catch(n){return new P(n)}}function _(){}function w(){}function b(t,n){e.createContext(this,n),this.consumers=void 0,this.receiver=t,this.handler=void 0,this.resolved=!1}function x(t){this.handler=t}function g(t,e){b.call(this),G.enqueue(new E(t,e,this))}function q(t){e.createContext(this),this.value=t}function P(t){e.createContext(this),this.id=++Y,this.value=t,this.handled=!1,this.reported=!1,this._report()}function R(t,e){this.rejection=t,this.context=e}function C(t){this.rejection=t}function O(){return new P(new TypeError("Promise cycle"))}function T(t,e){this.continuation=t,this.handler=e}function Q(t,e){this.handler=e,this.value=t}function E(t,e,n){this._then=t,this.thenable=e,this.resolver=n}function L(t,e,n,o,r){try{t.call(e,n,o,r)}catch(i){o(i)}}function S(t,e,n,o){this.f=t,this.z=e,this.c=n,this.to=o,this.resolver=X,this.receiver=this}function k(t){return t instanceof e}function U(t){return("object"==typeof t||"function"==typeof t)&&null!==t}function H(t,n,o,r){return"function"!=typeof t?r.become(n):(e.enterContext(n),F(t,n.value,o,r),void e.exitContext())}function N(t,n,o,r,i){return"function"!=typeof t?i.become(o):(e.enterContext(o),W(t,n,o.value,r,i),void e.exitContext())}function J(t,n,o,r,i){return"function"!=typeof t?i.notify(n):(e.enterContext(o),z(t,n,r,i),void e.exitContext())}function M(t,e,n){try{return t(e,n)}catch(o){return r(o)}}function F(t,e,n,o){try{o.become(v(t.call(n,e)))}catch(r){o.become(new P(r))}}function W(t,e,n,o,r){try{t.call(o,e,n,r)}catch(i){r.become(new P(i))}}function z(t,e,n,o){try{o.notify(t.call(n,e))}catch(r){o.notify(r)}}function A(t,e){e.prototype=V(t.prototype),e.prototype.constructor=e}function B(t,e){return e}function K(){}function D(){return"undefined"!=typeof process&&null!==process&&"function"==typeof process.emit?function(t,e){return"unhandledRejection"===t?process.emit(t,e.value,e):process.emit(t,e)}:"undefined"!=typeof self&&"function"==typeof CustomEvent?function(t,e,n){var o=!1;try{var r=new n("unhandledRejection");o=r instanceof n}catch(i){}return o?function(t,o){var r=new n(t,{detail:{reason:o.value,key:o},bubbles:!1,cancelable:!0});return!e.dispatchEvent(r)}:t}(K,self,CustomEvent):K}var G=t.scheduler,I=D(),V=Object.create||function(t){function e(){}return e.prototype=t,new e};e.resolve=o,e.reject=r,e.never=i,e._defer=u,e._handler=v,e.prototype.then=function(t,e,n){var o=this._handler,r=o.join().state();if("function"!=typeof t&&r>0||"function"!=typeof e&&0>r)return new this.constructor(_,o);var i=this._beget(),u=i._handler;return o.chain(u,o.receiver,t,e,n),i},e.prototype["catch"]=function(t){return this.then(void 0,t)},e.prototype._beget=function(){return c(this._handler,this.constructor)},e.all=f,e.race=d,e._traverse=s,e._visitRemaining=p,_.prototype.when=_.prototype.become=_.prototype.notify=_.prototype.fail=_.prototype._unreport=_.prototype._report=K,_.prototype._state=0,_.prototype.state=function(){return this._state},_.prototype.join=function(){for(var t=this;void 0!==t.handler;)t=t.handler;return t},_.prototype.chain=function(t,e,n,o,r){this.when({resolver:t,receiver:e,fulfilled:n,rejected:o,progress:r})},_.prototype.visit=function(t,e,n,o){this.chain(X,t,e,n,o)},_.prototype.fold=function(t,e,n,o){this.when(new S(t,e,n,o))},A(_,w),w.prototype.become=function(t){t.fail()};var X=new w;A(_,b),b.prototype._state=0,b.prototype.resolve=function(t){this.become(v(t))},b.prototype.reject=function(t){this.resolved||this.become(new P(t))},b.prototype.join=function(){if(!this.resolved)return this;for(var t=this;void 0!==t.handler;)if(t=t.handler,t===this)return this.handler=O();return t},b.prototype.run=function(){var t=this.consumers,e=this.handler;this.handler=this.handler.join(),this.consumers=void 0;for(var n=0;n<t.length;++n)e.when(t[n])},b.prototype.become=function(t){this.resolved||(this.resolved=!0,this.handler=t,void 0!==this.consumers&&G.enqueue(this),void 0!==this.context&&t._report(this.context))},b.prototype.when=function(t){this.resolved?G.enqueue(new T(t,this.handler)):void 0===this.consumers?this.consumers=[t]:this.consumers.push(t)},b.prototype.notify=function(t){this.resolved||G.enqueue(new Q(t,this))},b.prototype.fail=function(t){var e="undefined"==typeof t?this.context:t;this.resolved&&this.handler.join().fail(e)},b.prototype._report=function(t){this.resolved&&this.handler.join()._report(t)},b.prototype._unreport=function(){this.resolved&&this.handler.join()._unreport()},A(_,x),x.prototype.when=function(t){G.enqueue(new T(t,this))},x.prototype._report=function(t){this.join()._report(t)},x.prototype._unreport=function(){this.join()._unreport()},A(b,g),A(_,q),q.prototype._state=1,q.prototype.fold=function(t,e,n,o){N(t,e,this,n,o)},q.prototype.when=function(t){H(t.fulfilled,this,t.receiver,t.resolver)};var Y=0;A(_,P),P.prototype._state=-1,P.prototype.fold=function(t,e,n,o){o.become(this)},P.prototype.when=function(t){"function"==typeof t.rejected&&this._unreport(),H(t.rejected,this,t.receiver,t.resolver)},P.prototype._report=function(t){G.afterQueue(new R(this,t))},P.prototype._unreport=function(){this.handled||(this.handled=!0,G.afterQueue(new C(this)))},P.prototype.fail=function(t){this.reported=!0,I("unhandledRejection",this),e.onFatalRejection(this,void 0===t?this.context:t)},R.prototype.run=function(){this.rejection.handled||this.rejection.reported||(this.rejection.reported=!0,I("unhandledRejection",this.rejection)||e.onPotentiallyUnhandledRejection(this.rejection,this.context))},C.prototype.run=function(){this.rejection.reported&&(I("rejectionHandled",this.rejection)||e.onPotentiallyUnhandledRejectionHandled(this.rejection))},e.createContext=e.enterContext=e.exitContext=e.onPotentiallyUnhandledRejection=e.onPotentiallyUnhandledRejectionHandled=e.onFatalRejection=K;var Z=new _,$=new e(_,Z);return T.prototype.run=function(){this.handler.join().when(this.continuation)},Q.prototype.run=function(){var t=this.handler.consumers;if(void 0!==t)for(var e,n=0;n<t.length;++n)e=t[n],J(e.progress,this.value,this.handler,e.receiver,e.resolver)},E.prototype.run=function(){function t(t){o.resolve(t)}function e(t){o.reject(t)}function n(t){o.notify(t)}var o=this.resolver;L(this._then,this.thenable,t,e,n)},S.prototype.fulfilled=function(t){this.f.call(this.c,this.z,t,this.to)},S.prototype.rejected=function(t){this.to.reject(t)},S.prototype.progress=function(t){this.to.notify(t)},e}})}("function"==typeof t&&t.amd?t:function(t){n.exports=t()})},{}]},{},[1])(1)}),"undefined"!=typeof systemJSBootstrap&&systemJSBootstrap()}();
	//# sourceMappingURL=system-polyfills.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698)))

/***/ },
/* 734 */,
/* 735 */
/***/ function(module, exports, __webpack_require__) {

	var require;var require;/* WEBPACK VAR INJECTION */(function(global, process) {/*
	 * SystemJS Polyfills for URL and Promise providing IE8+ Support
	 */
	(function(define) {

	!function(e){ true?module.exports=e():"function"==typeof define&&define.amd?define(e):"undefined"!=typeof window?window.Promise=e():"undefined"!=typeof global?global.Promise=e():"undefined"!=typeof self&&(self.Promise=e())}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	/**
	 * ES6 global Promise shim
	 */
	var unhandledRejections = require('../lib/decorators/unhandledRejection');
	var PromiseConstructor = unhandledRejections(require('../lib/Promise'));

	module.exports = typeof global != 'undefined' ? (global.Promise = PromiseConstructor)
		           : typeof self   != 'undefined' ? (self.Promise   = PromiseConstructor)
		           : PromiseConstructor;

	},{"../lib/Promise":2,"../lib/decorators/unhandledRejection":4}],2:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function (require) {

		var makePromise = require('./makePromise');
		var Scheduler = require('./Scheduler');
		var async = require('./env').asap;

		return makePromise({
			scheduler: new Scheduler(async)
		});

	});
	})(typeof define === 'function' && define.amd ? define : function (factory) { module.exports = factory(require); });

	},{"./Scheduler":3,"./env":5,"./makePromise":7}],3:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function() {

		// Credit to Twisol (https://github.com/Twisol) for suggesting
		// this type of extensible queue + trampoline approach for next-tick conflation.

		/**
		 * Async task scheduler
		 * @param {function} async function to schedule a single async function
		 * @constructor
		 */
		function Scheduler(async) {
			this._async = async;
			this._running = false;

			this._queue = this;
			this._queueLen = 0;
			this._afterQueue = {};
			this._afterQueueLen = 0;

			var self = this;
			this.drain = function() {
				self._drain();
			};
		}

		/**
		 * Enqueue a task
		 * @param {{ run:function }} task
		 */
		Scheduler.prototype.enqueue = function(task) {
			this._queue[this._queueLen++] = task;
			this.run();
		};

		/**
		 * Enqueue a task to run after the main task queue
		 * @param {{ run:function }} task
		 */
		Scheduler.prototype.afterQueue = function(task) {
			this._afterQueue[this._afterQueueLen++] = task;
			this.run();
		};

		Scheduler.prototype.run = function() {
			if (!this._running) {
				this._running = true;
				this._async(this.drain);
			}
		};

		/**
		 * Drain the handler queue entirely, and then the after queue
		 */
		Scheduler.prototype._drain = function() {
			var i = 0;
			for (; i < this._queueLen; ++i) {
				this._queue[i].run();
				this._queue[i] = void 0;
			}

			this._queueLen = 0;
			this._running = false;

			for (i = 0; i < this._afterQueueLen; ++i) {
				this._afterQueue[i].run();
				this._afterQueue[i] = void 0;
			}

			this._afterQueueLen = 0;
		};

		return Scheduler;

	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));

	},{}],4:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function(require) {

		var setTimer = require('../env').setTimer;
		var format = require('../format');

		return function unhandledRejection(Promise) {

			var logError = noop;
			var logInfo = noop;
			var localConsole;

			if(typeof console !== 'undefined') {
				// Alias console to prevent things like uglify's drop_console option from
				// removing console.log/error. Unhandled rejections fall into the same
				// category as uncaught exceptions, and build tools shouldn't silence them.
				localConsole = console;
				logError = typeof localConsole.error !== 'undefined'
					? function (e) { localConsole.error(e); }
					: function (e) { localConsole.log(e); };

				logInfo = typeof localConsole.info !== 'undefined'
					? function (e) { localConsole.info(e); }
					: function (e) { localConsole.log(e); };
			}

			Promise.onPotentiallyUnhandledRejection = function(rejection) {
				enqueue(report, rejection);
			};

			Promise.onPotentiallyUnhandledRejectionHandled = function(rejection) {
				enqueue(unreport, rejection);
			};

			Promise.onFatalRejection = function(rejection) {
				enqueue(throwit, rejection.value);
			};

			var tasks = [];
			var reported = [];
			var running = null;

			function report(r) {
				if(!r.handled) {
					reported.push(r);
					logError('Potentially unhandled rejection [' + r.id + '] ' + format.formatError(r.value));
				}
			}

			function unreport(r) {
				var i = reported.indexOf(r);
				if(i >= 0) {
					reported.splice(i, 1);
					logInfo('Handled previous rejection [' + r.id + '] ' + format.formatObject(r.value));
				}
			}

			function enqueue(f, x) {
				tasks.push(f, x);
				if(running === null) {
					running = setTimer(flush, 0);
				}
			}

			function flush() {
				running = null;
				while(tasks.length > 0) {
					tasks.shift()(tasks.shift());
				}
			}

			return Promise;
		};

		function throwit(e) {
			throw e;
		}

		function noop() {}

	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));

	},{"../env":5,"../format":6}],5:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	/*global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver*/
	(function(define) { 'use strict';
	define(function(require) {
		/*jshint maxcomplexity:6*/

		// Sniff "best" async scheduling option
		// Prefer process.nextTick or MutationObserver, then check for
		// setTimeout, and finally vertx, since its the only env that doesn't
		// have setTimeout

		var MutationObs;
		var capturedSetTimeout = typeof setTimeout !== 'undefined' && setTimeout;

		// Default env
		var setTimer = function(f, ms) { return setTimeout(f, ms); };
		var clearTimer = function(t) { return clearTimeout(t); };
		var asap = function (f) { return capturedSetTimeout(f, 0); };

		// Detect specific env
		if (isNode()) { // Node
			asap = function (f) { return process.nextTick(f); };

		} else if (MutationObs = hasMutationObserver()) { // Modern browser
			asap = initMutationObserver(MutationObs);

		} else if (!capturedSetTimeout) { // vert.x
			var vertxRequire = require;
			var vertx = vertxRequire('vertx');
			setTimer = function (f, ms) { return vertx.setTimer(ms, f); };
			clearTimer = vertx.cancelTimer;
			asap = vertx.runOnLoop || vertx.runOnContext;
		}

		return {
			setTimer: setTimer,
			clearTimer: clearTimer,
			asap: asap
		};

		function isNode () {
			return typeof process !== 'undefined' &&
				Object.prototype.toString.call(process) === '[object process]';
		}

		function hasMutationObserver () {
			return (typeof MutationObserver === 'function' && MutationObserver) ||
				(typeof WebKitMutationObserver === 'function' && WebKitMutationObserver);
		}

		function initMutationObserver(MutationObserver) {
			var scheduled;
			var node = document.createTextNode('');
			var o = new MutationObserver(run);
			o.observe(node, { characterData: true });

			function run() {
				var f = scheduled;
				scheduled = void 0;
				f();
			}

			var i = 0;
			return function (f) {
				scheduled = f;
				node.data = (i ^= 1);
			};
		}
	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(require); }));

	},{}],6:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function() {

		return {
			formatError: formatError,
			formatObject: formatObject,
			tryStringify: tryStringify
		};

		/**
		 * Format an error into a string.  If e is an Error and has a stack property,
		 * it's returned.  Otherwise, e is formatted using formatObject, with a
		 * warning added about e not being a proper Error.
		 * @param {*} e
		 * @returns {String} formatted string, suitable for output to developers
		 */
		function formatError(e) {
			var s = typeof e === 'object' && e !== null && (e.stack || e.message) ? e.stack || e.message : formatObject(e);
			return e instanceof Error ? s : s + ' (WARNING: non-Error used)';
		}

		/**
		 * Format an object, detecting "plain" objects and running them through
		 * JSON.stringify if possible.
		 * @param {Object} o
		 * @returns {string}
		 */
		function formatObject(o) {
			var s = String(o);
			if(s === '[object Object]' && typeof JSON !== 'undefined') {
				s = tryStringify(o, s);
			}
			return s;
		}

		/**
		 * Try to return the result of JSON.stringify(x).  If that fails, return
		 * defaultValue
		 * @param {*} x
		 * @param {*} defaultValue
		 * @returns {String|*} JSON.stringify(x) or defaultValue
		 */
		function tryStringify(x, defaultValue) {
			try {
				return JSON.stringify(x);
			} catch(e) {
				return defaultValue;
			}
		}

	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));

	},{}],7:[function(require,module,exports){
	/** @license MIT License (c) copyright 2010-2014 original author or authors */
	/** @author Brian Cavalier */
	/** @author John Hann */

	(function(define) { 'use strict';
	define(function() {

		return function makePromise(environment) {

			var tasks = environment.scheduler;
			var emitRejection = initEmitRejection();

			var objectCreate = Object.create ||
				function(proto) {
					function Child() {}
					Child.prototype = proto;
					return new Child();
				};

			/**
			 * Create a promise whose fate is determined by resolver
			 * @constructor
			 * @returns {Promise} promise
			 * @name Promise
			 */
			function Promise(resolver, handler) {
				this._handler = resolver === Handler ? handler : init(resolver);
			}

			/**
			 * Run the supplied resolver
			 * @param resolver
			 * @returns {Pending}
			 */
			function init(resolver) {
				var handler = new Pending();

				try {
					resolver(promiseResolve, promiseReject, promiseNotify);
				} catch (e) {
					promiseReject(e);
				}

				return handler;

				/**
				 * Transition from pre-resolution state to post-resolution state, notifying
				 * all listeners of the ultimate fulfillment or rejection
				 * @param {*} x resolution value
				 */
				function promiseResolve (x) {
					handler.resolve(x);
				}
				/**
				 * Reject this promise with reason, which will be used verbatim
				 * @param {Error|*} reason rejection reason, strongly suggested
				 *   to be an Error type
				 */
				function promiseReject (reason) {
					handler.reject(reason);
				}

				/**
				 * @deprecated
				 * Issue a progress event, notifying all progress listeners
				 * @param {*} x progress event payload to pass to all listeners
				 */
				function promiseNotify (x) {
					handler.notify(x);
				}
			}

			// Creation

			Promise.resolve = resolve;
			Promise.reject = reject;
			Promise.never = never;

			Promise._defer = defer;
			Promise._handler = getHandler;

			/**
			 * Returns a trusted promise. If x is already a trusted promise, it is
			 * returned, otherwise returns a new trusted Promise which follows x.
			 * @param  {*} x
			 * @return {Promise} promise
			 */
			function resolve(x) {
				return isPromise(x) ? x
					: new Promise(Handler, new Async(getHandler(x)));
			}

			/**
			 * Return a reject promise with x as its reason (x is used verbatim)
			 * @param {*} x
			 * @returns {Promise} rejected promise
			 */
			function reject(x) {
				return new Promise(Handler, new Async(new Rejected(x)));
			}

			/**
			 * Return a promise that remains pending forever
			 * @returns {Promise} forever-pending promise.
			 */
			function never() {
				return foreverPendingPromise; // Should be frozen
			}

			/**
			 * Creates an internal {promise, resolver} pair
			 * @private
			 * @returns {Promise}
			 */
			function defer() {
				return new Promise(Handler, new Pending());
			}

			// Transformation and flow control

			/**
			 * Transform this promise's fulfillment value, returning a new Promise
			 * for the transformed result.  If the promise cannot be fulfilled, onRejected
			 * is called with the reason.  onProgress *may* be called with updates toward
			 * this promise's fulfillment.
			 * @param {function=} onFulfilled fulfillment handler
			 * @param {function=} onRejected rejection handler
			 * @param {function=} onProgress @deprecated progress handler
			 * @return {Promise} new promise
			 */
			Promise.prototype.then = function(onFulfilled, onRejected, onProgress) {
				var parent = this._handler;
				var state = parent.join().state();

				if ((typeof onFulfilled !== 'function' && state > 0) ||
					(typeof onRejected !== 'function' && state < 0)) {
					// Short circuit: value will not change, simply share handler
					return new this.constructor(Handler, parent);
				}

				var p = this._beget();
				var child = p._handler;

				parent.chain(child, parent.receiver, onFulfilled, onRejected, onProgress);

				return p;
			};

			/**
			 * If this promise cannot be fulfilled due to an error, call onRejected to
			 * handle the error. Shortcut for .then(undefined, onRejected)
			 * @param {function?} onRejected
			 * @return {Promise}
			 */
			Promise.prototype['catch'] = function(onRejected) {
				return this.then(void 0, onRejected);
			};

			/**
			 * Creates a new, pending promise of the same type as this promise
			 * @private
			 * @returns {Promise}
			 */
			Promise.prototype._beget = function() {
				return begetFrom(this._handler, this.constructor);
			};

			function begetFrom(parent, Promise) {
				var child = new Pending(parent.receiver, parent.join().context);
				return new Promise(Handler, child);
			}

			// Array combinators

			Promise.all = all;
			Promise.race = race;
			Promise._traverse = traverse;

			/**
			 * Return a promise that will fulfill when all promises in the
			 * input array have fulfilled, or will reject when one of the
			 * promises rejects.
			 * @param {array} promises array of promises
			 * @returns {Promise} promise for array of fulfillment values
			 */
			function all(promises) {
				return traverseWith(snd, null, promises);
			}

			/**
			 * Array<Promise<X>> -> Promise<Array<f(X)>>
			 * @private
			 * @param {function} f function to apply to each promise's value
			 * @param {Array} promises array of promises
			 * @returns {Promise} promise for transformed values
			 */
			function traverse(f, promises) {
				return traverseWith(tryCatch2, f, promises);
			}

			function traverseWith(tryMap, f, promises) {
				var handler = typeof f === 'function' ? mapAt : settleAt;

				var resolver = new Pending();
				var pending = promises.length >>> 0;
				var results = new Array(pending);

				for (var i = 0, x; i < promises.length && !resolver.resolved; ++i) {
					x = promises[i];

					if (x === void 0 && !(i in promises)) {
						--pending;
						continue;
					}

					traverseAt(promises, handler, i, x, resolver);
				}

				if(pending === 0) {
					resolver.become(new Fulfilled(results));
				}

				return new Promise(Handler, resolver);

				function mapAt(i, x, resolver) {
					if(!resolver.resolved) {
						traverseAt(promises, settleAt, i, tryMap(f, x, i), resolver);
					}
				}

				function settleAt(i, x, resolver) {
					results[i] = x;
					if(--pending === 0) {
						resolver.become(new Fulfilled(results));
					}
				}
			}

			function traverseAt(promises, handler, i, x, resolver) {
				if (maybeThenable(x)) {
					var h = getHandlerMaybeThenable(x);
					var s = h.state();

					if (s === 0) {
						h.fold(handler, i, void 0, resolver);
					} else if (s > 0) {
						handler(i, h.value, resolver);
					} else {
						resolver.become(h);
						visitRemaining(promises, i+1, h);
					}
				} else {
					handler(i, x, resolver);
				}
			}

			Promise._visitRemaining = visitRemaining;
			function visitRemaining(promises, start, handler) {
				for(var i=start; i<promises.length; ++i) {
					markAsHandled(getHandler(promises[i]), handler);
				}
			}

			function markAsHandled(h, handler) {
				if(h === handler) {
					return;
				}

				var s = h.state();
				if(s === 0) {
					h.visit(h, void 0, h._unreport);
				} else if(s < 0) {
					h._unreport();
				}
			}

			/**
			 * Fulfill-reject competitive race. Return a promise that will settle
			 * to the same state as the earliest input promise to settle.
			 *
			 * WARNING: The ES6 Promise spec requires that race()ing an empty array
			 * must return a promise that is pending forever.  This implementation
			 * returns a singleton forever-pending promise, the same singleton that is
			 * returned by Promise.never(), thus can be checked with ===
			 *
			 * @param {array} promises array of promises to race
			 * @returns {Promise} if input is non-empty, a promise that will settle
			 * to the same outcome as the earliest input promise to settle. if empty
			 * is empty, returns a promise that will never settle.
			 */
			function race(promises) {
				if(typeof promises !== 'object' || promises === null) {
					return reject(new TypeError('non-iterable passed to race()'));
				}

				// Sigh, race([]) is untestable unless we return *something*
				// that is recognizable without calling .then() on it.
				return promises.length === 0 ? never()
					 : promises.length === 1 ? resolve(promises[0])
					 : runRace(promises);
			}

			function runRace(promises) {
				var resolver = new Pending();
				var i, x, h;
				for(i=0; i<promises.length; ++i) {
					x = promises[i];
					if (x === void 0 && !(i in promises)) {
						continue;
					}

					h = getHandler(x);
					if(h.state() !== 0) {
						resolver.become(h);
						visitRemaining(promises, i+1, h);
						break;
					} else {
						h.visit(resolver, resolver.resolve, resolver.reject);
					}
				}
				return new Promise(Handler, resolver);
			}

			// Promise internals
			// Below this, everything is @private

			/**
			 * Get an appropriate handler for x, without checking for cycles
			 * @param {*} x
			 * @returns {object} handler
			 */
			function getHandler(x) {
				if(isPromise(x)) {
					return x._handler.join();
				}
				return maybeThenable(x) ? getHandlerUntrusted(x) : new Fulfilled(x);
			}

			/**
			 * Get a handler for thenable x.
			 * NOTE: You must only call this if maybeThenable(x) == true
			 * @param {object|function|Promise} x
			 * @returns {object} handler
			 */
			function getHandlerMaybeThenable(x) {
				return isPromise(x) ? x._handler.join() : getHandlerUntrusted(x);
			}

			/**
			 * Get a handler for potentially untrusted thenable x
			 * @param {*} x
			 * @returns {object} handler
			 */
			function getHandlerUntrusted(x) {
				try {
					var untrustedThen = x.then;
					return typeof untrustedThen === 'function'
						? new Thenable(untrustedThen, x)
						: new Fulfilled(x);
				} catch(e) {
					return new Rejected(e);
				}
			}

			/**
			 * Handler for a promise that is pending forever
			 * @constructor
			 */
			function Handler() {}

			Handler.prototype.when
				= Handler.prototype.become
				= Handler.prototype.notify // deprecated
				= Handler.prototype.fail
				= Handler.prototype._unreport
				= Handler.prototype._report
				= noop;

			Handler.prototype._state = 0;

			Handler.prototype.state = function() {
				return this._state;
			};

			/**
			 * Recursively collapse handler chain to find the handler
			 * nearest to the fully resolved value.
			 * @returns {object} handler nearest the fully resolved value
			 */
			Handler.prototype.join = function() {
				var h = this;
				while(h.handler !== void 0) {
					h = h.handler;
				}
				return h;
			};

			Handler.prototype.chain = function(to, receiver, fulfilled, rejected, progress) {
				this.when({
					resolver: to,
					receiver: receiver,
					fulfilled: fulfilled,
					rejected: rejected,
					progress: progress
				});
			};

			Handler.prototype.visit = function(receiver, fulfilled, rejected, progress) {
				this.chain(failIfRejected, receiver, fulfilled, rejected, progress);
			};

			Handler.prototype.fold = function(f, z, c, to) {
				this.when(new Fold(f, z, c, to));
			};

			/**
			 * Handler that invokes fail() on any handler it becomes
			 * @constructor
			 */
			function FailIfRejected() {}

			inherit(Handler, FailIfRejected);

			FailIfRejected.prototype.become = function(h) {
				h.fail();
			};

			var failIfRejected = new FailIfRejected();

			/**
			 * Handler that manages a queue of consumers waiting on a pending promise
			 * @constructor
			 */
			function Pending(receiver, inheritedContext) {
				Promise.createContext(this, inheritedContext);

				this.consumers = void 0;
				this.receiver = receiver;
				this.handler = void 0;
				this.resolved = false;
			}

			inherit(Handler, Pending);

			Pending.prototype._state = 0;

			Pending.prototype.resolve = function(x) {
				this.become(getHandler(x));
			};

			Pending.prototype.reject = function(x) {
				if(this.resolved) {
					return;
				}

				this.become(new Rejected(x));
			};

			Pending.prototype.join = function() {
				if (!this.resolved) {
					return this;
				}

				var h = this;

				while (h.handler !== void 0) {
					h = h.handler;
					if (h === this) {
						return this.handler = cycle();
					}
				}

				return h;
			};

			Pending.prototype.run = function() {
				var q = this.consumers;
				var handler = this.handler;
				this.handler = this.handler.join();
				this.consumers = void 0;

				for (var i = 0; i < q.length; ++i) {
					handler.when(q[i]);
				}
			};

			Pending.prototype.become = function(handler) {
				if(this.resolved) {
					return;
				}

				this.resolved = true;
				this.handler = handler;
				if(this.consumers !== void 0) {
					tasks.enqueue(this);
				}

				if(this.context !== void 0) {
					handler._report(this.context);
				}
			};

			Pending.prototype.when = function(continuation) {
				if(this.resolved) {
					tasks.enqueue(new ContinuationTask(continuation, this.handler));
				} else {
					if(this.consumers === void 0) {
						this.consumers = [continuation];
					} else {
						this.consumers.push(continuation);
					}
				}
			};

			/**
			 * @deprecated
			 */
			Pending.prototype.notify = function(x) {
				if(!this.resolved) {
					tasks.enqueue(new ProgressTask(x, this));
				}
			};

			Pending.prototype.fail = function(context) {
				var c = typeof context === 'undefined' ? this.context : context;
				this.resolved && this.handler.join().fail(c);
			};

			Pending.prototype._report = function(context) {
				this.resolved && this.handler.join()._report(context);
			};

			Pending.prototype._unreport = function() {
				this.resolved && this.handler.join()._unreport();
			};

			/**
			 * Wrap another handler and force it into a future stack
			 * @param {object} handler
			 * @constructor
			 */
			function Async(handler) {
				this.handler = handler;
			}

			inherit(Handler, Async);

			Async.prototype.when = function(continuation) {
				tasks.enqueue(new ContinuationTask(continuation, this));
			};

			Async.prototype._report = function(context) {
				this.join()._report(context);
			};

			Async.prototype._unreport = function() {
				this.join()._unreport();
			};

			/**
			 * Handler that wraps an untrusted thenable and assimilates it in a future stack
			 * @param {function} then
			 * @param {{then: function}} thenable
			 * @constructor
			 */
			function Thenable(then, thenable) {
				Pending.call(this);
				tasks.enqueue(new AssimilateTask(then, thenable, this));
			}

			inherit(Pending, Thenable);

			/**
			 * Handler for a fulfilled promise
			 * @param {*} x fulfillment value
			 * @constructor
			 */
			function Fulfilled(x) {
				Promise.createContext(this);
				this.value = x;
			}

			inherit(Handler, Fulfilled);

			Fulfilled.prototype._state = 1;

			Fulfilled.prototype.fold = function(f, z, c, to) {
				runContinuation3(f, z, this, c, to);
			};

			Fulfilled.prototype.when = function(cont) {
				runContinuation1(cont.fulfilled, this, cont.receiver, cont.resolver);
			};

			var errorId = 0;

			/**
			 * Handler for a rejected promise
			 * @param {*} x rejection reason
			 * @constructor
			 */
			function Rejected(x) {
				Promise.createContext(this);

				this.id = ++errorId;
				this.value = x;
				this.handled = false;
				this.reported = false;

				this._report();
			}

			inherit(Handler, Rejected);

			Rejected.prototype._state = -1;

			Rejected.prototype.fold = function(f, z, c, to) {
				to.become(this);
			};

			Rejected.prototype.when = function(cont) {
				if(typeof cont.rejected === 'function') {
					this._unreport();
				}
				runContinuation1(cont.rejected, this, cont.receiver, cont.resolver);
			};

			Rejected.prototype._report = function(context) {
				tasks.afterQueue(new ReportTask(this, context));
			};

			Rejected.prototype._unreport = function() {
				if(this.handled) {
					return;
				}
				this.handled = true;
				tasks.afterQueue(new UnreportTask(this));
			};

			Rejected.prototype.fail = function(context) {
				this.reported = true;
				emitRejection('unhandledRejection', this);
				Promise.onFatalRejection(this, context === void 0 ? this.context : context);
			};

			function ReportTask(rejection, context) {
				this.rejection = rejection;
				this.context = context;
			}

			ReportTask.prototype.run = function() {
				if(!this.rejection.handled && !this.rejection.reported) {
					this.rejection.reported = true;
					emitRejection('unhandledRejection', this.rejection) ||
						Promise.onPotentiallyUnhandledRejection(this.rejection, this.context);
				}
			};

			function UnreportTask(rejection) {
				this.rejection = rejection;
			}

			UnreportTask.prototype.run = function() {
				if(this.rejection.reported) {
					emitRejection('rejectionHandled', this.rejection) ||
						Promise.onPotentiallyUnhandledRejectionHandled(this.rejection);
				}
			};

			// Unhandled rejection hooks
			// By default, everything is a noop

			Promise.createContext
				= Promise.enterContext
				= Promise.exitContext
				= Promise.onPotentiallyUnhandledRejection
				= Promise.onPotentiallyUnhandledRejectionHandled
				= Promise.onFatalRejection
				= noop;

			// Errors and singletons

			var foreverPendingHandler = new Handler();
			var foreverPendingPromise = new Promise(Handler, foreverPendingHandler);

			function cycle() {
				return new Rejected(new TypeError('Promise cycle'));
			}

			// Task runners

			/**
			 * Run a single consumer
			 * @constructor
			 */
			function ContinuationTask(continuation, handler) {
				this.continuation = continuation;
				this.handler = handler;
			}

			ContinuationTask.prototype.run = function() {
				this.handler.join().when(this.continuation);
			};

			/**
			 * Run a queue of progress handlers
			 * @constructor
			 */
			function ProgressTask(value, handler) {
				this.handler = handler;
				this.value = value;
			}

			ProgressTask.prototype.run = function() {
				var q = this.handler.consumers;
				if(q === void 0) {
					return;
				}

				for (var c, i = 0; i < q.length; ++i) {
					c = q[i];
					runNotify(c.progress, this.value, this.handler, c.receiver, c.resolver);
				}
			};

			/**
			 * Assimilate a thenable, sending it's value to resolver
			 * @param {function} then
			 * @param {object|function} thenable
			 * @param {object} resolver
			 * @constructor
			 */
			function AssimilateTask(then, thenable, resolver) {
				this._then = then;
				this.thenable = thenable;
				this.resolver = resolver;
			}

			AssimilateTask.prototype.run = function() {
				var h = this.resolver;
				tryAssimilate(this._then, this.thenable, _resolve, _reject, _notify);

				function _resolve(x) { h.resolve(x); }
				function _reject(x)  { h.reject(x); }
				function _notify(x)  { h.notify(x); }
			};

			function tryAssimilate(then, thenable, resolve, reject, notify) {
				try {
					then.call(thenable, resolve, reject, notify);
				} catch (e) {
					reject(e);
				}
			}

			/**
			 * Fold a handler value with z
			 * @constructor
			 */
			function Fold(f, z, c, to) {
				this.f = f; this.z = z; this.c = c; this.to = to;
				this.resolver = failIfRejected;
				this.receiver = this;
			}

			Fold.prototype.fulfilled = function(x) {
				this.f.call(this.c, this.z, x, this.to);
			};

			Fold.prototype.rejected = function(x) {
				this.to.reject(x);
			};

			Fold.prototype.progress = function(x) {
				this.to.notify(x);
			};

			// Other helpers

			/**
			 * @param {*} x
			 * @returns {boolean} true iff x is a trusted Promise
			 */
			function isPromise(x) {
				return x instanceof Promise;
			}

			/**
			 * Test just enough to rule out primitives, in order to take faster
			 * paths in some code
			 * @param {*} x
			 * @returns {boolean} false iff x is guaranteed *not* to be a thenable
			 */
			function maybeThenable(x) {
				return (typeof x === 'object' || typeof x === 'function') && x !== null;
			}

			function runContinuation1(f, h, receiver, next) {
				if(typeof f !== 'function') {
					return next.become(h);
				}

				Promise.enterContext(h);
				tryCatchReject(f, h.value, receiver, next);
				Promise.exitContext();
			}

			function runContinuation3(f, x, h, receiver, next) {
				if(typeof f !== 'function') {
					return next.become(h);
				}

				Promise.enterContext(h);
				tryCatchReject3(f, x, h.value, receiver, next);
				Promise.exitContext();
			}

			/**
			 * @deprecated
			 */
			function runNotify(f, x, h, receiver, next) {
				if(typeof f !== 'function') {
					return next.notify(x);
				}

				Promise.enterContext(h);
				tryCatchReturn(f, x, receiver, next);
				Promise.exitContext();
			}

			function tryCatch2(f, a, b) {
				try {
					return f(a, b);
				} catch(e) {
					return reject(e);
				}
			}

			/**
			 * Return f.call(thisArg, x), or if it throws return a rejected promise for
			 * the thrown exception
			 */
			function tryCatchReject(f, x, thisArg, next) {
				try {
					next.become(getHandler(f.call(thisArg, x)));
				} catch(e) {
					next.become(new Rejected(e));
				}
			}

			/**
			 * Same as above, but includes the extra argument parameter.
			 */
			function tryCatchReject3(f, x, y, thisArg, next) {
				try {
					f.call(thisArg, x, y, next);
				} catch(e) {
					next.become(new Rejected(e));
				}
			}

			/**
			 * @deprecated
			 * Return f.call(thisArg, x), or if it throws, *return* the exception
			 */
			function tryCatchReturn(f, x, thisArg, next) {
				try {
					next.notify(f.call(thisArg, x));
				} catch(e) {
					next.notify(e);
				}
			}

			function inherit(Parent, Child) {
				Child.prototype = objectCreate(Parent.prototype);
				Child.prototype.constructor = Child;
			}

			function snd(x, y) {
				return y;
			}

			function noop() {}

			function initEmitRejection() {
				/*global process, self, CustomEvent*/
				if(typeof process !== 'undefined' && process !== null
					&& typeof process.emit === 'function') {
					// Returning falsy here means to call the default
					// onPotentiallyUnhandledRejection API.  This is safe even in
					// browserify since process.emit always returns falsy in browserify:
					// https://github.com/defunctzombie/node-process/blob/master/browser.js#L40-L46
					return function(type, rejection) {
						return type === 'unhandledRejection'
							? process.emit(type, rejection.value, rejection)
							: process.emit(type, rejection);
					};
				} else if(typeof self !== 'undefined' && typeof CustomEvent === 'function') {
					return (function(noop, self, CustomEvent) {
						var hasCustomEvent = false;
						try {
							var ev = new CustomEvent('unhandledRejection');
							hasCustomEvent = ev instanceof CustomEvent;
						} catch (e) {}

						return !hasCustomEvent ? noop : function(type, rejection) {
							var ev = new CustomEvent(type, {
								detail: {
									reason: rejection.value,
									key: rejection
								},
								bubbles: false,
								cancelable: true
							});

							return !self.dispatchEvent(ev);
						};
					}(noop, self, CustomEvent));
				}

				return noop;
			}

			return Promise;
		};
	});
	}(typeof define === 'function' && define.amd ? define : function(factory) { module.exports = factory(); }));

	},{}]},{},[1])
	(1)
	});
	;if (typeof systemJSBootstrap !== 'undefined')
	  systemJSBootstrap();})();

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698)))

/***/ },
/* 736 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/*
	 * SystemJS v0.19.27
	 */
	!function(e){function t(e,n){if("string"!=typeof e)throw new TypeError("URL must be a string");var r=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);if(!r)throw new RangeError("Invalid URL format");var a=r[1]||"",o=r[2]||"",i=r[3]||"",s=r[4]||"",d=r[5]||"",l=r[6]||"",u=r[7]||"",c=r[8]||"",f=r[9]||"";if(void 0!==n){var m=n instanceof t?n:new t(n),p=!a&&!s&&!o;!p||u||c||(c=m.search),p&&"/"!==u[0]&&(u=u?(!m.host&&!m.username||m.pathname?"":"/")+m.pathname.slice(0,m.pathname.lastIndexOf("/")+1)+u:m.pathname);var h=[];u.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,function(e){"/.."===e?h.pop():h.push(e)}),u=h.join("").replace(/^\//,"/"===u[0]?"/":""),p&&(l=m.port,d=m.hostname,s=m.host,i=m.password,o=m.username),a||(a=m.protocol)}"file:"==a&&(u=u.replace(/\\/g,"/")),this.origin=s?a+(""!==a||""!==s?"//":"")+s:"",this.href=a+(a&&s||"file:"==a?"//":"")+(""!==o?o+(""!==i?":"+i:"")+"@":"")+s+u+c+f,this.protocol=a,this.username=o,this.password=i,this.host=s,this.hostname=d,this.port=l,this.pathname=u,this.search=c,this.hash=f}e.URLPolyfill=t}("undefined"!=typeof self?self:global),function(e){function t(e,t){if(!e.originalErr)for(var n=(e.stack||e.message||e).split("\n"),r=[],a=0;a<n.length;a++)("undefined"==typeof $__curScript||-1==n[a].indexOf($__curScript.src))&&r.push(n[a]);var o=(r?r.join("\n	"):e.message)+"\n	"+t;b||(o=o.replace(w?/file:\/\/\//g:/file:\/\//g,""));var i=_?new Error(o,e.fileName,e.lineNumber):new Error(o);return b?i.stack=null:i.stack=o,i.originalErr=e.originalErr||e,i}function n(e,n,r){try{new Function(e).call(r)}catch(a){throw t(a,"Evaluating "+n)}}function r(){}function a(t){this._loader={loaderObj:this,loads:[],modules:{},importPromises:{},moduleRecords:{}},x(this,"global",{get:function(){return e}})}function o(){a.call(this),this.paths={}}function i(e,t){var n,r="",a=0;for(var o in e){var i=o.split("*");if(i.length>2)throw new TypeError("Only one wildcard in a path is permitted");if(1==i.length){if(t==o)return e[o];if(t.substr(0,o.length-1)==o.substr(0,o.length-1)&&(t.length<o.length||t[o.length-1]==o[o.length-1])&&"/"==e[o][e[o].length-1])return e[o].substr(0,e[o].length-1)+(t.length>o.length?"/"+t.substr(o.length):"")}else{var s=i[0].length;s>=a&&t.substr(0,i[0].length)==i[0]&&t.substr(t.length-i[1].length)==i[1]&&(a=s,r=o,n=t.substr(i[0].length,t.length-i[1].length-i[0].length))}}var d=e[r];return"string"==typeof n&&(d=d.replace("*",n)),d}function s(){}function d(){o.call(this),I.call(this)}function l(){}function u(e,t){d.prototype[e]=t(d.prototype[e]||function(){})}function c(e){I=e(I||function(){})}function f(e){for(var t=[],n=[],r=0,a=e.length;a>r;r++){var o=S.call(t,e[r]);-1===o?(t.push(e[r]),n.push([r])):n[o].push(r)}return{names:t,indices:n}}function m(e){var t={};if("object"==typeof e||"function"==typeof e){var n=e&&e.hasOwnProperty;if(D)for(var r in e)h(t,e,r)||p(t,e,r,n);else for(var r in e)p(t,e,r,n)}return t["default"]=e,x(t,"__useDefault",{value:!0}),t}function p(e,t,n,r){(!r||t.hasOwnProperty(n))&&(e[n]=t[n])}function h(e,t,n){try{var r;return(r=Object.getOwnPropertyDescriptor(t,n))&&x(e,n,r),!0}catch(a){return!1}}function v(e){var t=e.match(z);return t&&"System.register"==e.substr(t[0].length,15)}function g(){return{name:null,deps:null,originalIndices:null,declare:null,execute:null,executingRequire:!1,declarative:!1,normalizedDeps:null,groupIndex:null,evaluated:!1,module:null,esModule:null,esmExports:!1}}var y="undefined"==typeof window&&"undefined"!=typeof self&&"undefined"!=typeof importScripts,b="undefined"!=typeof window&&"undefined"!=typeof document,w="undefined"!=typeof process&&"undefined"!=typeof process.platform&&!!process.platform.match(/^win/);e.console||(e.console={assert:function(){}});var x,S=Array.prototype.indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(this[t]===e)return t;return-1};!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,t,n){try{e[t]=n.value||n.get.call(e)}catch(r){}}}}();var E,_="_"==new Error(0,"_").fileName;if("undefined"!=typeof document&&document.getElementsByTagName){if(E=document.baseURI,!E){var O=document.getElementsByTagName("base");E=O[0]&&O[0].href||window.location.href}E=E.split("#")[0].split("?")[0],E=E.substr(0,E.lastIndexOf("/")+1)}else if("undefined"!=typeof process&&process.cwd)E="file://"+(w?"/":"")+process.cwd()+"/",w&&(E=E.replace(/\\/g,"/"));else{if("undefined"==typeof location)throw new TypeError("No environment baseURI");E=e.location.href}try{var j="test:"==new e.URL("test:///").protocol}catch(P){}var k=j?e.URL:e.URLPolyfill;x(r.prototype,"toString",{value:function(){return"Module"}}),function(){function o(e){return{status:"loading",name:e,linkSets:[],dependencies:[],metadata:{}}}function i(e,t,n){return new Promise(c({step:n.address?"fetch":"locate",loader:e,moduleName:t,moduleMetadata:n&&n.metadata||{},moduleSource:n.source,moduleAddress:n.address}))}function s(e,t,n,r){return new Promise(function(a,o){a(e.loaderObj.normalize(t,n,r))}).then(function(t){var n;if(e.modules[t])return n=o(t),n.status="linked",n.module=e.modules[t],n;for(var r=0,a=e.loads.length;a>r;r++)if(n=e.loads[r],n.name==t)return n;return n=o(t),e.loads.push(n),d(e,n),n})}function d(e,t){l(e,t,Promise.resolve().then(function(){return e.loaderObj.locate({name:t.name,metadata:t.metadata})}))}function l(e,t,n){u(e,t,n.then(function(n){return"loading"==t.status?(t.address=n,e.loaderObj.fetch({name:t.name,metadata:t.metadata,address:n})):void 0}))}function u(t,r,a){a.then(function(a){return"loading"==r.status?Promise.resolve(t.loaderObj.translate({name:r.name,metadata:r.metadata,address:r.address,source:a})).then(function(e){return r.source=e,t.loaderObj.instantiate({name:r.name,metadata:r.metadata,address:r.address,source:e})}).then(function(a){if(void 0===a)return r.address=r.address||"<Anonymous Module "+ ++j+">",r.isDeclarative=!0,O.call(t.loaderObj,r).then(function(t){var a=e.System,o=a.register;a.register=function(e,t,n){"string"!=typeof e&&(n=t,t=e),r.declare=n,r.depsList=t},n(t,r.address,{}),a.register=o});if("object"!=typeof a)throw TypeError("Invalid instantiate return value");r.depsList=a.deps||[],r.execute=a.execute,r.isDeclarative=!1}).then(function(){r.dependencies=[];for(var e=r.depsList,n=[],a=0,o=e.length;o>a;a++)(function(e,a){n.push(s(t,e,r.name,r.address).then(function(t){if(r.dependencies[a]={key:e,value:t.name},"linked"!=t.status)for(var n=r.linkSets.concat([]),o=0,i=n.length;i>o;o++)m(n[o],t)}))})(e[a],a);return Promise.all(n)}).then(function(){r.status="loaded";for(var e=r.linkSets.concat([]),t=0,n=e.length;n>t;t++)h(e[t],r)}):void 0})["catch"](function(e){r.status="failed",r.exception=e;for(var t=r.linkSets.concat([]),n=0,a=t.length;a>n;n++)v(t[n],r,e)})}function c(e){return function(t,n){var r=e.loader,a=e.moduleName,i=e.step;if(r.modules[a])throw new TypeError('"'+a+'" already exists in the module table');for(var s,c=0,m=r.loads.length;m>c;c++)if(r.loads[c].name==a&&(s=r.loads[c],"translate"!=i||s.source||(s.address=e.moduleAddress,u(r,s,Promise.resolve(e.moduleSource))),s.linkSets.length&&s.linkSets[0].loads[0].name==s.name))return s.linkSets[0].done.then(function(){t(s)});var p=s||o(a);p.metadata=e.moduleMetadata;var h=f(r,p);r.loads.push(p),t(h.done),"locate"==i?d(r,p):"fetch"==i?l(r,p,Promise.resolve(e.moduleAddress)):(p.address=e.moduleAddress,u(r,p,Promise.resolve(e.moduleSource)))}}function f(e,t){var n={loader:e,loads:[],startingLoad:t,loadingCount:0};return n.done=new Promise(function(e,t){n.resolve=e,n.reject=t}),m(n,t),n}function m(e,t){if("failed"!=t.status){for(var n=0,r=e.loads.length;r>n;n++)if(e.loads[n]==t)return;e.loads.push(t),t.linkSets.push(e),"loaded"!=t.status&&e.loadingCount++;for(var a=e.loader,n=0,r=t.dependencies.length;r>n;n++)if(t.dependencies[n]){var o=t.dependencies[n].value;if(!a.modules[o])for(var i=0,s=a.loads.length;s>i;i++)if(a.loads[i].name==o){m(e,a.loads[i]);break}}}}function p(e){var t=!1;try{w(e,function(n,r){v(e,n,r),t=!0})}catch(n){v(e,null,n),t=!0}return t}function h(e,t){if(e.loadingCount--,!(e.loadingCount>0)){var n=e.startingLoad;if(e.loader.loaderObj.execute===!1){for(var r=[].concat(e.loads),a=0,o=r.length;o>a;a++){var t=r[a];t.module=t.isDeclarative?{name:t.name,module:P({}),evaluated:!0}:{module:P({})},t.status="linked",g(e.loader,t)}return e.resolve(n)}var i=p(e);i||e.resolve(n)}}function v(e,n,r){var a=e.loader;e:if(n)if(e.loads[0].name==n.name)r=t(r,"Error loading "+n.name);else{for(var o=0;o<e.loads.length;o++)for(var i=e.loads[o],s=0;s<i.dependencies.length;s++){var d=i.dependencies[s];if(d.value==n.name){r=t(r,"Error loading "+n.name+' as "'+d.key+'" from '+i.name);break e}}r=t(r,"Error loading "+n.name+" from "+e.loads[0].name)}else r=t(r,"Error linking "+e.loads[0].name);for(var l=e.loads.concat([]),o=0,u=l.length;u>o;o++){var n=l[o];a.loaderObj.failed=a.loaderObj.failed||[],-1==S.call(a.loaderObj.failed,n)&&a.loaderObj.failed.push(n);var c=S.call(n.linkSets,e);if(n.linkSets.splice(c,1),0==n.linkSets.length){var f=S.call(e.loader.loads,n);-1!=f&&e.loader.loads.splice(f,1)}}e.reject(r)}function g(e,t){if(e.loaderObj.trace){e.loaderObj.loads||(e.loaderObj.loads={});var n={};t.dependencies.forEach(function(e){n[e.key]=e.value}),e.loaderObj.loads[t.name]={name:t.name,deps:t.dependencies.map(function(e){return e.key}),depMap:n,address:t.address,metadata:t.metadata,source:t.source,kind:t.isDeclarative?"declarative":"dynamic"}}t.name&&(e.modules[t.name]=t.module);var r=S.call(e.loads,t);-1!=r&&e.loads.splice(r,1);for(var a=0,o=t.linkSets.length;o>a;a++)r=S.call(t.linkSets[a].loads,t),-1!=r&&t.linkSets[a].loads.splice(r,1);t.linkSets.splice(0,t.linkSets.length)}function y(e,t,n){try{var a=t.execute()}catch(o){return void n(t,o)}return a&&a instanceof r?a:void n(t,new TypeError("Execution must define a Module instance"))}function b(e,t,n){var r=e._loader.importPromises;return r[t]=n.then(function(e){return r[t]=void 0,e},function(e){throw r[t]=void 0,e})}function w(e,t){var n=e.loader;if(e.loads.length)for(var r=e.loads.concat([]),a=0;a<r.length;a++){var o=r[a],i=y(e,o,t);if(!i)return;o.module={name:o.name,module:i},o.status="linked",g(n,o)}}function E(e,t){return t.module.module}function _(){}function O(){throw new TypeError("ES6 transpilation is only provided in the dev module loader build.")}var j=0;a.prototype={constructor:a,define:function(e,t,n){if(this._loader.importPromises[e])throw new TypeError("Module is already loading.");return b(this,e,new Promise(c({step:"translate",loader:this._loader,moduleName:e,moduleMetadata:n&&n.metadata||{},moduleSource:t,moduleAddress:n&&n.address})))},"delete":function(e){var t=this._loader;return delete t.importPromises[e],delete t.moduleRecords[e],t.modules[e]?delete t.modules[e]:!1},get:function(e){return this._loader.modules[e]?(_(this._loader.modules[e],[],this),this._loader.modules[e].module):void 0},has:function(e){return!!this._loader.modules[e]},"import":function(e,t,n){"object"==typeof t&&(t=t.name);var r=this;return Promise.resolve(r.normalize(e,t)).then(function(e){var t=r._loader;return t.modules[e]?(_(t.modules[e],[],t._loader),t.modules[e].module):t.importPromises[e]||b(r,e,i(t,e,{}).then(function(n){return delete t.importPromises[e],E(t,n)}))})},load:function(e){var t=this._loader;return t.modules[e]?Promise.resolve():t.importPromises[e]||b(this,e,new Promise(c({step:"locate",loader:t,moduleName:e,moduleMetadata:{},moduleSource:void 0,moduleAddress:void 0})).then(function(){delete t.importPromises[e]}))},module:function(e,t){var n=o();n.address=t&&t.address;var r=f(this._loader,n),a=Promise.resolve(e),i=this._loader,s=r.done.then(function(){return E(i,n)});return u(i,n,a),s},newModule:function(e){if("object"!=typeof e)throw new TypeError("Expected object");var t=new r,n=[];if(Object.getOwnPropertyNames&&null!=e)n=Object.getOwnPropertyNames(e);else for(var a in e)n.push(a);for(var o=0;o<n.length;o++)(function(n){x(t,n,{configurable:!1,enumerable:!0,get:function(){return e[n]},set:function(){throw new Error("Module exports cannot be changed externally.")}})})(n[o]);return Object.freeze&&Object.freeze(t),t},set:function(e,t){if(!(t instanceof r))throw new TypeError("Loader.set("+e+", module) must be a module");this._loader.modules[e]={module:t}},normalize:function(e,t,n){return e},locate:function(e){return e.name},fetch:function(e){},translate:function(e){return e.source},instantiate:function(e){}};var P=a.prototype.newModule}();var R;s.prototype=a.prototype,o.prototype=new s;var M=/^([^\/]+:\/\/|\/)/;o.prototype.normalize=function(e,t,n){return e=e.match(M)||"."==e[0]?new k(e,t||E).href:new k(i(this.paths,e)||e,E).href},o.prototype.locate=function(e){return e.name},o.prototype.instantiate=function(t){var r=this;return Promise.resolve(r.normalize(r.transpiler)).then(function(a){return t.address===a?{deps:[],execute:function(){var a=e.System,o=e.Reflect.Loader;return n("(function(require,exports,module){"+t.source+"})();",t.address,e),e.System=a,e.Reflect.Loader=o,r.newModule({"default":e[r.transpiler],__useDefault:!0})}}:void 0})},l.prototype=o.prototype,d.prototype=new l,d.prototype.constructor=d,d.prototype.instantiate=function(){};var I,D=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(P){D=!1}!function(){function t(){if(i&&"interactive"===i.script.readyState)return i.load;for(var e=0;e<l.length;e++)if("interactive"==l[e].script.readyState)return i=l[e],i.load}function n(e,t){return new Promise(function(e,n){t.metadata.integrity&&n(new Error("Subresource integrity checking is not supported in web workers.")),s=t;try{importScripts(t.address)}catch(r){s=null,n(r)}s=null,t.metadata.entry||n(new Error(t.address+" did not call System.register or AMD define")),e("")})}if("undefined"!=typeof document)var r=document.getElementsByTagName("head")[0];var a,o,i,s=null,d=r&&function(){var e=document.createElement("script"),t="undefined"!=typeof opera&&"[object Opera]"===opera.toString();return e.attachEvent&&!(e.attachEvent.toString&&e.attachEvent.toString().indexOf("[native code")<0)&&!t}(),l=[],c=0,f=[];u("pushRegister_",function(e){return function(n){return e.call(this,n)?!1:(s?this.reduceRegister_(s,n):d?this.reduceRegister_(t(),n):c?f.push(n):this.reduceRegister_(null,n),!0)}}),u("fetch",function(t){return function(s){var u=this;return"json"!=s.metadata.format&&s.metadata.scriptLoad&&(b||y)?y?n(u,s):new Promise(function(t,n){function m(e){if(!v.readyState||"loaded"==v.readyState||"complete"==v.readyState){if(c--,s.metadata.entry||f.length){if(!d){for(var r=0;r<f.length;r++)u.reduceRegister_(s,f[r]);f=[]}}else u.reduceRegister_(s);h(),s.metadata.entry||s.metadata.bundle||n(new Error(s.name+" did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.")),t("")}}function p(e){h(),n(new Error("Unable to load script "+s.address))}function h(){if(e.System=a,e.require=o,v.detachEvent){v.detachEvent("onreadystatechange",m);for(var t=0;t<l.length;t++)l[t].script==v&&(i&&i.script==v&&(i=null),l.splice(t,1))}else v.removeEventListener("load",m,!1),v.removeEventListener("error",p,!1);r.removeChild(v)}var v=document.createElement("script");v.async=!0,s.metadata.crossOrigin&&(v.crossOrigin=s.metadata.crossOrigin),s.metadata.integrity&&v.setAttribute("integrity",s.metadata.integrity),d?(v.attachEvent("onreadystatechange",m),l.push({script:v,load:s})):(v.addEventListener("load",m,!1),v.addEventListener("error",p,!1)),c++,a=e.System,o=e.require,v.src=s.address,r.appendChild(v)}):t.call(this,s)}})}();var z=/^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;!function(){function t(e,n,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==S.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var a=0,o=e.normalizedDeps.length;o>a;a++){var i=e.normalizedDeps[a],s=n.defined[i];if(s&&!s.evaluated){var d=e.groupIndex+(s.declarative!=e.declarative);if(null===s.groupIndex||s.groupIndex<d){if(null!==s.groupIndex&&(r[s.groupIndex].splice(S.call(r[s.groupIndex],s),1),0==r[s.groupIndex].length))throw new Error("Mixed dependency cycle detected");s.groupIndex=d}t(s,n,r)}}}}function n(e,n){var r=n.defined[e];if(!r.module){r.groupIndex=0;var a=[];t(r,n,a);for(var o=!!r.declarative==a.length%2,s=a.length-1;s>=0;s--){for(var d=a[s],u=0;u<d.length;u++){var c=d[u];o?i(c,n):l(c,n)}o=!o}}}function a(){}function o(e,t){return t[e]||(t[e]={name:e,dependencies:[],exports:new a,importers:[]})}function i(t,n){if(!t.module){var r=n._loader.moduleRecords,a=t.module=o(t.name,r),s=t.module.exports,d=t.declare.call(e,function(e,t){if(a.locked=!0,"object"==typeof e)for(var n in e)s[n]=e[n];else s[e]=t;for(var r=0,o=a.importers.length;o>r;r++){var i=a.importers[r];if(!i.locked){var d=S.call(i.dependencies,a);i.setters[d](s)}}return a.locked=!1,t},{id:t.name});if(a.setters=d.setters,a.execute=d.execute,!a.setters||!a.execute)throw new TypeError("Invalid System.register form for "+t.name);for(var l=0,u=t.normalizedDeps.length;u>l;l++){var c,f=t.normalizedDeps[l],m=n.defined[f],p=r[f];p?c=p.exports:m&&!m.declarative?c=m.esModule:m?(i(m,n),p=m.module,c=p.exports):c=n.get(f),p&&p.importers?(p.importers.push(a),a.dependencies.push(p)):a.dependencies.push(null);for(var h=t.originalIndices[l],v=0,g=h.length;g>v;++v){var y=h[v];a.setters[y]&&a.setters[y](c)}}}}function s(e,t){var n,r=t.defined[e];if(r)r.declarative?p(e,[],t):r.evaluated||l(r,t),n=r.module.exports;else if(n=t.get(e),!n)throw new Error("Unable to load dependency "+e+".");return(!r||r.declarative)&&n&&n.__useDefault?n["default"]:n}function l(t,n){if(!t.module){var a={},o=t.module={exports:a,id:t.name};if(!t.executingRequire)for(var i=0,d=t.normalizedDeps.length;d>i;i++){var u=t.normalizedDeps[i],c=n.defined[u];c&&l(c,n)}t.evaluated=!0;var f=t.execute.call(e,function(e){for(var r=0,a=t.deps.length;a>r;r++)if(t.deps[r]==e)return s(t.normalizedDeps[r],n);var o=n.normalizeSync(e,t.name);if(-1!=S.call(t.normalizedDeps,o))return s(o,n);throw new Error("Module "+e+" not declared as a dependency of "+t.name)},a,o);f&&(o.exports=f),a=o.exports,a&&(a.__esModule||a instanceof r)?t.esModule=a:t.esmExports&&a!==e?t.esModule=m(a):t.esModule={"default":a}}}function p(t,n,r){var a=r.defined[t];if(a&&!a.evaluated&&a.declarative){n.push(t);for(var o=0,i=a.normalizedDeps.length;i>o;o++){var s=a.normalizedDeps[o];-1==S.call(n,s)&&(r.defined[s]?p(s,n,r):r.get(s))}a.evaluated||(a.evaluated=!0,a.module.execute.call(e))}}d.prototype.register=function(e,t,n){if("string"!=typeof e&&(n=t,t=e,e=null),"boolean"==typeof n)return this.registerDynamic.apply(this,arguments);var r=g();r.name=e&&(this.decanonicalize||this.normalize).call(this,e),r.declarative=!0,r.deps=t,r.declare=n,this.pushRegister_({amd:!1,entry:r})},d.prototype.registerDynamic=function(e,t,n,r){"string"!=typeof e&&(r=n,n=t,t=e,e=null);var a=g();a.name=e&&(this.decanonicalize||this.normalize).call(this,e),a.deps=t,a.execute=r,a.executingRequire=n,this.pushRegister_({amd:!1,entry:a})},u("reduceRegister_",function(){return function(e,t){if(t){var n=t.entry,r=e&&e.metadata;if(n.name&&(n.name in this.defined||(this.defined[n.name]=n),r&&(r.bundle=!0)),!n.name||e&&n.name==e.name){if(!r)throw new TypeError("Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.");if(r.entry)throw"register"==r.format?new Error("Multiple anonymous System.register calls in module "+e.name+". If loading a bundle, ensure all the System.register calls are named."):new Error("Module "+e.name+" interpreted as "+r.format+" module format, but called System.register.");r.format||(r.format="register"),r.entry=n}}}}),c(function(e){return function(){e.call(this),this.defined={},this._loader.moduleRecords={}}}),x(a,"toString",{value:function(){return"Module"}}),u("delete",function(e){return function(t){return delete this._loader.moduleRecords[t],delete this.defined[t],e.call(this,t)}}),u("fetch",function(e){return function(t){return this.defined[t.name]?(t.metadata.format="defined",""):(t.metadata.deps=t.metadata.deps||[],e.call(this,t))}}),u("translate",function(e){return function(t){return t.metadata.deps=t.metadata.deps||[],Promise.resolve(e.call(this,t)).then(function(e){return("register"==t.metadata.format||!t.metadata.format&&v(t.source))&&(t.metadata.format="register"),e})}}),u("instantiate",function(e){return function(t){"detect"==t.metadata.format&&(t.metadata.format=void 0),e.call(this,t);var r,a=this;if(a.defined[t.name])r=a.defined[t.name],r.declarative||(r.deps=r.deps.concat(t.metadata.deps));else if(t.metadata.entry)r=t.metadata.entry,r.deps=r.deps.concat(t.metadata.deps);else if(!(a.builder&&t.metadata.bundle||"register"!=t.metadata.format&&"esm"!=t.metadata.format&&"es6"!=t.metadata.format)){if("undefined"!=typeof __exec&&__exec.call(a,t),!t.metadata.entry&&!t.metadata.bundle)throw new Error(t.name+" detected as "+t.metadata.format+" but didn't execute.");r=t.metadata.entry,r&&t.metadata.deps&&(r.deps=r.deps.concat(t.metadata.deps))}r||(r=g(),r.deps=t.metadata.deps,r.execute=function(){}),a.defined[t.name]=r;var o=f(r.deps);r.deps=o.names,r.originalIndices=o.indices,r.name=t.name,r.esmExports=t.metadata.esmExports!==!1;for(var i=[],s=0,d=r.deps.length;d>s;s++)i.push(Promise.resolve(a.normalize(r.deps[s],t.name)));return Promise.all(i).then(function(e){return r.normalizedDeps=e,{deps:r.deps,execute:function(){return n(t.name,a),p(t.name,[],a),a.defined[t.name]=void 0,a.newModule(r.declarative?r.module.exports:r.esModule)}}})}})}(),function(){c(function(e){return function(){e.call(this),this.bundles={},this._loader.loadedBundles={}}}),u("locate",function(e){return function(t){var n=this,r=!1;if(!(t.name in n.defined))for(var a in n.bundles){for(var o=0;o<n.bundles[a].length;o++){var i=n.bundles[a][o];if(i==t.name){r=!0;break}if(-1!=i.indexOf("*")){var s=i.split("*");if(2!=s.length){n.bundles[a].splice(o--,1);continue}if(t.name.substring(0,s[0].length)==s[0]&&t.name.substr(t.name.length-s[1].length,s[1].length)==s[1]&&-1==t.name.substr(s[0].length,t.name.length-s[1].length-s[0].length).indexOf("/")){r=!0;break}}}if(r)return n["import"](a).then(function(){return e.call(n,t)})}return e.call(n,t)}})}(),c(function(t){return function(){t.apply(this,arguments),e.define=this.amdDefine}}),u("fetch",function(e){return function(t){return t.metadata.scriptLoad=!0,e.call(this,t)}}),R=new d,e.SystemJS=R,R.version="0.19.27 Register Only","object"==typeof exports&&(module.exports=a),e.Reflect=e.Reflect||{},e.Reflect.Loader=e.Reflect.Loader||a,e.Reflect.global=e.Reflect.global||e,e.LoaderPolyfill=a,R||(R=new o,R.constructor=o),"object"==typeof exports&&(module.exports=R),e.System=R}("undefined"!=typeof self?self:global);
	//# sourceMappingURL=system-register-only.js.map

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698)))

/***/ },
/* 737 */,
/* 738 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/*
	 * SystemJS v0.19.27
	 */
	// from https://gist.github.com/Yaffle/1088850
	(function(global) {
	function URLPolyfill(url, baseURL) {
	  if (typeof url != 'string')
	    throw new TypeError('URL must be a string');
	  var m = String(url).replace(/^\s+|\s+$/g, "").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
	  if (!m)
	    throw new RangeError('Invalid URL format');
	  var protocol = m[1] || "";
	  var username = m[2] || "";
	  var password = m[3] || "";
	  var host = m[4] || "";
	  var hostname = m[5] || "";
	  var port = m[6] || "";
	  var pathname = m[7] || "";
	  var search = m[8] || "";
	  var hash = m[9] || "";
	  if (baseURL !== undefined) {
	    var base = baseURL instanceof URLPolyfill ? baseURL : new URLPolyfill(baseURL);
	    var flag = !protocol && !host && !username;
	    if (flag && !pathname && !search)
	      search = base.search;
	    if (flag && pathname[0] !== "/")
	      pathname = (pathname ? (((base.host || base.username) && !base.pathname ? "/" : "") + base.pathname.slice(0, base.pathname.lastIndexOf("/") + 1) + pathname) : base.pathname);
	    // dot segments removal
	    var output = [];
	    pathname.replace(/^(\.\.?(\/|$))+/, "")
	      .replace(/\/(\.(\/|$))+/g, "/")
	      .replace(/\/\.\.$/, "/../")
	      .replace(/\/?[^\/]*/g, function (p) {
	        if (p === "/..")
	          output.pop();
	        else
	          output.push(p);
	      });
	    pathname = output.join("").replace(/^\//, pathname[0] === "/" ? "/" : "");
	    if (flag) {
	      port = base.port;
	      hostname = base.hostname;
	      host = base.host;
	      password = base.password;
	      username = base.username;
	    }
	    if (!protocol)
	      protocol = base.protocol;
	  }

	  // convert windows file URLs to use /
	  if (protocol == 'file:')
	    pathname = pathname.replace(/\\/g, '/');

	  this.origin = host ? protocol + (protocol !== "" || host !== "" ? "//" : "") + host : "";
	  this.href = protocol + (protocol && host || protocol == "file:" ? "//" : "") + (username !== "" ? username + (password !== "" ? ":" + password : "") + "@" : "") + host + pathname + search + hash;
	  this.protocol = protocol;
	  this.username = username;
	  this.password = password;
	  this.host = host;
	  this.hostname = hostname;
	  this.port = port;
	  this.pathname = pathname;
	  this.search = search;
	  this.hash = hash;
	}
	global.URLPolyfill = URLPolyfill;
	})(typeof self != 'undefined' ? self : global);(function(__global) {

	  var isWorker = typeof window == 'undefined' && typeof self != 'undefined' && typeof importScripts != 'undefined';
	  var isBrowser = typeof window != 'undefined' && typeof document != 'undefined';
	  var isWindows = typeof process != 'undefined' && typeof process.platform != 'undefined' && !!process.platform.match(/^win/);

	  if (!__global.console)
	    __global.console = { assert: function() {} };

	  // IE8 support
	  var indexOf = Array.prototype.indexOf || function(item) {
	    for (var i = 0, thisLen = this.length; i < thisLen; i++) {
	      if (this[i] === item) {
	        return i;
	      }
	    }
	    return -1;
	  };
	  
	  var defineProperty;
	  (function () {
	    try {
	      if (!!Object.defineProperty({}, 'a', {}))
	        defineProperty = Object.defineProperty;
	    }
	    catch (e) {
	      defineProperty = function(obj, prop, opt) {
	        try {
	          obj[prop] = opt.value || opt.get.call(obj);
	        }
	        catch(e) {}
	      }
	    }
	  })();

	  var errArgs = new Error(0, '_').fileName == '_';

	  function addToError(err, msg) {
	    // parse the stack removing loader code lines for simplification
	    if (!err.originalErr) {
	      var stack = (err.stack || err.message || err).split('\n');
	      var newStack = [];
	      for (var i = 0; i < stack.length; i++) {
	        if (typeof $__curScript == 'undefined' || stack[i].indexOf($__curScript.src) == -1)
	          newStack.push(stack[i]);
	      }
	    }

	    var newMsg = (newStack ? newStack.join('\n\t') : err.message) + '\n\t' + msg;

	    // Convert file:/// URLs to paths in Node
	    if (!isBrowser)
	      newMsg = newMsg.replace(isWindows ? /file:\/\/\//g : /file:\/\//g, '');

	    var newErr = errArgs ? new Error(newMsg, err.fileName, err.lineNumber) : new Error(newMsg);
	    
	    // Node needs stack adjustment for throw to show message
	    if (!isBrowser)
	      newErr.stack = newMsg;
	    // Clearing the stack stops unnecessary loader lines showing
	    else
	      newErr.stack = null;
	    
	    // track the original error
	    newErr.originalErr = err.originalErr || err;

	    return newErr;
	  }

	  function __eval(source, debugName, context) {
	    try {
	      new Function(source).call(context);
	    }
	    catch(e) {
	      throw addToError(e, 'Evaluating ' + debugName);
	    }
	  }

	  var baseURI;
	  // environent baseURI detection
	  if (typeof document != 'undefined' && document.getElementsByTagName) {
	    baseURI = document.baseURI;

	    if (!baseURI) {
	      var bases = document.getElementsByTagName('base');
	      baseURI = bases[0] && bases[0].href || window.location.href;
	    }

	    // sanitize out the hash and querystring
	    baseURI = baseURI.split('#')[0].split('?')[0];
	    baseURI = baseURI.substr(0, baseURI.lastIndexOf('/') + 1);
	  }
	  else if (typeof process != 'undefined' && process.cwd) {
	    baseURI = 'file://' + (isWindows ? '/' : '') + process.cwd() + '/';
	    if (isWindows)
	      baseURI = baseURI.replace(/\\/g, '/');
	  }
	  else if (typeof location != 'undefined') {
	    baseURI = __global.location.href;
	  }
	  else {
	    throw new TypeError('No environment baseURI');
	  }

	  try {
	    var nativeURL = new __global.URL('test:///').protocol == 'test:';
	  }
	  catch(e) {}

	  var URL = nativeURL ? __global.URL : __global.URLPolyfill;
	/*
	*********************************************************************************************

	  Dynamic Module Loader Polyfill

	    - Implemented exactly to the former 2014-08-24 ES6 Specification Draft Rev 27, Section 15
	      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#august_24_2014_draft_rev_27

	    - Functions are commented with their spec numbers, with spec differences commented.

	    - Spec bugs are commented in this code with links.

	    - Abstract functions have been combined where possible, and their associated functions
	      commented.

	    - Realm implementation is entirely omitted.

	*********************************************************************************************
	*/

	function Module() {}
	// http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag
	defineProperty(Module.prototype, 'toString', {
	  value: function() {
	    return 'Module';
	  }
	});
	function Loader(options) {
	  this._loader = {
	    loaderObj: this,
	    loads: [],
	    modules: {},
	    importPromises: {},
	    moduleRecords: {}
	  };

	  // 26.3.3.6
	  defineProperty(this, 'global', {
	    get: function() {
	      return __global;
	    }
	  });

	  // 26.3.3.13 realm not implemented
	}

	(function() {

	// Some Helpers

	// logs a linkset snapshot for debugging
	/* function snapshot(loader) {
	  console.log('---Snapshot---');
	  for (var i = 0; i < loader.loads.length; i++) {
	    var load = loader.loads[i];
	    var linkSetLog = '  ' + load.name + ' (' + load.status + '): ';

	    for (var j = 0; j < load.linkSets.length; j++) {
	      linkSetLog += '{' + logloads(load.linkSets[j].loads) + '} ';
	    }
	    console.log(linkSetLog);
	  }
	  console.log('');
	}
	function logloads(loads) {
	  var log = '';
	  for (var k = 0; k < loads.length; k++)
	    log += loads[k].name + (k != loads.length - 1 ? ' ' : '');
	  return log;
	} */


	/* function checkInvariants() {
	  // see https://bugs.ecmascript.org/show_bug.cgi?id=2603#c1

	  var loads = System._loader.loads;
	  var linkSets = [];

	  for (var i = 0; i < loads.length; i++) {
	    var load = loads[i];
	    console.assert(load.status == 'loading' || load.status == 'loaded', 'Each load is loading or loaded');

	    for (var j = 0; j < load.linkSets.length; j++) {
	      var linkSet = load.linkSets[j];

	      for (var k = 0; k < linkSet.loads.length; k++)
	        console.assert(loads.indexOf(linkSet.loads[k]) != -1, 'linkSet loads are a subset of loader loads');

	      if (linkSets.indexOf(linkSet) == -1)
	        linkSets.push(linkSet);
	    }
	  }

	  for (var i = 0; i < loads.length; i++) {
	    var load = loads[i];
	    for (var j = 0; j < linkSets.length; j++) {
	      var linkSet = linkSets[j];

	      if (linkSet.loads.indexOf(load) != -1)
	        console.assert(load.linkSets.indexOf(linkSet) != -1, 'linkSet contains load -> load contains linkSet');

	      if (load.linkSets.indexOf(linkSet) != -1)
	        console.assert(linkSet.loads.indexOf(load) != -1, 'load contains linkSet -> linkSet contains load');
	    }
	  }

	  for (var i = 0; i < linkSets.length; i++) {
	    var linkSet = linkSets[i];
	    for (var j = 0; j < linkSet.loads.length; j++) {
	      var load = linkSet.loads[j];

	      for (var k = 0; k < load.dependencies.length; k++) {
	        var depName = load.dependencies[k].value;
	        var depLoad;
	        for (var l = 0; l < loads.length; l++) {
	          if (loads[l].name != depName)
	            continue;
	          depLoad = loads[l];
	          break;
	        }

	        // loading records are allowed not to have their dependencies yet
	        // if (load.status != 'loading')
	        //  console.assert(depLoad, 'depLoad found');

	        // console.assert(linkSet.loads.indexOf(depLoad) != -1, 'linkset contains all dependencies');
	      }
	    }
	  }
	} */

	  // 15.2.3 - Runtime Semantics: Loader State

	  // 15.2.3.11
	  function createLoaderLoad(object) {
	    return {
	      // modules is an object for ES5 implementation
	      modules: {},
	      loads: [],
	      loaderObj: object
	    };
	  }

	  // 15.2.3.2 Load Records and LoadRequest Objects

	  // 15.2.3.2.1
	  function createLoad(name) {
	    return {
	      status: 'loading',
	      name: name,
	      linkSets: [],
	      dependencies: [],
	      metadata: {}
	    };
	  }

	  // 15.2.3.2.2 createLoadRequestObject, absorbed into calling functions

	  // 15.2.4

	  // 15.2.4.1
	  function loadModule(loader, name, options) {
	    return new Promise(asyncStartLoadPartwayThrough({
	      step: options.address ? 'fetch' : 'locate',
	      loader: loader,
	      moduleName: name,
	      // allow metadata for import https://bugs.ecmascript.org/show_bug.cgi?id=3091
	      moduleMetadata: options && options.metadata || {},
	      moduleSource: options.source,
	      moduleAddress: options.address
	    }));
	  }

	  // 15.2.4.2
	  function requestLoad(loader, request, refererName, refererAddress) {
	    // 15.2.4.2.1 CallNormalize
	    return new Promise(function(resolve, reject) {
	      resolve(loader.loaderObj.normalize(request, refererName, refererAddress));
	    })
	    // 15.2.4.2.2 GetOrCreateLoad
	    .then(function(name) {
	      var load;
	      if (loader.modules[name]) {
	        load = createLoad(name);
	        load.status = 'linked';
	        // https://bugs.ecmascript.org/show_bug.cgi?id=2795
	        load.module = loader.modules[name];
	        return load;
	      }

	      for (var i = 0, l = loader.loads.length; i < l; i++) {
	        load = loader.loads[i];
	        if (load.name != name)
	          continue;
	        console.assert(load.status == 'loading' || load.status == 'loaded', 'loading or loaded');
	        return load;
	      }

	      load = createLoad(name);
	      loader.loads.push(load);

	      proceedToLocate(loader, load);

	      return load;
	    });
	  }

	  // 15.2.4.3
	  function proceedToLocate(loader, load) {
	    proceedToFetch(loader, load,
	      Promise.resolve()
	      // 15.2.4.3.1 CallLocate
	      .then(function() {
	        return loader.loaderObj.locate({ name: load.name, metadata: load.metadata });
	      })
	    );
	  }

	  // 15.2.4.4
	  function proceedToFetch(loader, load, p) {
	    proceedToTranslate(loader, load,
	      p
	      // 15.2.4.4.1 CallFetch
	      .then(function(address) {
	        // adjusted, see https://bugs.ecmascript.org/show_bug.cgi?id=2602
	        if (load.status != 'loading')
	          return;
	        load.address = address;

	        return loader.loaderObj.fetch({ name: load.name, metadata: load.metadata, address: address });
	      })
	    );
	  }

	  var anonCnt = 0;

	  // 15.2.4.5
	  function proceedToTranslate(loader, load, p) {
	    p
	    // 15.2.4.5.1 CallTranslate
	    .then(function(source) {
	      if (load.status != 'loading')
	        return;

	      return Promise.resolve(loader.loaderObj.translate({ name: load.name, metadata: load.metadata, address: load.address, source: source }))

	      // 15.2.4.5.2 CallInstantiate
	      .then(function(source) {
	        load.source = source;
	        return loader.loaderObj.instantiate({ name: load.name, metadata: load.metadata, address: load.address, source: source });
	      })

	      // 15.2.4.5.3 InstantiateSucceeded
	      .then(function(instantiateResult) {
	        if (instantiateResult === undefined) {
	          load.address = load.address || '<Anonymous Module ' + ++anonCnt + '>';

	          // instead of load.kind, use load.isDeclarative
	          load.isDeclarative = true;
	          return transpile.call(loader.loaderObj, load)
	          .then(function(transpiled) {
	            // Hijack System.register to set declare function
	            var curSystem = __global.System;
	            var curRegister = curSystem.register;
	            curSystem.register = function(name, deps, declare) {
	              if (typeof name != 'string') {
	                declare = deps;
	                deps = name;
	              }
	              // store the registered declaration as load.declare
	              // store the deps as load.deps
	              load.declare = declare;
	              load.depsList = deps;
	            }
	            // empty {} context is closest to undefined 'this' we can get
	            __eval(transpiled, load.address, {});
	            curSystem.register = curRegister;
	          });
	        }
	        else if (typeof instantiateResult == 'object') {
	          load.depsList = instantiateResult.deps || [];
	          load.execute = instantiateResult.execute;
	          load.isDeclarative = false;
	        }
	        else
	          throw TypeError('Invalid instantiate return value');
	      })
	      // 15.2.4.6 ProcessLoadDependencies
	      .then(function() {
	        load.dependencies = [];
	        var depsList = load.depsList;

	        var loadPromises = [];
	        for (var i = 0, l = depsList.length; i < l; i++) (function(request, index) {
	          loadPromises.push(
	            requestLoad(loader, request, load.name, load.address)

	            // 15.2.4.6.1 AddDependencyLoad (load is parentLoad)
	            .then(function(depLoad) {

	              // adjusted from spec to maintain dependency order
	              // this is due to the System.register internal implementation needs
	              load.dependencies[index] = {
	                key: request,
	                value: depLoad.name
	              };

	              if (depLoad.status != 'linked') {
	                var linkSets = load.linkSets.concat([]);
	                for (var i = 0, l = linkSets.length; i < l; i++)
	                  addLoadToLinkSet(linkSets[i], depLoad);
	              }

	              // console.log('AddDependencyLoad ' + depLoad.name + ' for ' + load.name);
	              // snapshot(loader);
	            })
	          );
	        })(depsList[i], i);

	        return Promise.all(loadPromises);
	      })

	      // 15.2.4.6.2 LoadSucceeded
	      .then(function() {
	        // console.log('LoadSucceeded ' + load.name);
	        // snapshot(loader);

	        console.assert(load.status == 'loading', 'is loading');

	        load.status = 'loaded';

	        var linkSets = load.linkSets.concat([]);
	        for (var i = 0, l = linkSets.length; i < l; i++)
	          updateLinkSetOnLoad(linkSets[i], load);
	      });
	    })
	    // 15.2.4.5.4 LoadFailed
	    ['catch'](function(exc) {
	      load.status = 'failed';
	      load.exception = exc;

	      var linkSets = load.linkSets.concat([]);
	      for (var i = 0, l = linkSets.length; i < l; i++) {
	        linkSetFailed(linkSets[i], load, exc);
	      }

	      console.assert(load.linkSets.length == 0, 'linkSets not removed');
	    });
	  }

	  // 15.2.4.7 PromiseOfStartLoadPartwayThrough absorbed into calling functions

	  // 15.2.4.7.1
	  function asyncStartLoadPartwayThrough(stepState) {
	    return function(resolve, reject) {
	      var loader = stepState.loader;
	      var name = stepState.moduleName;
	      var step = stepState.step;

	      if (loader.modules[name])
	        throw new TypeError('"' + name + '" already exists in the module table');

	      // adjusted to pick up existing loads
	      var existingLoad;
	      for (var i = 0, l = loader.loads.length; i < l; i++) {
	        if (loader.loads[i].name == name) {
	          existingLoad = loader.loads[i];

	          if (step == 'translate' && !existingLoad.source) {
	            existingLoad.address = stepState.moduleAddress;
	            proceedToTranslate(loader, existingLoad, Promise.resolve(stepState.moduleSource));
	          }

	          // a primary load -> use that existing linkset if it is for the direct load here
	          // otherwise create a new linkset unit
	          if (existingLoad.linkSets.length && existingLoad.linkSets[0].loads[0].name == existingLoad.name)
	            return existingLoad.linkSets[0].done.then(function() {
	              resolve(existingLoad);
	            });
	        }
	      }

	      var load = existingLoad || createLoad(name);

	      load.metadata = stepState.moduleMetadata;

	      var linkSet = createLinkSet(loader, load);

	      loader.loads.push(load);

	      resolve(linkSet.done);

	      if (step == 'locate')
	        proceedToLocate(loader, load);

	      else if (step == 'fetch')
	        proceedToFetch(loader, load, Promise.resolve(stepState.moduleAddress));

	      else {
	        console.assert(step == 'translate', 'translate step');
	        load.address = stepState.moduleAddress;
	        proceedToTranslate(loader, load, Promise.resolve(stepState.moduleSource));
	      }
	    }
	  }

	  // Declarative linking functions run through alternative implementation:
	  // 15.2.5.1.1 CreateModuleLinkageRecord not implemented
	  // 15.2.5.1.2 LookupExport not implemented
	  // 15.2.5.1.3 LookupModuleDependency not implemented

	  // 15.2.5.2.1
	  function createLinkSet(loader, startingLoad) {
	    var linkSet = {
	      loader: loader,
	      loads: [],
	      startingLoad: startingLoad, // added see spec bug https://bugs.ecmascript.org/show_bug.cgi?id=2995
	      loadingCount: 0
	    };
	    linkSet.done = new Promise(function(resolve, reject) {
	      linkSet.resolve = resolve;
	      linkSet.reject = reject;
	    });
	    addLoadToLinkSet(linkSet, startingLoad);
	    return linkSet;
	  }
	  // 15.2.5.2.2
	  function addLoadToLinkSet(linkSet, load) {
	    if (load.status == 'failed')
	      return;

	    console.assert(load.status == 'loading' || load.status == 'loaded', 'loading or loaded on link set');

	    for (var i = 0, l = linkSet.loads.length; i < l; i++)
	      if (linkSet.loads[i] == load)
	        return;

	    linkSet.loads.push(load);
	    load.linkSets.push(linkSet);

	    // adjustment, see https://bugs.ecmascript.org/show_bug.cgi?id=2603
	    if (load.status != 'loaded') {
	      linkSet.loadingCount++;
	    }

	    var loader = linkSet.loader;

	    for (var i = 0, l = load.dependencies.length; i < l; i++) {
	      if (!load.dependencies[i])
	        continue;

	      var name = load.dependencies[i].value;

	      if (loader.modules[name])
	        continue;

	      for (var j = 0, d = loader.loads.length; j < d; j++) {
	        if (loader.loads[j].name != name)
	          continue;

	        addLoadToLinkSet(linkSet, loader.loads[j]);
	        break;
	      }
	    }
	    // console.log('add to linkset ' + load.name);
	    // snapshot(linkSet.loader);
	  }

	  // linking errors can be generic or load-specific
	  // this is necessary for debugging info
	  function doLink(linkSet) {
	    var error = false;
	    try {
	      link(linkSet, function(load, exc) {
	        linkSetFailed(linkSet, load, exc);
	        error = true;
	      });
	    }
	    catch(e) {
	      linkSetFailed(linkSet, null, e);
	      error = true;
	    }
	    return error;
	  }

	  // 15.2.5.2.3
	  function updateLinkSetOnLoad(linkSet, load) {
	    // console.log('update linkset on load ' + load.name);
	    // snapshot(linkSet.loader);

	    console.assert(load.status == 'loaded' || load.status == 'linked', 'loaded or linked');

	    linkSet.loadingCount--;

	    if (linkSet.loadingCount > 0)
	      return;

	    // adjusted for spec bug https://bugs.ecmascript.org/show_bug.cgi?id=2995
	    var startingLoad = linkSet.startingLoad;

	    // non-executing link variation for loader tracing
	    // on the server. Not in spec.
	    /***/
	    if (linkSet.loader.loaderObj.execute === false) {
	      var loads = [].concat(linkSet.loads);
	      for (var i = 0, l = loads.length; i < l; i++) {
	        var load = loads[i];
	        load.module = !load.isDeclarative ? {
	          module: _newModule({})
	        } : {
	          name: load.name,
	          module: _newModule({}),
	          evaluated: true
	        };
	        load.status = 'linked';
	        finishLoad(linkSet.loader, load);
	      }
	      return linkSet.resolve(startingLoad);
	    }
	    /***/

	    var abrupt = doLink(linkSet);

	    if (abrupt)
	      return;

	    console.assert(linkSet.loads.length == 0, 'loads cleared');

	    linkSet.resolve(startingLoad);
	  }

	  // 15.2.5.2.4
	  function linkSetFailed(linkSet, load, exc) {
	    var loader = linkSet.loader;
	    var requests;

	    checkError: 
	    if (load) {
	      if (linkSet.loads[0].name == load.name) {
	        exc = addToError(exc, 'Error loading ' + load.name);
	      }
	      else {
	        for (var i = 0; i < linkSet.loads.length; i++) {
	          var pLoad = linkSet.loads[i];
	          for (var j = 0; j < pLoad.dependencies.length; j++) {
	            var dep = pLoad.dependencies[j];
	            if (dep.value == load.name) {
	              exc = addToError(exc, 'Error loading ' + load.name + ' as "' + dep.key + '" from ' + pLoad.name);
	              break checkError;
	            }
	          }
	        }
	        exc = addToError(exc, 'Error loading ' + load.name + ' from ' + linkSet.loads[0].name);
	      }
	    }
	    else {
	      exc = addToError(exc, 'Error linking ' + linkSet.loads[0].name);
	    }


	    var loads = linkSet.loads.concat([]);
	    for (var i = 0, l = loads.length; i < l; i++) {
	      var load = loads[i];

	      // store all failed load records
	      loader.loaderObj.failed = loader.loaderObj.failed || [];
	      if (indexOf.call(loader.loaderObj.failed, load) == -1)
	        loader.loaderObj.failed.push(load);

	      var linkIndex = indexOf.call(load.linkSets, linkSet);
	      console.assert(linkIndex != -1, 'link not present');
	      load.linkSets.splice(linkIndex, 1);
	      if (load.linkSets.length == 0) {
	        var globalLoadsIndex = indexOf.call(linkSet.loader.loads, load);
	        if (globalLoadsIndex != -1)
	          linkSet.loader.loads.splice(globalLoadsIndex, 1);
	      }
	    }
	    linkSet.reject(exc);
	  }

	  // 15.2.5.2.5
	  function finishLoad(loader, load) {
	    // add to global trace if tracing
	    if (loader.loaderObj.trace) {
	      if (!loader.loaderObj.loads)
	        loader.loaderObj.loads = {};
	      var depMap = {};
	      load.dependencies.forEach(function(dep) {
	        depMap[dep.key] = dep.value;
	      });
	      loader.loaderObj.loads[load.name] = {
	        name: load.name,
	        deps: load.dependencies.map(function(dep){ return dep.key }),
	        depMap: depMap,
	        address: load.address,
	        metadata: load.metadata,
	        source: load.source,
	        kind: load.isDeclarative ? 'declarative' : 'dynamic'
	      };
	    }
	    // if not anonymous, add to the module table
	    if (load.name) {
	      console.assert(!loader.modules[load.name], 'load not in module table');
	      loader.modules[load.name] = load.module;
	    }
	    var loadIndex = indexOf.call(loader.loads, load);
	    if (loadIndex != -1)
	      loader.loads.splice(loadIndex, 1);
	    for (var i = 0, l = load.linkSets.length; i < l; i++) {
	      loadIndex = indexOf.call(load.linkSets[i].loads, load);
	      if (loadIndex != -1)
	        load.linkSets[i].loads.splice(loadIndex, 1);
	    }
	    load.linkSets.splice(0, load.linkSets.length);
	  }

	  function doDynamicExecute(linkSet, load, linkError) {
	    try {
	      var module = load.execute();
	    }
	    catch(e) {
	      linkError(load, e);
	      return;
	    }
	    if (!module || !(module instanceof Module))
	      linkError(load, new TypeError('Execution must define a Module instance'));
	    else
	      return module;
	  }

	  // 26.3 Loader

	  // 26.3.1.1
	  // defined at top

	  // importPromises adds ability to import a module twice without error - https://bugs.ecmascript.org/show_bug.cgi?id=2601
	  function createImportPromise(loader, name, promise) {
	    var importPromises = loader._loader.importPromises;
	    return importPromises[name] = promise.then(function(m) {
	      importPromises[name] = undefined;
	      return m;
	    }, function(e) {
	      importPromises[name] = undefined;
	      throw e;
	    });
	  }

	  Loader.prototype = {
	    // 26.3.3.1
	    constructor: Loader,
	    // 26.3.3.2
	    define: function(name, source, options) {
	      // check if already defined
	      if (this._loader.importPromises[name])
	        throw new TypeError('Module is already loading.');
	      return createImportPromise(this, name, new Promise(asyncStartLoadPartwayThrough({
	        step: 'translate',
	        loader: this._loader,
	        moduleName: name,
	        moduleMetadata: options && options.metadata || {},
	        moduleSource: source,
	        moduleAddress: options && options.address
	      })));
	    },
	    // 26.3.3.3
	    'delete': function(name) {
	      var loader = this._loader;
	      delete loader.importPromises[name];
	      delete loader.moduleRecords[name];
	      return loader.modules[name] ? delete loader.modules[name] : false;
	    },
	    // 26.3.3.4 entries not implemented
	    // 26.3.3.5
	    get: function(key) {
	      if (!this._loader.modules[key])
	        return;
	      doEnsureEvaluated(this._loader.modules[key], [], this);
	      return this._loader.modules[key].module;
	    },
	    // 26.3.3.7
	    has: function(name) {
	      return !!this._loader.modules[name];
	    },
	    // 26.3.3.8
	    'import': function(name, parentName, parentAddress) {
	      if (typeof parentName == 'object')
	        parentName = parentName.name;

	      // run normalize first
	      var loaderObj = this;

	      // added, see https://bugs.ecmascript.org/show_bug.cgi?id=2659
	      return Promise.resolve(loaderObj.normalize(name, parentName))
	      .then(function(name) {
	        var loader = loaderObj._loader;

	        if (loader.modules[name]) {
	          doEnsureEvaluated(loader.modules[name], [], loader._loader);
	          return loader.modules[name].module;
	        }

	        return loader.importPromises[name] || createImportPromise(loaderObj, name,
	          loadModule(loader, name, {})
	          .then(function(load) {
	            delete loader.importPromises[name];
	            return evaluateLoadedModule(loader, load);
	          }));
	      });
	    },
	    // 26.3.3.9 keys not implemented
	    // 26.3.3.10
	    load: function(name) {
	      var loader = this._loader;
	      if (loader.modules[name])
	        return Promise.resolve();
	      return loader.importPromises[name] || createImportPromise(this, name, new Promise(asyncStartLoadPartwayThrough({
	        step: 'locate',
	        loader: loader,
	        moduleName: name,
	        moduleMetadata: {},
	        moduleSource: undefined,
	        moduleAddress: undefined
	      }))
	      .then(function() {
	        delete loader.importPromises[name];
	      }));
	    },
	    // 26.3.3.11
	    module: function(source, options) {
	      var load = createLoad();
	      load.address = options && options.address;
	      var linkSet = createLinkSet(this._loader, load);
	      var sourcePromise = Promise.resolve(source);
	      var loader = this._loader;
	      var p = linkSet.done.then(function() {
	        return evaluateLoadedModule(loader, load);
	      });
	      proceedToTranslate(loader, load, sourcePromise);
	      return p;
	    },
	    // 26.3.3.12
	    newModule: function (obj) {
	      if (typeof obj != 'object')
	        throw new TypeError('Expected object');

	      var m = new Module();

	      var pNames = [];
	      if (Object.getOwnPropertyNames && obj != null)
	        pNames = Object.getOwnPropertyNames(obj);
	      else
	        for (var key in obj)
	          pNames.push(key);

	      for (var i = 0; i < pNames.length; i++) (function(key) {
	        defineProperty(m, key, {
	          configurable: false,
	          enumerable: true,
	          get: function () {
	            return obj[key];
	          },
	          set: function() {
	            throw new Error('Module exports cannot be changed externally.');
	          }
	        });
	      })(pNames[i]);

	      if (Object.freeze)
	        Object.freeze(m);

	      return m;
	    },
	    // 26.3.3.14
	    set: function(name, module) {
	      if (!(module instanceof Module))
	        throw new TypeError('Loader.set(' + name + ', module) must be a module');
	      this._loader.modules[name] = {
	        module: module
	      };
	    },
	    // 26.3.3.15 values not implemented
	    // 26.3.3.16 @@iterator not implemented
	    // 26.3.3.17 @@toStringTag not implemented

	    // 26.3.3.18.1
	    normalize: function(name, referrerName, referrerAddress) {
	      return name;
	    },
	    // 26.3.3.18.2
	    locate: function(load) {
	      return load.name;
	    },
	    // 26.3.3.18.3
	    fetch: function(load) {
	    },
	    // 26.3.3.18.4
	    translate: function(load) {
	      return load.source;
	    },
	    // 26.3.3.18.5
	    instantiate: function(load) {
	    }
	  };

	  var _newModule = Loader.prototype.newModule;
	/*
	 * ES6 Module Declarative Linking Code - Dev Build Only
	 */
	  function link(linkSet, linkError) {

	    var loader = linkSet.loader;

	    if (!linkSet.loads.length)
	      return;

	    var loads = linkSet.loads.concat([]);

	    for (var i = 0; i < loads.length; i++) {
	      var load = loads[i];

	      var module = doDynamicExecute(linkSet, load, linkError);
	      if (!module)
	        return;
	      load.module = {
	        name: load.name,
	        module: module
	      };
	      load.status = 'linked';

	      finishLoad(loader, load);
	    }
	  }

	  function evaluateLoadedModule(loader, load) {
	    console.assert(load.status == 'linked', 'is linked ' + load.name);
	    return load.module.module;
	  }

	  function doEnsureEvaluated() {}

	  function transpile() {
	    throw new TypeError('ES6 transpilation is only provided in the dev module loader build.');
	  }
	})();/*
	*********************************************************************************************

	  System Loader Implementation

	    - Implemented to https://github.com/jorendorff/js-loaders/blob/master/browser-loader.js

	    - <script type="module"> supported

	*********************************************************************************************
	*/

	var System;

	function SystemLoader() {
	  Loader.call(this);
	  this.paths = {};
	}

	// NB no specification provided for System.paths, used ideas discussed in https://github.com/jorendorff/js-loaders/issues/25
	function applyPaths(paths, name) {
	  // most specific (most number of slashes in path) match wins
	  var pathMatch = '', wildcard, maxWildcardPrefixLen = 0;

	  // check to see if we have a paths entry
	  for (var p in paths) {
	    var pathParts = p.split('*');
	    if (pathParts.length > 2)
	      throw new TypeError('Only one wildcard in a path is permitted');

	    // exact path match
	    if (pathParts.length == 1) {
	      if (name == p)
	        return paths[p];
	      
	      // support trailing / in paths rules
	      else if (name.substr(0, p.length - 1) == p.substr(0, p.length - 1) && (name.length < p.length || name[p.length - 1] == p[p.length - 1]) && paths[p][paths[p].length - 1] == '/')
	        return paths[p].substr(0, paths[p].length - 1) + (name.length > p.length ? '/' + name.substr(p.length) : '');
	    }
	    // wildcard path match
	    else {
	      var wildcardPrefixLen = pathParts[0].length;
	      if (wildcardPrefixLen >= maxWildcardPrefixLen &&
	          name.substr(0, pathParts[0].length) == pathParts[0] &&
	          name.substr(name.length - pathParts[1].length) == pathParts[1]) {
	            maxWildcardPrefixLen = wildcardPrefixLen;
	            pathMatch = p;
	            wildcard = name.substr(pathParts[0].length, name.length - pathParts[1].length - pathParts[0].length);
	          }
	    }
	  }

	  var outPath = paths[pathMatch];
	  if (typeof wildcard == 'string')
	    outPath = outPath.replace('*', wildcard);

	  return outPath;
	}

	// inline Object.create-style class extension
	function LoaderProto() {}
	LoaderProto.prototype = Loader.prototype;
	SystemLoader.prototype = new LoaderProto();
	var absURLRegEx = /^([^\/]+:\/\/|\/)/;

	// Normalization with module names as absolute URLs
	SystemLoader.prototype.normalize = function(name, parentName, parentAddress) {
	  // NB does `import 'file.js'` import relative to the parent name or baseURL?
	  //    have assumed that it is baseURL-relative here, but spec may well align with URLs to be the latter
	  //    safe option for users is to always use "./file.js" for relative

	  // not absolute or relative -> apply paths (what will be sites)
	  if (!name.match(absURLRegEx) && name[0] != '.')
	    name = new URL(applyPaths(this.paths, name) || name, baseURI).href;
	  // apply parent-relative normalization, parentAddress is already normalized
	  else
	    name = new URL(name, parentName || baseURI).href;

	  return name;
	};

	SystemLoader.prototype.locate = function(load) {
	  return load.name;
	};


	// ensure the transpiler is loaded correctly
	SystemLoader.prototype.instantiate = function(load) {
	  var self = this;
	  return Promise.resolve(self.normalize(self.transpiler))
	  .then(function(transpilerNormalized) {
	    // load transpiler as a global (avoiding System clobbering)
	    if (load.address === transpilerNormalized) {
	      return {
	        deps: [],
	        execute: function() {
	          var curSystem = __global.System;
	          var curLoader = __global.Reflect.Loader;
	          // ensure not detected as CommonJS
	          __eval('(function(require,exports,module){' + load.source + '})();', load.address, __global);
	          __global.System = curSystem;
	          __global.Reflect.Loader = curLoader;
	          return self.newModule({ 'default': __global[self.transpiler], __useDefault: true });
	        }
	      };
	    }
	  });
	};// SystemJS Loader Class and Extension helpers

	function SystemJSLoader() {
	  SystemLoader.call(this);

	  systemJSConstructor.call(this);
	}

	// inline Object.create-style class extension
	function SystemProto() {};
	SystemProto.prototype = SystemLoader.prototype;
	SystemJSLoader.prototype = new SystemProto();
	SystemJSLoader.prototype.constructor = SystemJSLoader;

	// remove ESML instantiate
	SystemJSLoader.prototype.instantiate = function() {};

	var systemJSConstructor;

	function hook(name, hook) {
	  SystemJSLoader.prototype[name] = hook(SystemJSLoader.prototype[name] || function() {});
	}
	function hookConstructor(hook) {
	  systemJSConstructor = hook(systemJSConstructor || function() {});
	}

	function dedupe(deps) {
	  var newDeps = [];
	  for (var i = 0, l = deps.length; i < l; i++)
	    if (indexOf.call(newDeps, deps[i]) == -1)
	      newDeps.push(deps[i])
	  return newDeps;
	}

	function group(deps) {
	  var names = [];
	  var indices = [];
	  for (var i = 0, l = deps.length; i < l; i++) {
	    var index = indexOf.call(names, deps[i]);
	    if (index === -1) {
	      names.push(deps[i]);
	      indices.push([i]);
	    }
	    else {
	      indices[index].push(i);
	    }
	  }
	  return { names: names, indices: indices };
	}

	var getOwnPropertyDescriptor = true;
	try {
	  Object.getOwnPropertyDescriptor({ a: 0 }, 'a');
	}
	catch(e) {
	  getOwnPropertyDescriptor = false;
	}

	// converts any module.exports object into an object ready for SystemJS.newModule
	function getESModule(exports) {
	  var esModule = {};
	  // don't trigger getters/setters in environments that support them
	  if (typeof exports == 'object' || typeof exports == 'function') {
	    var hasOwnProperty = exports && exports.hasOwnProperty;
	    if (getOwnPropertyDescriptor) {
	      for (var p in exports) {
	        if (!trySilentDefineProperty(esModule, exports, p))
	          setPropertyIfHasOwnProperty(esModule, exports, p, hasOwnProperty);
	      }
	    }
	    else {
	      for (var p in exports)
	        setPropertyIfHasOwnProperty(esModule, exports, p, hasOwnProperty);
	    }
	  }
	  esModule['default'] = exports;
	  defineProperty(esModule, '__useDefault', {
	    value: true
	  });
	  return esModule;
	}

	function setPropertyIfHasOwnProperty(targetObj, sourceObj, propName, hasOwnProperty) {
	  if (!hasOwnProperty || sourceObj.hasOwnProperty(propName))
	    targetObj[propName] = sourceObj[propName];
	}

	function trySilentDefineProperty(targetObj, sourceObj, propName) {
	  try {
	    var d;
	    if (d = Object.getOwnPropertyDescriptor(sourceObj, propName))
	      defineProperty(targetObj, propName, d);

	    return true;
	  } catch (ex) {
	    // Object.getOwnPropertyDescriptor threw an exception, fall back to normal set property.
	    return false;
	  }
	}

	function extend(a, b, prepend) {
	  for (var p in b) {
	    if (!prepend || !(p in a))
	      a[p] = b[p];
	  }
	  return a;
	}

	// package configuration options
	var packageProperties = ['main', 'format', 'defaultExtension', 'meta', 'map', 'basePath', 'depCache'];

	// meta first-level extends where:
	// array + array appends
	// object + object extends
	// other properties replace
	function extendMeta(a, b, prepend) {
	  for (var p in b) {
	    var val = b[p];
	    if (!(p in a))
	      a[p] = val;
	    else if (val instanceof Array && a[p] instanceof Array)
	      a[p] = [].concat(prepend ? val : a[p]).concat(prepend ? a[p] : val);
	    else if (typeof val == 'object' && val !== null && typeof a[p] == 'object')
	      a[p] = extend(extend({}, a[p]), val, prepend);
	    else if (!prepend)
	      a[p] = val;
	  }
	}

	function warn(msg) {
	  if (this.warnings && typeof console != 'undefined' && console.warn)
	    console.warn(msg);
	}
	/*
	 * Script tag fetch
	 *
	 * When load.metadata.scriptLoad is true, we load via script tag injection.
	 */
	(function() {

	  if (typeof document != 'undefined')
	    var head = document.getElementsByTagName('head')[0];

	  var curSystem;
	  var curRequire;

	  // if doing worker executing, this is set to the load record being executed
	  var workerLoad = null;
	  
	  // interactive mode handling method courtesy RequireJS
	  var ieEvents = head && (function() {
	    var s = document.createElement('script');
	    var isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]';
	    return s.attachEvent && !(s.attachEvent.toString && s.attachEvent.toString().indexOf('[native code') < 0) && !isOpera;
	  })();

	  // IE interactive-only part
	  // we store loading scripts array as { script: <script>, load: {...} }
	  var interactiveLoadingScripts = [];
	  var interactiveScript;
	  function getInteractiveScriptLoad() {
	    if (interactiveScript && interactiveScript.script.readyState === 'interactive')
	      return interactiveScript.load;

	    for (var i = 0; i < interactiveLoadingScripts.length; i++)
	      if (interactiveLoadingScripts[i].script.readyState == 'interactive') {
	        interactiveScript = interactiveLoadingScripts[i];
	        return interactiveScript.load;
	      }
	  }
	  
	  // System.register, System.registerDynamic, AMD define pipeline
	  // this is called by the above methods when they execute
	  // we then run the reduceRegister_ collection function either immediately
	  // if we are in IE and know the currently executing script (interactive)
	  // or later if we need to wait for the synchronous load callback to know the script
	  var loadingCnt = 0;
	  var registerQueue = [];
	  hook('pushRegister_', function(pushRegister) {
	    return function(register) {
	      // if using eval-execution then skip
	      if (pushRegister.call(this, register))
	        return false;

	      // if using worker execution, then we're done
	      if (workerLoad)
	        this.reduceRegister_(workerLoad, register);

	      // detect if we know the currently executing load (IE)
	      // if so, immediately call reduceRegister
	      else if (ieEvents)
	        this.reduceRegister_(getInteractiveScriptLoad(), register);

	      // otherwise, add to our execution queue
	      // to call reduceRegister on sync script load event
	      else if (loadingCnt)
	        registerQueue.push(register);

	      // if we're not currently loading anything though
	      // then do the reduction against a null load
	      // (out of band named define or named register)
	      // note even in non-script environments, this catch is used
	      else
	        this.reduceRegister_(null, register);

	      return true;
	    };
	  });

	  function webWorkerImport(loader, load) {
	    return new Promise(function(resolve, reject) {
	      if (load.metadata.integrity)
	        reject(new Error('Subresource integrity checking is not supported in web workers.'));

	      workerLoad = load;
	      try {
	        importScripts(load.address);
	      }
	      catch(e) {
	        workerLoad = null;
	        reject(e);
	      }
	      workerLoad = null;

	      // if nothing registered, then something went wrong
	      if (!load.metadata.entry)
	        reject(new Error(load.address + ' did not call System.register or AMD define'));

	      resolve('');
	    });
	  }

	  // override fetch to use script injection
	  hook('fetch', function(fetch) {
	    return function(load) {
	      var loader = this;

	      if (load.metadata.format == 'json' || !load.metadata.scriptLoad || (!isBrowser && !isWorker))
	        return fetch.call(this, load);

	      if (isWorker)
	        return webWorkerImport(loader, load);

	      return new Promise(function(resolve, reject) {
	        var s = document.createElement('script');
	        
	        s.async = true;

	        if (load.metadata.crossOrigin)
	          s.crossOrigin = load.metadata.crossOrigin;

	        if (load.metadata.integrity)
	          s.setAttribute('integrity', load.metadata.integrity);

	        if (ieEvents) {
	          s.attachEvent('onreadystatechange', complete);
	          interactiveLoadingScripts.push({
	            script: s,
	            load: load
	          });
	        }
	        else {
	          s.addEventListener('load', complete, false);
	          s.addEventListener('error', error, false);
	        }

	        loadingCnt++;

	        curSystem = __global.System;
	        curRequire = __global.require;

	        s.src = load.address;
	        head.appendChild(s);

	        function complete(evt) {
	          if (s.readyState && s.readyState != 'loaded' && s.readyState != 'complete')
	            return;

	          loadingCnt--;

	          // complete call is sync on execution finish
	          // (in ie already done reductions)
	          if (!load.metadata.entry && !registerQueue.length) {
	            loader.reduceRegister_(load);
	          }
	          else if (!ieEvents) {
	            for (var i = 0; i < registerQueue.length; i++)
	              loader.reduceRegister_(load, registerQueue[i]);
	            registerQueue = [];
	          }

	          cleanup();

	          // if nothing registered, then something went wrong
	          if (!load.metadata.entry && !load.metadata.bundle)
	            reject(new Error(load.name + ' did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.'));

	          resolve('');
	        }

	        function error(evt) {
	          cleanup();
	          reject(new Error('Unable to load script ' + load.address));
	        }

	        function cleanup() {
	          __global.System = curSystem;
	          __global.require = curRequire;

	          if (s.detachEvent) {
	            s.detachEvent('onreadystatechange', complete);
	            for (var i = 0; i < interactiveLoadingScripts.length; i++)
	              if (interactiveLoadingScripts[i].script == s) {
	                if (interactiveScript && interactiveScript.script == s)
	                  interactiveScript = null;
	                interactiveLoadingScripts.splice(i, 1);
	              }
	          }
	          else {
	            s.removeEventListener('load', complete, false);
	            s.removeEventListener('error', error, false);
	          }

	          head.removeChild(s);
	        }
	      });
	    };
	  });
	})();
	/*
	 * Instantiate registry extension
	 *
	 * Supports Traceur System.register 'instantiate' output for loading ES6 as ES5.
	 *
	 * - Creates the loader.register function
	 * - Also supports metadata.format = 'register' in instantiate for anonymous register modules
	 * - Also supports metadata.deps, metadata.execute and metadata.executingRequire
	 *     for handling dynamic modules alongside register-transformed ES6 modules
	 *
	 *
	 * The code here replicates the ES6 linking groups algorithm to ensure that
	 * circular ES6 compiled into System.register can work alongside circular AMD 
	 * and CommonJS, identically to the actual ES6 loader.
	 *
	 */


	/*
	 * Registry side table entries in loader.defined
	 * Registry Entry Contains:
	 *    - name
	 *    - deps 
	 *    - declare for declarative modules
	 *    - execute for dynamic modules, different to declarative execute on module
	 *    - executingRequire indicates require drives execution for circularity of dynamic modules
	 *    - declarative optional boolean indicating which of the above
	 *
	 * Can preload modules directly on SystemJS.defined['my/module'] = { deps, execute, executingRequire }
	 *
	 * Then the entry gets populated with derived information during processing:
	 *    - normalizedDeps derived from deps, created in instantiate
	 *    - groupIndex used by group linking algorithm
	 *    - evaluated indicating whether evaluation has happend
	 *    - module the module record object, containing:
	 *      - exports actual module exports
	 *
	 *    For dynamic we track the es module with:
	 *    - esModule actual es module value
	 *    - esmExports whether to extend the esModule with named exports
	 *      
	 *    Then for declarative only we track dynamic bindings with the 'module' records:
	 *      - name
	 *      - exports
	 *      - setters declarative setter functions
	 *      - dependencies, module records of dependencies
	 *      - importers, module records of dependents
	 *
	 * After linked and evaluated, entries are removed, declarative module records remain in separate
	 * module binding table
	 *
	 */

	var leadingCommentAndMetaRegEx = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;
	function detectRegisterFormat(source) {
	  var leadingCommentAndMeta = source.match(leadingCommentAndMetaRegEx);
	  return leadingCommentAndMeta && source.substr(leadingCommentAndMeta[0].length, 15) == 'System.register';
	}

	function createEntry() {
	  return {
	    name: null,
	    deps: null,
	    originalIndices: null,
	    declare: null,
	    execute: null,
	    executingRequire: false,
	    declarative: false,
	    normalizedDeps: null,
	    groupIndex: null,
	    evaluated: false,
	    module: null,
	    esModule: null,
	    esmExports: false
	  };
	}

	(function() {

	  /*
	   * There are two variations of System.register:
	   * 1. System.register for ES6 conversion (2-3 params) - System.register([name, ]deps, declare)
	   *    see https://github.com/ModuleLoader/es6-module-loader/wiki/System.register-Explained
	   *
	   * 2. System.registerDynamic for dynamic modules (3-4 params) - System.registerDynamic([name, ]deps, executingRequire, execute)
	   * the true or false statement 
	   *
	   * this extension implements the linking algorithm for the two variations identical to the spec
	   * allowing compiled ES6 circular references to work alongside AMD and CJS circular references.
	   *
	   */
	  SystemJSLoader.prototype.register = function(name, deps, declare) {
	    if (typeof name != 'string') {
	      declare = deps;
	      deps = name;
	      name = null;
	    }

	    // dynamic backwards-compatibility
	    // can be deprecated eventually
	    if (typeof declare == 'boolean')
	      return this.registerDynamic.apply(this, arguments);

	    var entry = createEntry();
	    // ideally wouldn't apply map config to bundle names but 
	    // dependencies go through map regardless so we can't restrict
	    // could reconsider in shift to new spec
	    entry.name = name && (this.decanonicalize || this.normalize).call(this, name);
	    entry.declarative = true;
	    entry.deps = deps;
	    entry.declare = declare;

	    this.pushRegister_({
	      amd: false,
	      entry: entry
	    });
	  };
	  SystemJSLoader.prototype.registerDynamic = function(name, deps, declare, execute) {
	    if (typeof name != 'string') {
	      execute = declare;
	      declare = deps;
	      deps = name;
	      name = null;
	    }

	    // dynamic
	    var entry = createEntry();
	    entry.name = name && (this.decanonicalize || this.normalize).call(this, name);
	    entry.deps = deps;
	    entry.execute = execute;
	    entry.executingRequire = declare;

	    this.pushRegister_({
	      amd: false,
	      entry: entry
	    });
	  };
	  hook('reduceRegister_', function() {
	    return function(load, register) {
	      if (!register)
	        return;

	      var entry = register.entry;
	      var curMeta = load && load.metadata;

	      // named register
	      if (entry.name) {
	        if (!(entry.name in this.defined))
	          this.defined[entry.name] = entry;

	        if (curMeta)
	          curMeta.bundle = true;
	      }
	      // anonymous register
	      if (!entry.name || load && entry.name == load.name) {
	        if (!curMeta)
	          throw new TypeError('Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.');
	        if (curMeta.entry) {
	          if (curMeta.format == 'register')
	            throw new Error('Multiple anonymous System.register calls in module ' + load.name + '. If loading a bundle, ensure all the System.register calls are named.');
	          else
	            throw new Error('Module ' + load.name + ' interpreted as ' + curMeta.format + ' module format, but called System.register.');
	        }
	        if (!curMeta.format)
	          curMeta.format = 'register';
	        curMeta.entry = entry;
	      }
	    };
	  });

	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);

	      this.defined = {};
	      this._loader.moduleRecords = {};
	    };
	  });

	  function buildGroups(entry, loader, groups) {
	    groups[entry.groupIndex] = groups[entry.groupIndex] || [];

	    if (indexOf.call(groups[entry.groupIndex], entry) != -1)
	      return;

	    groups[entry.groupIndex].push(entry);

	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      var depEntry = loader.defined[depName];
	      
	      // not in the registry means already linked / ES6
	      if (!depEntry || depEntry.evaluated)
	        continue;
	      
	      // now we know the entry is in our unlinked linkage group
	      var depGroupIndex = entry.groupIndex + (depEntry.declarative != entry.declarative);

	      // the group index of an entry is always the maximum
	      if (depEntry.groupIndex === null || depEntry.groupIndex < depGroupIndex) {
	        
	        // if already in a group, remove from the old group
	        if (depEntry.groupIndex !== null) {
	          groups[depEntry.groupIndex].splice(indexOf.call(groups[depEntry.groupIndex], depEntry), 1);

	          // if the old group is empty, then we have a mixed depndency cycle
	          if (groups[depEntry.groupIndex].length == 0)
	            throw new Error("Mixed dependency cycle detected");
	        }

	        depEntry.groupIndex = depGroupIndex;
	      }

	      buildGroups(depEntry, loader, groups);
	    }
	  }

	  function link(name, loader) {
	    var startEntry = loader.defined[name];

	    // skip if already linked
	    if (startEntry.module)
	      return;

	    startEntry.groupIndex = 0;

	    var groups = [];

	    buildGroups(startEntry, loader, groups);

	    var curGroupDeclarative = !!startEntry.declarative == groups.length % 2;
	    for (var i = groups.length - 1; i >= 0; i--) {
	      var group = groups[i];
	      for (var j = 0; j < group.length; j++) {
	        var entry = group[j];

	        // link each group
	        if (curGroupDeclarative)
	          linkDeclarativeModule(entry, loader);
	        else
	          linkDynamicModule(entry, loader);
	      }
	      curGroupDeclarative = !curGroupDeclarative; 
	    }
	  }

	  // module binding records
	  function ModuleRecord() {}
	  defineProperty(ModuleRecord, 'toString', {
	    value: function() {
	      return 'Module';
	    }
	  });

	  function getOrCreateModuleRecord(name, moduleRecords) {
	    return moduleRecords[name] || (moduleRecords[name] = {
	      name: name,
	      dependencies: [],
	      exports: new ModuleRecord(), // start from an empty module and extend
	      importers: []
	    });
	  }

	  function linkDeclarativeModule(entry, loader) {
	    // only link if already not already started linking (stops at circular)
	    if (entry.module)
	      return;

	    var moduleRecords = loader._loader.moduleRecords;
	    var module = entry.module = getOrCreateModuleRecord(entry.name, moduleRecords);
	    var exports = entry.module.exports;

	    var declaration = entry.declare.call(__global, function(name, value) {
	      module.locked = true;

	      if (typeof name == 'object') {
	        for (var p in name)
	          exports[p] = name[p];
	      }
	      else {
	        exports[name] = value;
	      }

	      for (var i = 0, l = module.importers.length; i < l; i++) {
	        var importerModule = module.importers[i];
	        if (!importerModule.locked) {
	          var importerIndex = indexOf.call(importerModule.dependencies, module);
	          importerModule.setters[importerIndex](exports);
	        }
	      }

	      module.locked = false;
	      return value;
	    }, { id: entry.name });
	    
	    module.setters = declaration.setters;
	    module.execute = declaration.execute;

	    if (!module.setters || !module.execute) {
	      throw new TypeError('Invalid System.register form for ' + entry.name);
	    }

	    // now link all the module dependencies
	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      var depEntry = loader.defined[depName];
	      var depModule = moduleRecords[depName];

	      // work out how to set depExports based on scenarios...
	      var depExports;

	      if (depModule) {
	        depExports = depModule.exports;
	      }
	      // dynamic, already linked in our registry
	      else if (depEntry && !depEntry.declarative) {
	        depExports = depEntry.esModule;
	      }
	      // in the loader registry
	      else if (!depEntry) {
	        depExports = loader.get(depName);
	      }
	      // we have an entry -> link
	      else {
	        linkDeclarativeModule(depEntry, loader);
	        depModule = depEntry.module;
	        depExports = depModule.exports;
	      }

	      // only declarative modules have dynamic bindings
	      if (depModule && depModule.importers) {
	        depModule.importers.push(module);
	        module.dependencies.push(depModule);
	      }
	      else {
	        module.dependencies.push(null);
	      }
	      
	      // run setters for all entries with the matching dependency name
	      var originalIndices = entry.originalIndices[i];
	      for (var j = 0, len = originalIndices.length; j < len; ++j) {
	        var index = originalIndices[j];
	        if (module.setters[index]) {
	          module.setters[index](depExports);
	        }
	      }
	    }
	  }

	  // An analog to loader.get covering execution of all three layers (real declarative, simulated declarative, simulated dynamic)
	  function getModule(name, loader) {
	    var exports;
	    var entry = loader.defined[name];

	    if (!entry) {
	      exports = loader.get(name);
	      if (!exports)
	        throw new Error('Unable to load dependency ' + name + '.');
	    }

	    else {
	      if (entry.declarative)
	        ensureEvaluated(name, [], loader);
	    
	      else if (!entry.evaluated)
	        linkDynamicModule(entry, loader);

	      exports = entry.module.exports;
	    }

	    if ((!entry || entry.declarative) && exports && exports.__useDefault)
	      return exports['default'];
	    
	    return exports;
	  }

	  function linkDynamicModule(entry, loader) {
	    if (entry.module)
	      return;

	    var exports = {};

	    var module = entry.module = { exports: exports, id: entry.name };

	    // AMD requires execute the tree first
	    if (!entry.executingRequire) {
	      for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	        var depName = entry.normalizedDeps[i];
	        // we know we only need to link dynamic due to linking algorithm
	        var depEntry = loader.defined[depName];
	        if (depEntry)
	          linkDynamicModule(depEntry, loader);
	      }
	    }

	    // now execute
	    entry.evaluated = true;
	    var output = entry.execute.call(__global, function(name) {
	      for (var i = 0, l = entry.deps.length; i < l; i++) {
	        if (entry.deps[i] != name)
	          continue;
	        return getModule(entry.normalizedDeps[i], loader);
	      }
	      // try and normalize the dependency to see if we have another form
	      var nameNormalized = loader.normalizeSync(name, entry.name);
	      if (indexOf.call(entry.normalizedDeps, nameNormalized) != -1)
	        return getModule(nameNormalized, loader);

	      throw new Error('Module ' + name + ' not declared as a dependency of ' + entry.name);
	    }, exports, module);
	    
	    if (output)
	      module.exports = output;

	    // create the esModule object, which allows ES6 named imports of dynamics
	    exports = module.exports;

	    // __esModule flag treats as already-named
	    if (exports && (exports.__esModule || exports instanceof Module))
	      entry.esModule = exports;
	    // set module as 'default' export, then fake named exports by iterating properties
	    else if (entry.esmExports && exports !== __global)
	      entry.esModule = getESModule(exports);
	    // just use the 'default' export
	    else
	      entry.esModule = { 'default': exports };
	  }

	  /*
	   * Given a module, and the list of modules for this current branch,
	   *  ensure that each of the dependencies of this module is evaluated
	   *  (unless one is a circular dependency already in the list of seen
	   *  modules, in which case we execute it)
	   *
	   * Then we evaluate the module itself depth-first left to right 
	   * execution to match ES6 modules
	   */
	  function ensureEvaluated(moduleName, seen, loader) {
	    var entry = loader.defined[moduleName];

	    // if already seen, that means it's an already-evaluated non circular dependency
	    if (!entry || entry.evaluated || !entry.declarative)
	      return;

	    // this only applies to declarative modules which late-execute

	    seen.push(moduleName);

	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      if (indexOf.call(seen, depName) == -1) {
	        if (!loader.defined[depName])
	          loader.get(depName);
	        else
	          ensureEvaluated(depName, seen, loader);
	      }
	    }

	    if (entry.evaluated)
	      return;

	    entry.evaluated = true;
	    entry.module.execute.call(__global);
	  }

	  // override the delete method to also clear the register caches
	  hook('delete', function(del) {
	    return function(name) {
	      delete this._loader.moduleRecords[name];
	      delete this.defined[name];
	      return del.call(this, name);
	    };
	  });

	  hook('fetch', function(fetch) {
	    return function(load) {
	      if (this.defined[load.name]) {
	        load.metadata.format = 'defined';
	        return '';
	      }

	      load.metadata.deps = load.metadata.deps || [];
	      
	      return fetch.call(this, load);
	    };
	  });

	  hook('translate', function(translate) {
	    // we run the meta detection here (register is after meta)
	    return function(load) {
	      load.metadata.deps = load.metadata.deps || [];
	      return Promise.resolve(translate.call(this, load)).then(function(source) {
	        // run detection for register format
	        if (load.metadata.format == 'register' || !load.metadata.format && detectRegisterFormat(load.source))
	          load.metadata.format = 'register';
	        return source;
	      });
	    };
	  });

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      if (load.metadata.format == 'detect')
	        load.metadata.format = undefined;

	      // assumes previous instantiate is sync
	      // (core json support)
	      instantiate.call(this, load);

	      var loader = this;

	      var entry;

	      // first we check if this module has already been defined in the registry
	      if (loader.defined[load.name]) {
	        entry = loader.defined[load.name];
	        // don't support deps for ES modules
	        if (!entry.declarative)
	          entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // picked up already by an anonymous System.register script injection
	      // or via the dynamic formats
	      else if (load.metadata.entry) {
	        entry = load.metadata.entry;
	        entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // Contains System.register calls
	      // (dont run bundles in the builder)
	      else if (!(loader.builder && load.metadata.bundle) 
	          && (load.metadata.format == 'register' || load.metadata.format == 'esm' || load.metadata.format == 'es6')) {
	        
	        if (typeof __exec != 'undefined')
	          __exec.call(loader, load);

	        if (!load.metadata.entry && !load.metadata.bundle)
	          throw new Error(load.name + ' detected as ' + load.metadata.format + ' but didn\'t execute.');

	        entry = load.metadata.entry;

	        // support metadata deps for System.register
	        if (entry && load.metadata.deps)
	          entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // named bundles are just an empty module
	      if (!entry) {
	        entry = createEntry();
	        entry.deps = load.metadata.deps;
	        entry.execute = function() {};
	      }

	      // place this module onto defined for circular references
	      loader.defined[load.name] = entry;
	      
	      var grouped = group(entry.deps);
	      
	      entry.deps = grouped.names;
	      entry.originalIndices = grouped.indices;
	      entry.name = load.name;
	      entry.esmExports = load.metadata.esmExports !== false;

	      // first, normalize all dependencies
	      var normalizePromises = [];
	      for (var i = 0, l = entry.deps.length; i < l; i++)
	        normalizePromises.push(Promise.resolve(loader.normalize(entry.deps[i], load.name)));

	      return Promise.all(normalizePromises).then(function(normalizedDeps) {

	        entry.normalizedDeps = normalizedDeps;

	        return {
	          deps: entry.deps,
	          execute: function() {
	            // recursively ensure that the module and all its 
	            // dependencies are linked (with dependency group handling)
	            link(load.name, loader);

	            // now handle dependency execution in correct order
	            ensureEvaluated(load.name, [], loader);

	            // remove from the registry
	            loader.defined[load.name] = undefined;

	            // return the defined module object
	            return loader.newModule(entry.declarative ? entry.module.exports : entry.esModule);
	          }
	        };
	      });
	    };
	  });
	})();
	/*
	  System bundles

	  Allows a bundle module to be specified which will be dynamically 
	  loaded before trying to load a given module.

	  For example:
	  SystemJS.bundles['mybundle'] = ['jquery', 'bootstrap/js/bootstrap']

	  Will result in a load to "mybundle" whenever a load to "jquery"
	  or "bootstrap/js/bootstrap" is made.

	  In this way, the bundle becomes the request that provides the module
	*/

	(function() {
	  // bundles support (just like RequireJS)
	  // bundle name is module name of bundle itself
	  // bundle is array of modules defined by the bundle
	  // when a module in the bundle is requested, the bundle is loaded instead
	  // of the form SystemJS.bundles['mybundle'] = ['jquery', 'bootstrap/js/bootstrap']
	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.bundles = {};
	      this._loader.loadedBundles = {};
	    };
	  });

	  // assign bundle metadata for bundle loads
	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      var matched = false;

	      if (!(load.name in loader.defined))
	        for (var b in loader.bundles) {
	          for (var i = 0; i < loader.bundles[b].length; i++) {
	            var curModule = loader.bundles[b][i];

	            if (curModule == load.name) {
	              matched = true;
	              break;
	            }

	            // wildcard in bundles does not include / boundaries
	            if (curModule.indexOf('*') != -1) {
	              var parts = curModule.split('*');
	              if (parts.length != 2) {
	                loader.bundles[b].splice(i--, 1);
	                continue;
	              }
	              
	              if (load.name.substring(0, parts[0].length) == parts[0] &&
	                  load.name.substr(load.name.length - parts[1].length, parts[1].length) == parts[1] &&
	                  load.name.substr(parts[0].length, load.name.length - parts[1].length - parts[0].length).indexOf('/') == -1) {
	                matched = true;
	                break;
	              }
	            }
	          }

	          if (matched)
	            return loader['import'](b)
	            .then(function() {
	              return locate.call(loader, load);
	            });
	        }

	      return locate.call(loader, load);
	    };
	  });
	})();
	/*
	 * Script-only addition used for production loader
	 *
	 */
	hookConstructor(function(constructor) {
	  return function() {
	    constructor.apply(this, arguments);
	    __global.define = this.amdDefine;
	  };
	});

	hook('fetch', function(fetch) {
	  return function(load) {
	    load.metadata.scriptLoad = true;
	    return fetch.call(this, load);
	  };
	});System = new SystemJSLoader();

	__global.SystemJS = System;
	System.version = '0.19.27 Register Only';
	  // -- exporting --

	  if (true)
	    module.exports = Loader;

	  __global.Reflect = __global.Reflect || {};
	  __global.Reflect.Loader = __global.Reflect.Loader || Loader;
	  __global.Reflect.global = __global.Reflect.global || __global;
	  __global.LoaderPolyfill = Loader;

	  if (!System) {
	    System = new SystemLoader();
	    System.constructor = SystemLoader;
	  }

	  if (true)
	    module.exports = System;

	  __global.System = System;

	})(typeof self != 'undefined' ? self : global);
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698)))

/***/ },
/* 739 */,
/* 740 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process, __filename) {/*
	 * SystemJS v0.19.27
	 */
	(function() {
	function bootstrap() {// from https://gist.github.com/Yaffle/1088850
	(function(global) {
	function URLPolyfill(url, baseURL) {
	  if (typeof url != 'string')
	    throw new TypeError('URL must be a string');
	  var m = String(url).replace(/^\s+|\s+$/g, "").match(/^([^:\/?#]+:)?(?:\/\/(?:([^:@\/?#]*)(?::([^:@\/?#]*))?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);
	  if (!m)
	    throw new RangeError('Invalid URL format');
	  var protocol = m[1] || "";
	  var username = m[2] || "";
	  var password = m[3] || "";
	  var host = m[4] || "";
	  var hostname = m[5] || "";
	  var port = m[6] || "";
	  var pathname = m[7] || "";
	  var search = m[8] || "";
	  var hash = m[9] || "";
	  if (baseURL !== undefined) {
	    var base = baseURL instanceof URLPolyfill ? baseURL : new URLPolyfill(baseURL);
	    var flag = !protocol && !host && !username;
	    if (flag && !pathname && !search)
	      search = base.search;
	    if (flag && pathname[0] !== "/")
	      pathname = (pathname ? (((base.host || base.username) && !base.pathname ? "/" : "") + base.pathname.slice(0, base.pathname.lastIndexOf("/") + 1) + pathname) : base.pathname);
	    // dot segments removal
	    var output = [];
	    pathname.replace(/^(\.\.?(\/|$))+/, "")
	      .replace(/\/(\.(\/|$))+/g, "/")
	      .replace(/\/\.\.$/, "/../")
	      .replace(/\/?[^\/]*/g, function (p) {
	        if (p === "/..")
	          output.pop();
	        else
	          output.push(p);
	      });
	    pathname = output.join("").replace(/^\//, pathname[0] === "/" ? "/" : "");
	    if (flag) {
	      port = base.port;
	      hostname = base.hostname;
	      host = base.host;
	      password = base.password;
	      username = base.username;
	    }
	    if (!protocol)
	      protocol = base.protocol;
	  }

	  // convert windows file URLs to use /
	  if (protocol == 'file:')
	    pathname = pathname.replace(/\\/g, '/');

	  this.origin = host ? protocol + (protocol !== "" || host !== "" ? "//" : "") + host : "";
	  this.href = protocol + (protocol && host || protocol == "file:" ? "//" : "") + (username !== "" ? username + (password !== "" ? ":" + password : "") + "@" : "") + host + pathname + search + hash;
	  this.protocol = protocol;
	  this.username = username;
	  this.password = password;
	  this.host = host;
	  this.hostname = hostname;
	  this.port = port;
	  this.pathname = pathname;
	  this.search = search;
	  this.hash = hash;
	}
	global.URLPolyfill = URLPolyfill;
	})(typeof self != 'undefined' ? self : global);(function(__global) {

	  var isWorker = typeof window == 'undefined' && typeof self != 'undefined' && typeof importScripts != 'undefined';
	  var isBrowser = typeof window != 'undefined' && typeof document != 'undefined';
	  var isWindows = typeof process != 'undefined' && typeof process.platform != 'undefined' && !!process.platform.match(/^win/);

	  if (!__global.console)
	    __global.console = { assert: function() {} };

	  // IE8 support
	  var indexOf = Array.prototype.indexOf || function(item) {
	    for (var i = 0, thisLen = this.length; i < thisLen; i++) {
	      if (this[i] === item) {
	        return i;
	      }
	    }
	    return -1;
	  };
	  
	  var defineProperty;
	  (function () {
	    try {
	      if (!!Object.defineProperty({}, 'a', {}))
	        defineProperty = Object.defineProperty;
	    }
	    catch (e) {
	      defineProperty = function(obj, prop, opt) {
	        try {
	          obj[prop] = opt.value || opt.get.call(obj);
	        }
	        catch(e) {}
	      }
	    }
	  })();

	  var errArgs = new Error(0, '_').fileName == '_';

	  function addToError(err, msg) {
	    // parse the stack removing loader code lines for simplification
	    if (!err.originalErr) {
	      var stack = (err.stack || err.message || err).split('\n');
	      var newStack = [];
	      for (var i = 0; i < stack.length; i++) {
	        if (typeof $__curScript == 'undefined' || stack[i].indexOf($__curScript.src) == -1)
	          newStack.push(stack[i]);
	      }
	    }

	    var newMsg = (newStack ? newStack.join('\n\t') : err.message) + '\n\t' + msg;

	    // Convert file:/// URLs to paths in Node
	    if (!isBrowser)
	      newMsg = newMsg.replace(isWindows ? /file:\/\/\//g : /file:\/\//g, '');

	    var newErr = errArgs ? new Error(newMsg, err.fileName, err.lineNumber) : new Error(newMsg);
	    
	    // Node needs stack adjustment for throw to show message
	    if (!isBrowser)
	      newErr.stack = newMsg;
	    // Clearing the stack stops unnecessary loader lines showing
	    else
	      newErr.stack = null;
	    
	    // track the original error
	    newErr.originalErr = err.originalErr || err;

	    return newErr;
	  }

	  function __eval(source, debugName, context) {
	    try {
	      new Function(source).call(context);
	    }
	    catch(e) {
	      throw addToError(e, 'Evaluating ' + debugName);
	    }
	  }

	  var baseURI;
	  // environent baseURI detection
	  if (typeof document != 'undefined' && document.getElementsByTagName) {
	    baseURI = document.baseURI;

	    if (!baseURI) {
	      var bases = document.getElementsByTagName('base');
	      baseURI = bases[0] && bases[0].href || window.location.href;
	    }

	    // sanitize out the hash and querystring
	    baseURI = baseURI.split('#')[0].split('?')[0];
	    baseURI = baseURI.substr(0, baseURI.lastIndexOf('/') + 1);
	  }
	  else if (typeof process != 'undefined' && process.cwd) {
	    baseURI = 'file://' + (isWindows ? '/' : '') + process.cwd() + '/';
	    if (isWindows)
	      baseURI = baseURI.replace(/\\/g, '/');
	  }
	  else if (typeof location != 'undefined') {
	    baseURI = __global.location.href;
	  }
	  else {
	    throw new TypeError('No environment baseURI');
	  }

	  try {
	    var nativeURL = new __global.URL('test:///').protocol == 'test:';
	  }
	  catch(e) {}

	  var URL = nativeURL ? __global.URL : __global.URLPolyfill;
	/*
	*********************************************************************************************

	  Dynamic Module Loader Polyfill

	    - Implemented exactly to the former 2014-08-24 ES6 Specification Draft Rev 27, Section 15
	      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#august_24_2014_draft_rev_27

	    - Functions are commented with their spec numbers, with spec differences commented.

	    - Spec bugs are commented in this code with links.

	    - Abstract functions have been combined where possible, and their associated functions
	      commented.

	    - Realm implementation is entirely omitted.

	*********************************************************************************************
	*/

	function Module() {}
	// http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag
	defineProperty(Module.prototype, 'toString', {
	  value: function() {
	    return 'Module';
	  }
	});
	function Loader(options) {
	  this._loader = {
	    loaderObj: this,
	    loads: [],
	    modules: {},
	    importPromises: {},
	    moduleRecords: {}
	  };

	  // 26.3.3.6
	  defineProperty(this, 'global', {
	    get: function() {
	      return __global;
	    }
	  });

	  // 26.3.3.13 realm not implemented
	}

	(function() {

	// Some Helpers

	// logs a linkset snapshot for debugging
	/* function snapshot(loader) {
	  console.log('---Snapshot---');
	  for (var i = 0; i < loader.loads.length; i++) {
	    var load = loader.loads[i];
	    var linkSetLog = '  ' + load.name + ' (' + load.status + '): ';

	    for (var j = 0; j < load.linkSets.length; j++) {
	      linkSetLog += '{' + logloads(load.linkSets[j].loads) + '} ';
	    }
	    console.log(linkSetLog);
	  }
	  console.log('');
	}
	function logloads(loads) {
	  var log = '';
	  for (var k = 0; k < loads.length; k++)
	    log += loads[k].name + (k != loads.length - 1 ? ' ' : '');
	  return log;
	} */


	/* function checkInvariants() {
	  // see https://bugs.ecmascript.org/show_bug.cgi?id=2603#c1

	  var loads = System._loader.loads;
	  var linkSets = [];

	  for (var i = 0; i < loads.length; i++) {
	    var load = loads[i];
	    console.assert(load.status == 'loading' || load.status == 'loaded', 'Each load is loading or loaded');

	    for (var j = 0; j < load.linkSets.length; j++) {
	      var linkSet = load.linkSets[j];

	      for (var k = 0; k < linkSet.loads.length; k++)
	        console.assert(loads.indexOf(linkSet.loads[k]) != -1, 'linkSet loads are a subset of loader loads');

	      if (linkSets.indexOf(linkSet) == -1)
	        linkSets.push(linkSet);
	    }
	  }

	  for (var i = 0; i < loads.length; i++) {
	    var load = loads[i];
	    for (var j = 0; j < linkSets.length; j++) {
	      var linkSet = linkSets[j];

	      if (linkSet.loads.indexOf(load) != -1)
	        console.assert(load.linkSets.indexOf(linkSet) != -1, 'linkSet contains load -> load contains linkSet');

	      if (load.linkSets.indexOf(linkSet) != -1)
	        console.assert(linkSet.loads.indexOf(load) != -1, 'load contains linkSet -> linkSet contains load');
	    }
	  }

	  for (var i = 0; i < linkSets.length; i++) {
	    var linkSet = linkSets[i];
	    for (var j = 0; j < linkSet.loads.length; j++) {
	      var load = linkSet.loads[j];

	      for (var k = 0; k < load.dependencies.length; k++) {
	        var depName = load.dependencies[k].value;
	        var depLoad;
	        for (var l = 0; l < loads.length; l++) {
	          if (loads[l].name != depName)
	            continue;
	          depLoad = loads[l];
	          break;
	        }

	        // loading records are allowed not to have their dependencies yet
	        // if (load.status != 'loading')
	        //  console.assert(depLoad, 'depLoad found');

	        // console.assert(linkSet.loads.indexOf(depLoad) != -1, 'linkset contains all dependencies');
	      }
	    }
	  }
	} */

	  // 15.2.3 - Runtime Semantics: Loader State

	  // 15.2.3.11
	  function createLoaderLoad(object) {
	    return {
	      // modules is an object for ES5 implementation
	      modules: {},
	      loads: [],
	      loaderObj: object
	    };
	  }

	  // 15.2.3.2 Load Records and LoadRequest Objects

	  // 15.2.3.2.1
	  function createLoad(name) {
	    return {
	      status: 'loading',
	      name: name,
	      linkSets: [],
	      dependencies: [],
	      metadata: {}
	    };
	  }

	  // 15.2.3.2.2 createLoadRequestObject, absorbed into calling functions

	  // 15.2.4

	  // 15.2.4.1
	  function loadModule(loader, name, options) {
	    return new Promise(asyncStartLoadPartwayThrough({
	      step: options.address ? 'fetch' : 'locate',
	      loader: loader,
	      moduleName: name,
	      // allow metadata for import https://bugs.ecmascript.org/show_bug.cgi?id=3091
	      moduleMetadata: options && options.metadata || {},
	      moduleSource: options.source,
	      moduleAddress: options.address
	    }));
	  }

	  // 15.2.4.2
	  function requestLoad(loader, request, refererName, refererAddress) {
	    // 15.2.4.2.1 CallNormalize
	    return new Promise(function(resolve, reject) {
	      resolve(loader.loaderObj.normalize(request, refererName, refererAddress));
	    })
	    // 15.2.4.2.2 GetOrCreateLoad
	    .then(function(name) {
	      var load;
	      if (loader.modules[name]) {
	        load = createLoad(name);
	        load.status = 'linked';
	        // https://bugs.ecmascript.org/show_bug.cgi?id=2795
	        load.module = loader.modules[name];
	        return load;
	      }

	      for (var i = 0, l = loader.loads.length; i < l; i++) {
	        load = loader.loads[i];
	        if (load.name != name)
	          continue;
	        console.assert(load.status == 'loading' || load.status == 'loaded', 'loading or loaded');
	        return load;
	      }

	      load = createLoad(name);
	      loader.loads.push(load);

	      proceedToLocate(loader, load);

	      return load;
	    });
	  }

	  // 15.2.4.3
	  function proceedToLocate(loader, load) {
	    proceedToFetch(loader, load,
	      Promise.resolve()
	      // 15.2.4.3.1 CallLocate
	      .then(function() {
	        return loader.loaderObj.locate({ name: load.name, metadata: load.metadata });
	      })
	    );
	  }

	  // 15.2.4.4
	  function proceedToFetch(loader, load, p) {
	    proceedToTranslate(loader, load,
	      p
	      // 15.2.4.4.1 CallFetch
	      .then(function(address) {
	        // adjusted, see https://bugs.ecmascript.org/show_bug.cgi?id=2602
	        if (load.status != 'loading')
	          return;
	        load.address = address;

	        return loader.loaderObj.fetch({ name: load.name, metadata: load.metadata, address: address });
	      })
	    );
	  }

	  var anonCnt = 0;

	  // 15.2.4.5
	  function proceedToTranslate(loader, load, p) {
	    p
	    // 15.2.4.5.1 CallTranslate
	    .then(function(source) {
	      if (load.status != 'loading')
	        return;

	      return Promise.resolve(loader.loaderObj.translate({ name: load.name, metadata: load.metadata, address: load.address, source: source }))

	      // 15.2.4.5.2 CallInstantiate
	      .then(function(source) {
	        load.source = source;
	        return loader.loaderObj.instantiate({ name: load.name, metadata: load.metadata, address: load.address, source: source });
	      })

	      // 15.2.4.5.3 InstantiateSucceeded
	      .then(function(instantiateResult) {
	        if (instantiateResult === undefined) {
	          load.address = load.address || '<Anonymous Module ' + ++anonCnt + '>';

	          // instead of load.kind, use load.isDeclarative
	          load.isDeclarative = true;
	          return transpile.call(loader.loaderObj, load)
	          .then(function(transpiled) {
	            // Hijack System.register to set declare function
	            var curSystem = __global.System;
	            var curRegister = curSystem.register;
	            curSystem.register = function(name, deps, declare) {
	              if (typeof name != 'string') {
	                declare = deps;
	                deps = name;
	              }
	              // store the registered declaration as load.declare
	              // store the deps as load.deps
	              load.declare = declare;
	              load.depsList = deps;
	            }
	            // empty {} context is closest to undefined 'this' we can get
	            __eval(transpiled, load.address, {});
	            curSystem.register = curRegister;
	          });
	        }
	        else if (typeof instantiateResult == 'object') {
	          load.depsList = instantiateResult.deps || [];
	          load.execute = instantiateResult.execute;
	          load.isDeclarative = false;
	        }
	        else
	          throw TypeError('Invalid instantiate return value');
	      })
	      // 15.2.4.6 ProcessLoadDependencies
	      .then(function() {
	        load.dependencies = [];
	        var depsList = load.depsList;

	        var loadPromises = [];
	        for (var i = 0, l = depsList.length; i < l; i++) (function(request, index) {
	          loadPromises.push(
	            requestLoad(loader, request, load.name, load.address)

	            // 15.2.4.6.1 AddDependencyLoad (load is parentLoad)
	            .then(function(depLoad) {

	              // adjusted from spec to maintain dependency order
	              // this is due to the System.register internal implementation needs
	              load.dependencies[index] = {
	                key: request,
	                value: depLoad.name
	              };

	              if (depLoad.status != 'linked') {
	                var linkSets = load.linkSets.concat([]);
	                for (var i = 0, l = linkSets.length; i < l; i++)
	                  addLoadToLinkSet(linkSets[i], depLoad);
	              }

	              // console.log('AddDependencyLoad ' + depLoad.name + ' for ' + load.name);
	              // snapshot(loader);
	            })
	          );
	        })(depsList[i], i);

	        return Promise.all(loadPromises);
	      })

	      // 15.2.4.6.2 LoadSucceeded
	      .then(function() {
	        // console.log('LoadSucceeded ' + load.name);
	        // snapshot(loader);

	        console.assert(load.status == 'loading', 'is loading');

	        load.status = 'loaded';

	        var linkSets = load.linkSets.concat([]);
	        for (var i = 0, l = linkSets.length; i < l; i++)
	          updateLinkSetOnLoad(linkSets[i], load);
	      });
	    })
	    // 15.2.4.5.4 LoadFailed
	    ['catch'](function(exc) {
	      load.status = 'failed';
	      load.exception = exc;

	      var linkSets = load.linkSets.concat([]);
	      for (var i = 0, l = linkSets.length; i < l; i++) {
	        linkSetFailed(linkSets[i], load, exc);
	      }

	      console.assert(load.linkSets.length == 0, 'linkSets not removed');
	    });
	  }

	  // 15.2.4.7 PromiseOfStartLoadPartwayThrough absorbed into calling functions

	  // 15.2.4.7.1
	  function asyncStartLoadPartwayThrough(stepState) {
	    return function(resolve, reject) {
	      var loader = stepState.loader;
	      var name = stepState.moduleName;
	      var step = stepState.step;

	      if (loader.modules[name])
	        throw new TypeError('"' + name + '" already exists in the module table');

	      // adjusted to pick up existing loads
	      var existingLoad;
	      for (var i = 0, l = loader.loads.length; i < l; i++) {
	        if (loader.loads[i].name == name) {
	          existingLoad = loader.loads[i];

	          if (step == 'translate' && !existingLoad.source) {
	            existingLoad.address = stepState.moduleAddress;
	            proceedToTranslate(loader, existingLoad, Promise.resolve(stepState.moduleSource));
	          }

	          // a primary load -> use that existing linkset if it is for the direct load here
	          // otherwise create a new linkset unit
	          if (existingLoad.linkSets.length && existingLoad.linkSets[0].loads[0].name == existingLoad.name)
	            return existingLoad.linkSets[0].done.then(function() {
	              resolve(existingLoad);
	            });
	        }
	      }

	      var load = existingLoad || createLoad(name);

	      load.metadata = stepState.moduleMetadata;

	      var linkSet = createLinkSet(loader, load);

	      loader.loads.push(load);

	      resolve(linkSet.done);

	      if (step == 'locate')
	        proceedToLocate(loader, load);

	      else if (step == 'fetch')
	        proceedToFetch(loader, load, Promise.resolve(stepState.moduleAddress));

	      else {
	        console.assert(step == 'translate', 'translate step');
	        load.address = stepState.moduleAddress;
	        proceedToTranslate(loader, load, Promise.resolve(stepState.moduleSource));
	      }
	    }
	  }

	  // Declarative linking functions run through alternative implementation:
	  // 15.2.5.1.1 CreateModuleLinkageRecord not implemented
	  // 15.2.5.1.2 LookupExport not implemented
	  // 15.2.5.1.3 LookupModuleDependency not implemented

	  // 15.2.5.2.1
	  function createLinkSet(loader, startingLoad) {
	    var linkSet = {
	      loader: loader,
	      loads: [],
	      startingLoad: startingLoad, // added see spec bug https://bugs.ecmascript.org/show_bug.cgi?id=2995
	      loadingCount: 0
	    };
	    linkSet.done = new Promise(function(resolve, reject) {
	      linkSet.resolve = resolve;
	      linkSet.reject = reject;
	    });
	    addLoadToLinkSet(linkSet, startingLoad);
	    return linkSet;
	  }
	  // 15.2.5.2.2
	  function addLoadToLinkSet(linkSet, load) {
	    if (load.status == 'failed')
	      return;

	    console.assert(load.status == 'loading' || load.status == 'loaded', 'loading or loaded on link set');

	    for (var i = 0, l = linkSet.loads.length; i < l; i++)
	      if (linkSet.loads[i] == load)
	        return;

	    linkSet.loads.push(load);
	    load.linkSets.push(linkSet);

	    // adjustment, see https://bugs.ecmascript.org/show_bug.cgi?id=2603
	    if (load.status != 'loaded') {
	      linkSet.loadingCount++;
	    }

	    var loader = linkSet.loader;

	    for (var i = 0, l = load.dependencies.length; i < l; i++) {
	      if (!load.dependencies[i])
	        continue;

	      var name = load.dependencies[i].value;

	      if (loader.modules[name])
	        continue;

	      for (var j = 0, d = loader.loads.length; j < d; j++) {
	        if (loader.loads[j].name != name)
	          continue;

	        addLoadToLinkSet(linkSet, loader.loads[j]);
	        break;
	      }
	    }
	    // console.log('add to linkset ' + load.name);
	    // snapshot(linkSet.loader);
	  }

	  // linking errors can be generic or load-specific
	  // this is necessary for debugging info
	  function doLink(linkSet) {
	    var error = false;
	    try {
	      link(linkSet, function(load, exc) {
	        linkSetFailed(linkSet, load, exc);
	        error = true;
	      });
	    }
	    catch(e) {
	      linkSetFailed(linkSet, null, e);
	      error = true;
	    }
	    return error;
	  }

	  // 15.2.5.2.3
	  function updateLinkSetOnLoad(linkSet, load) {
	    // console.log('update linkset on load ' + load.name);
	    // snapshot(linkSet.loader);

	    console.assert(load.status == 'loaded' || load.status == 'linked', 'loaded or linked');

	    linkSet.loadingCount--;

	    if (linkSet.loadingCount > 0)
	      return;

	    // adjusted for spec bug https://bugs.ecmascript.org/show_bug.cgi?id=2995
	    var startingLoad = linkSet.startingLoad;

	    // non-executing link variation for loader tracing
	    // on the server. Not in spec.
	    /***/
	    if (linkSet.loader.loaderObj.execute === false) {
	      var loads = [].concat(linkSet.loads);
	      for (var i = 0, l = loads.length; i < l; i++) {
	        var load = loads[i];
	        load.module = !load.isDeclarative ? {
	          module: _newModule({})
	        } : {
	          name: load.name,
	          module: _newModule({}),
	          evaluated: true
	        };
	        load.status = 'linked';
	        finishLoad(linkSet.loader, load);
	      }
	      return linkSet.resolve(startingLoad);
	    }
	    /***/

	    var abrupt = doLink(linkSet);

	    if (abrupt)
	      return;

	    console.assert(linkSet.loads.length == 0, 'loads cleared');

	    linkSet.resolve(startingLoad);
	  }

	  // 15.2.5.2.4
	  function linkSetFailed(linkSet, load, exc) {
	    var loader = linkSet.loader;
	    var requests;

	    checkError: 
	    if (load) {
	      if (linkSet.loads[0].name == load.name) {
	        exc = addToError(exc, 'Error loading ' + load.name);
	      }
	      else {
	        for (var i = 0; i < linkSet.loads.length; i++) {
	          var pLoad = linkSet.loads[i];
	          for (var j = 0; j < pLoad.dependencies.length; j++) {
	            var dep = pLoad.dependencies[j];
	            if (dep.value == load.name) {
	              exc = addToError(exc, 'Error loading ' + load.name + ' as "' + dep.key + '" from ' + pLoad.name);
	              break checkError;
	            }
	          }
	        }
	        exc = addToError(exc, 'Error loading ' + load.name + ' from ' + linkSet.loads[0].name);
	      }
	    }
	    else {
	      exc = addToError(exc, 'Error linking ' + linkSet.loads[0].name);
	    }


	    var loads = linkSet.loads.concat([]);
	    for (var i = 0, l = loads.length; i < l; i++) {
	      var load = loads[i];

	      // store all failed load records
	      loader.loaderObj.failed = loader.loaderObj.failed || [];
	      if (indexOf.call(loader.loaderObj.failed, load) == -1)
	        loader.loaderObj.failed.push(load);

	      var linkIndex = indexOf.call(load.linkSets, linkSet);
	      console.assert(linkIndex != -1, 'link not present');
	      load.linkSets.splice(linkIndex, 1);
	      if (load.linkSets.length == 0) {
	        var globalLoadsIndex = indexOf.call(linkSet.loader.loads, load);
	        if (globalLoadsIndex != -1)
	          linkSet.loader.loads.splice(globalLoadsIndex, 1);
	      }
	    }
	    linkSet.reject(exc);
	  }

	  // 15.2.5.2.5
	  function finishLoad(loader, load) {
	    // add to global trace if tracing
	    if (loader.loaderObj.trace) {
	      if (!loader.loaderObj.loads)
	        loader.loaderObj.loads = {};
	      var depMap = {};
	      load.dependencies.forEach(function(dep) {
	        depMap[dep.key] = dep.value;
	      });
	      loader.loaderObj.loads[load.name] = {
	        name: load.name,
	        deps: load.dependencies.map(function(dep){ return dep.key }),
	        depMap: depMap,
	        address: load.address,
	        metadata: load.metadata,
	        source: load.source,
	        kind: load.isDeclarative ? 'declarative' : 'dynamic'
	      };
	    }
	    // if not anonymous, add to the module table
	    if (load.name) {
	      console.assert(!loader.modules[load.name], 'load not in module table');
	      loader.modules[load.name] = load.module;
	    }
	    var loadIndex = indexOf.call(loader.loads, load);
	    if (loadIndex != -1)
	      loader.loads.splice(loadIndex, 1);
	    for (var i = 0, l = load.linkSets.length; i < l; i++) {
	      loadIndex = indexOf.call(load.linkSets[i].loads, load);
	      if (loadIndex != -1)
	        load.linkSets[i].loads.splice(loadIndex, 1);
	    }
	    load.linkSets.splice(0, load.linkSets.length);
	  }

	  function doDynamicExecute(linkSet, load, linkError) {
	    try {
	      var module = load.execute();
	    }
	    catch(e) {
	      linkError(load, e);
	      return;
	    }
	    if (!module || !(module instanceof Module))
	      linkError(load, new TypeError('Execution must define a Module instance'));
	    else
	      return module;
	  }

	  // 26.3 Loader

	  // 26.3.1.1
	  // defined at top

	  // importPromises adds ability to import a module twice without error - https://bugs.ecmascript.org/show_bug.cgi?id=2601
	  function createImportPromise(loader, name, promise) {
	    var importPromises = loader._loader.importPromises;
	    return importPromises[name] = promise.then(function(m) {
	      importPromises[name] = undefined;
	      return m;
	    }, function(e) {
	      importPromises[name] = undefined;
	      throw e;
	    });
	  }

	  Loader.prototype = {
	    // 26.3.3.1
	    constructor: Loader,
	    // 26.3.3.2
	    define: function(name, source, options) {
	      // check if already defined
	      if (this._loader.importPromises[name])
	        throw new TypeError('Module is already loading.');
	      return createImportPromise(this, name, new Promise(asyncStartLoadPartwayThrough({
	        step: 'translate',
	        loader: this._loader,
	        moduleName: name,
	        moduleMetadata: options && options.metadata || {},
	        moduleSource: source,
	        moduleAddress: options && options.address
	      })));
	    },
	    // 26.3.3.3
	    'delete': function(name) {
	      var loader = this._loader;
	      delete loader.importPromises[name];
	      delete loader.moduleRecords[name];
	      return loader.modules[name] ? delete loader.modules[name] : false;
	    },
	    // 26.3.3.4 entries not implemented
	    // 26.3.3.5
	    get: function(key) {
	      if (!this._loader.modules[key])
	        return;
	      doEnsureEvaluated(this._loader.modules[key], [], this);
	      return this._loader.modules[key].module;
	    },
	    // 26.3.3.7
	    has: function(name) {
	      return !!this._loader.modules[name];
	    },
	    // 26.3.3.8
	    'import': function(name, parentName, parentAddress) {
	      if (typeof parentName == 'object')
	        parentName = parentName.name;

	      // run normalize first
	      var loaderObj = this;

	      // added, see https://bugs.ecmascript.org/show_bug.cgi?id=2659
	      return Promise.resolve(loaderObj.normalize(name, parentName))
	      .then(function(name) {
	        var loader = loaderObj._loader;

	        if (loader.modules[name]) {
	          doEnsureEvaluated(loader.modules[name], [], loader._loader);
	          return loader.modules[name].module;
	        }

	        return loader.importPromises[name] || createImportPromise(loaderObj, name,
	          loadModule(loader, name, {})
	          .then(function(load) {
	            delete loader.importPromises[name];
	            return evaluateLoadedModule(loader, load);
	          }));
	      });
	    },
	    // 26.3.3.9 keys not implemented
	    // 26.3.3.10
	    load: function(name) {
	      var loader = this._loader;
	      if (loader.modules[name])
	        return Promise.resolve();
	      return loader.importPromises[name] || createImportPromise(this, name, new Promise(asyncStartLoadPartwayThrough({
	        step: 'locate',
	        loader: loader,
	        moduleName: name,
	        moduleMetadata: {},
	        moduleSource: undefined,
	        moduleAddress: undefined
	      }))
	      .then(function() {
	        delete loader.importPromises[name];
	      }));
	    },
	    // 26.3.3.11
	    module: function(source, options) {
	      var load = createLoad();
	      load.address = options && options.address;
	      var linkSet = createLinkSet(this._loader, load);
	      var sourcePromise = Promise.resolve(source);
	      var loader = this._loader;
	      var p = linkSet.done.then(function() {
	        return evaluateLoadedModule(loader, load);
	      });
	      proceedToTranslate(loader, load, sourcePromise);
	      return p;
	    },
	    // 26.3.3.12
	    newModule: function (obj) {
	      if (typeof obj != 'object')
	        throw new TypeError('Expected object');

	      var m = new Module();

	      var pNames = [];
	      if (Object.getOwnPropertyNames && obj != null)
	        pNames = Object.getOwnPropertyNames(obj);
	      else
	        for (var key in obj)
	          pNames.push(key);

	      for (var i = 0; i < pNames.length; i++) (function(key) {
	        defineProperty(m, key, {
	          configurable: false,
	          enumerable: true,
	          get: function () {
	            return obj[key];
	          },
	          set: function() {
	            throw new Error('Module exports cannot be changed externally.');
	          }
	        });
	      })(pNames[i]);

	      if (Object.freeze)
	        Object.freeze(m);

	      return m;
	    },
	    // 26.3.3.14
	    set: function(name, module) {
	      if (!(module instanceof Module))
	        throw new TypeError('Loader.set(' + name + ', module) must be a module');
	      this._loader.modules[name] = {
	        module: module
	      };
	    },
	    // 26.3.3.15 values not implemented
	    // 26.3.3.16 @@iterator not implemented
	    // 26.3.3.17 @@toStringTag not implemented

	    // 26.3.3.18.1
	    normalize: function(name, referrerName, referrerAddress) {
	      return name;
	    },
	    // 26.3.3.18.2
	    locate: function(load) {
	      return load.name;
	    },
	    // 26.3.3.18.3
	    fetch: function(load) {
	    },
	    // 26.3.3.18.4
	    translate: function(load) {
	      return load.source;
	    },
	    // 26.3.3.18.5
	    instantiate: function(load) {
	    }
	  };

	  var _newModule = Loader.prototype.newModule;
	/*
	 * ES6 Module Declarative Linking Code - Dev Build Only
	 */
	  function link(linkSet, linkError) {

	    var loader = linkSet.loader;

	    if (!linkSet.loads.length)
	      return;

	    var loads = linkSet.loads.concat([]);

	    for (var i = 0; i < loads.length; i++) {
	      var load = loads[i];

	      var module = doDynamicExecute(linkSet, load, linkError);
	      if (!module)
	        return;
	      load.module = {
	        name: load.name,
	        module: module
	      };
	      load.status = 'linked';

	      finishLoad(loader, load);
	    }
	  }

	  function evaluateLoadedModule(loader, load) {
	    console.assert(load.status == 'linked', 'is linked ' + load.name);
	    return load.module.module;
	  }

	  function doEnsureEvaluated() {}

	  function transpile() {
	    throw new TypeError('ES6 transpilation is only provided in the dev module loader build.');
	  }
	})();/*
	*********************************************************************************************

	  System Loader Implementation

	    - Implemented to https://github.com/jorendorff/js-loaders/blob/master/browser-loader.js

	    - <script type="module"> supported

	*********************************************************************************************
	*/

	var System;

	function SystemLoader() {
	  Loader.call(this);
	  this.paths = {};
	}

	// NB no specification provided for System.paths, used ideas discussed in https://github.com/jorendorff/js-loaders/issues/25
	function applyPaths(paths, name) {
	  // most specific (most number of slashes in path) match wins
	  var pathMatch = '', wildcard, maxWildcardPrefixLen = 0;

	  // check to see if we have a paths entry
	  for (var p in paths) {
	    var pathParts = p.split('*');
	    if (pathParts.length > 2)
	      throw new TypeError('Only one wildcard in a path is permitted');

	    // exact path match
	    if (pathParts.length == 1) {
	      if (name == p)
	        return paths[p];
	      
	      // support trailing / in paths rules
	      else if (name.substr(0, p.length - 1) == p.substr(0, p.length - 1) && (name.length < p.length || name[p.length - 1] == p[p.length - 1]) && paths[p][paths[p].length - 1] == '/')
	        return paths[p].substr(0, paths[p].length - 1) + (name.length > p.length ? '/' + name.substr(p.length) : '');
	    }
	    // wildcard path match
	    else {
	      var wildcardPrefixLen = pathParts[0].length;
	      if (wildcardPrefixLen >= maxWildcardPrefixLen &&
	          name.substr(0, pathParts[0].length) == pathParts[0] &&
	          name.substr(name.length - pathParts[1].length) == pathParts[1]) {
	            maxWildcardPrefixLen = wildcardPrefixLen;
	            pathMatch = p;
	            wildcard = name.substr(pathParts[0].length, name.length - pathParts[1].length - pathParts[0].length);
	          }
	    }
	  }

	  var outPath = paths[pathMatch];
	  if (typeof wildcard == 'string')
	    outPath = outPath.replace('*', wildcard);

	  return outPath;
	}

	// inline Object.create-style class extension
	function LoaderProto() {}
	LoaderProto.prototype = Loader.prototype;
	SystemLoader.prototype = new LoaderProto();
	  var fetchTextFromURL;
	  if (typeof XMLHttpRequest != 'undefined') {
	    fetchTextFromURL = function(url, authorization, fulfill, reject) {
	      var xhr = new XMLHttpRequest();
	      var sameDomain = true;
	      var doTimeout = false;
	      if (!('withCredentials' in xhr)) {
	        // check if same domain
	        var domainCheck = /^(\w+:)?\/\/([^\/]+)/.exec(url);
	        if (domainCheck) {
	          sameDomain = domainCheck[2] === window.location.host;
	          if (domainCheck[1])
	            sameDomain &= domainCheck[1] === window.location.protocol;
	        }
	      }
	      if (!sameDomain && typeof XDomainRequest != 'undefined') {
	        xhr = new XDomainRequest();
	        xhr.onload = load;
	        xhr.onerror = error;
	        xhr.ontimeout = error;
	        xhr.onprogress = function() {};
	        xhr.timeout = 0;
	        doTimeout = true;
	      }
	      function load() {
	        fulfill(xhr.responseText);
	      }
	      function error() {
	        reject(new Error('XHR error' + (xhr.status ? ' (' + xhr.status + (xhr.statusText ? ' ' + xhr.statusText  : '') + ')' : '') + ' loading ' + url));
	      }

	      xhr.onreadystatechange = function () {
	        if (xhr.readyState === 4) {
	          // in Chrome on file:/// URLs, status is 0
	          if (xhr.status == 0) {
	            if (xhr.responseText) {
	              load();
	            }
	            else {
	              // when responseText is empty, wait for load or error event
	              // to inform if it is a 404 or empty file
	              xhr.addEventListener('error', error);
	              xhr.addEventListener('load', load);
	            }
	          }
	          else if (xhr.status === 200) {
	            load();
	          }
	          else {
	            error();
	          }
	        }
	      };
	      xhr.open("GET", url, true);

	      if (xhr.setRequestHeader) {
	        xhr.setRequestHeader('Accept', 'application/x-es-module, */*');
	        // can set "authorization: true" to enable withCredentials only
	        if (authorization) {
	          if (typeof authorization == 'string')
	            xhr.setRequestHeader('Authorization', authorization);
	          xhr.withCredentials = true;
	        }
	      }

	      if (doTimeout) {
	        setTimeout(function() {
	          xhr.send();
	        }, 0);
	      } else {
	        xhr.send(null);
	      }
	    };
	  }
	  else if ("function" != 'undefined' && typeof process != 'undefined') {
	    var fs;
	    fetchTextFromURL = function(url, authorization, fulfill, reject) {
	      if (url.substr(0, 8) != 'file:///')
	        throw new Error('Unable to fetch "' + url + '". Only file URLs of the form file:/// allowed running in Node.');
	      fs = fs || __webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }()));
	      if (isWindows)
	        url = url.replace(/\//g, '\\').substr(8);
	      else
	        url = url.substr(7);
	      return fs.readFile(url, function(err, data) {
	        if (err) {
	          return reject(err);
	        }
	        else {
	          // Strip Byte Order Mark out if it's the leading char
	          var dataString = data + '';
	          if (dataString[0] === '\ufeff')
	            dataString = dataString.substr(1);

	          fulfill(dataString);
	        }
	      });
	    };
	  }
	  else if (typeof self != 'undefined' && typeof self.fetch != 'undefined') {
	    fetchTextFromURL = function(url, authorization, fulfill, reject) {
	      var opts = {
	        headers: {'Accept': 'application/x-es-module, */*'}
	      };

	      if (authorization) {
	        if (typeof authorization == 'string')
	          opts.headers['Authorization'] = authorization;
	        opts.credentials = 'include';
	      }

	      fetch(url, opts)
	        .then(function (r) {
	          if (r.ok) {
	            return r.text();
	          } else {
	            throw new Error('Fetch error: ' + r.status + ' ' + r.statusText);
	          }
	        })
	        .then(fulfill, reject);
	    }
	  }
	  else {
	    throw new TypeError('No environment fetch API available.');
	  }

	  SystemLoader.prototype.fetch = function(load) {
	    return new Promise(function(resolve, reject) {
	      fetchTextFromURL(load.address, undefined, resolve, reject);
	    });
	  };
	/*
	 * Traceur, Babel and TypeScript transpile hook for Loader
	 */
	var transpile = (function() {

	  // use Traceur by default
	  Loader.prototype.transpiler = 'traceur';

	  function transpile(load) {
	    var self = this;

	    return Promise.resolve(__global[self.transpiler == 'typescript' ? 'ts' : self.transpiler]
	        || (self.pluginLoader || self)['import'](self.transpiler))
	    .then(function(transpiler) {
	      if (transpiler.__useDefault)
	        transpiler = transpiler['default'];

	      var transpileFunction;
	      if (transpiler.Compiler)
	        transpileFunction = traceurTranspile;
	      else if (transpiler.createLanguageService)
	        transpileFunction = typescriptTranspile;
	      else
	        transpileFunction = babelTranspile;

	      // note __moduleName will be part of the transformer meta in future when we have the spec for this
	      return '(function(__moduleName){' + transpileFunction.call(self, load, transpiler) + '\n})("' + load.name + '");\n//# sourceURL=' + load.address + '!transpiled';
	    });
	  };

	  function traceurTranspile(load, traceur) {
	    var options = this.traceurOptions || {};
	    options.modules = 'instantiate';
	    options.script = false;
	    if (options.sourceMaps === undefined)
	      options.sourceMaps = 'inline';
	    options.filename = load.address;
	    options.inputSourceMap = load.metadata.sourceMap;
	    options.moduleName = false;

	    var compiler = new traceur.Compiler(options);

	    return doTraceurCompile(load.source, compiler, options.filename);
	  }
	  function doTraceurCompile(source, compiler, filename) {
	    try {
	      return compiler.compile(source, filename);
	    }
	    catch(e) {
	      // on older versions of traceur (<0.9.3), an array of errors is thrown
	      // rather than a single error.
	      if (e.length) {
	        throw e[0];
	      }
	      throw e;
	    }
	  }

	  function babelTranspile(load, babel) {
	    var options = this.babelOptions || {};
	    options.modules = 'system';
	    if (options.sourceMap === undefined)
	      options.sourceMap = 'inline';
	    options.inputSourceMap = load.metadata.sourceMap;
	    options.filename = load.address;
	    options.code = true;
	    options.ast = false;

	    return babel.transform(load.source, options).code;
	  }

	  function typescriptTranspile(load, ts) {
	    var options = this.typescriptOptions || {};
	    options.target = options.target || ts.ScriptTarget.ES5;
	    if (options.sourceMap === undefined)
	      options.sourceMap = true;
	    if (options.sourceMap && options.inlineSourceMap !== false)
	      options.inlineSourceMap = true;

	    options.module = ts.ModuleKind.System;

	    return ts.transpile(load.source, options, load.address);
	  }

	  return transpile;
	})();
	// SystemJS Loader Class and Extension helpers

	function SystemJSLoader() {
	  SystemLoader.call(this);

	  systemJSConstructor.call(this);
	}

	// inline Object.create-style class extension
	function SystemProto() {};
	SystemProto.prototype = SystemLoader.prototype;
	SystemJSLoader.prototype = new SystemProto();
	SystemJSLoader.prototype.constructor = SystemJSLoader;

	// remove ESML instantiate
	SystemJSLoader.prototype.instantiate = function() {};

	var systemJSConstructor;

	function hook(name, hook) {
	  SystemJSLoader.prototype[name] = hook(SystemJSLoader.prototype[name] || function() {});
	}
	function hookConstructor(hook) {
	  systemJSConstructor = hook(systemJSConstructor || function() {});
	}

	function dedupe(deps) {
	  var newDeps = [];
	  for (var i = 0, l = deps.length; i < l; i++)
	    if (indexOf.call(newDeps, deps[i]) == -1)
	      newDeps.push(deps[i])
	  return newDeps;
	}

	function group(deps) {
	  var names = [];
	  var indices = [];
	  for (var i = 0, l = deps.length; i < l; i++) {
	    var index = indexOf.call(names, deps[i]);
	    if (index === -1) {
	      names.push(deps[i]);
	      indices.push([i]);
	    }
	    else {
	      indices[index].push(i);
	    }
	  }
	  return { names: names, indices: indices };
	}

	var getOwnPropertyDescriptor = true;
	try {
	  Object.getOwnPropertyDescriptor({ a: 0 }, 'a');
	}
	catch(e) {
	  getOwnPropertyDescriptor = false;
	}

	// converts any module.exports object into an object ready for SystemJS.newModule
	function getESModule(exports) {
	  var esModule = {};
	  // don't trigger getters/setters in environments that support them
	  if (typeof exports == 'object' || typeof exports == 'function') {
	    var hasOwnProperty = exports && exports.hasOwnProperty;
	    if (getOwnPropertyDescriptor) {
	      for (var p in exports) {
	        if (!trySilentDefineProperty(esModule, exports, p))
	          setPropertyIfHasOwnProperty(esModule, exports, p, hasOwnProperty);
	      }
	    }
	    else {
	      for (var p in exports)
	        setPropertyIfHasOwnProperty(esModule, exports, p, hasOwnProperty);
	    }
	  }
	  esModule['default'] = exports;
	  defineProperty(esModule, '__useDefault', {
	    value: true
	  });
	  return esModule;
	}

	function setPropertyIfHasOwnProperty(targetObj, sourceObj, propName, hasOwnProperty) {
	  if (!hasOwnProperty || sourceObj.hasOwnProperty(propName))
	    targetObj[propName] = sourceObj[propName];
	}

	function trySilentDefineProperty(targetObj, sourceObj, propName) {
	  try {
	    var d;
	    if (d = Object.getOwnPropertyDescriptor(sourceObj, propName))
	      defineProperty(targetObj, propName, d);

	    return true;
	  } catch (ex) {
	    // Object.getOwnPropertyDescriptor threw an exception, fall back to normal set property.
	    return false;
	  }
	}

	function extend(a, b, prepend) {
	  for (var p in b) {
	    if (!prepend || !(p in a))
	      a[p] = b[p];
	  }
	  return a;
	}

	// package configuration options
	var packageProperties = ['main', 'format', 'defaultExtension', 'meta', 'map', 'basePath', 'depCache'];

	// meta first-level extends where:
	// array + array appends
	// object + object extends
	// other properties replace
	function extendMeta(a, b, prepend) {
	  for (var p in b) {
	    var val = b[p];
	    if (!(p in a))
	      a[p] = val;
	    else if (val instanceof Array && a[p] instanceof Array)
	      a[p] = [].concat(prepend ? val : a[p]).concat(prepend ? a[p] : val);
	    else if (typeof val == 'object' && val !== null && typeof a[p] == 'object')
	      a[p] = extend(extend({}, a[p]), val, prepend);
	    else if (!prepend)
	      a[p] = val;
	  }
	}

	function warn(msg) {
	  if (this.warnings && typeof console != 'undefined' && console.warn)
	    console.warn(msg);
	}
	// we define a __exec for globally-scoped execution
	// used by module format implementations
	var __exec;

	(function() {

	  var hasBtoa = typeof btoa != 'undefined';

	  function getSource(load) {
	    var lastLineIndex = load.source.lastIndexOf('\n');

	    // wrap ES formats with a System closure for System global encapsulation
	    var wrap = load.metadata.format != 'global';

	    var sourceMap = load.metadata.sourceMap;
	    if (sourceMap) {
	      if (typeof sourceMap != 'object')
	        throw new TypeError('load.metadata.sourceMap must be set to an object.');

	      sourceMap = JSON.stringify(sourceMap);
	    }

	    return (wrap ? '(function(System, SystemJS) {' : '') + load.source + (wrap ? '\n})(System, System);' : '')
	        // adds the sourceURL comment if not already present
	        + (load.source.substr(lastLineIndex, 15) != '\n//# sourceURL=' 
	          ? '\n//# sourceURL=' + load.address + (sourceMap ? '!transpiled' : '') : '')
	        // add sourceMappingURL if load.metadata.sourceMap is set
	        + (sourceMap && hasBtoa && '\n//# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(sourceMap))) || '');
	  }

	  var curLoad;

	  // System.register, System.registerDynamic, AMD define pipeline
	  // if currently evalling code here, immediately reduce the registered entry against the load record
	  hook('pushRegister_', function() {
	    return function(register) {
	      if (!curLoad)
	        return false;

	      this.reduceRegister_(curLoad, register);
	      return true;
	    };
	  });

	  // System clobbering protection (mostly for Traceur)
	  var curSystem;
	  var callCounter = 0;
	  function preExec(loader, load) {
	    curLoad = load;
	    if (callCounter++ == 0)
	      curSystem = __global.System;
	    __global.System = __global.SystemJS = loader; 
	  }
	  function postExec() {
	    if (--callCounter == 0)
	      __global.System = __global.SystemJS = curSystem;
	    curLoad = undefined;
	  }

	  var vm;
	  __exec = function(load) {
	    if (!load.source)
	      return;
	    if ((load.metadata.integrity || load.metadata.nonce) && supportsScriptExec)
	      return scriptExec.call(this, load);
	    try {
	      preExec(this, load);
	      curLoad = load;
	      // global scoped eval for node (avoids require scope leak)
	      if (this._nodeRequire) {
	        vm = vm || this._nodeRequire('vm');
	        vm.runInThisContext(getSource(load));
	      }
	      else {
	        (0, eval)(getSource(load));
	      }
	      postExec();
	    }
	    catch(e) {
	      postExec(); 
	      throw addToError(e, 'Evaluating ' + load.address);
	    }
	  };

	  var supportsScriptExec = false;
	  if (isBrowser && typeof document != 'undefined' && document.getElementsByTagName) {
	    var scripts = document.getElementsByTagName('script');
	    $__curScript = scripts[scripts.length - 1];

	    if (!(window.chrome && window.chrome.extension || navigator.userAgent.match(/^Node\.js/)))
	      supportsScriptExec = true;
	  }

	  // script execution via injecting a script tag into the page
	  // this allows CSP integrity and nonce to be set for CSP environments
	  var head;
	  function scriptExec(load) {
	    if (!head)
	      head = document.head || document.body || document.documentElement;

	    var script = document.createElement('script');
	    script.text = getSource(load, false);
	    var onerror = window.onerror;
	    var e;
	    window.onerror = function(_e) {
	      e = addToError(_e, 'Evaluating ' + load.address);
	    }
	    preExec(this, load);

	    if (load.metadata.integrity)
	      script.setAttribute('integrity', load.metadata.integrity);
	    if (load.metadata.nonce)
	      script.setAttribute('nonce', load.metadata.nonce);

	    head.appendChild(script);
	    head.removeChild(script);
	    postExec();
	    window.onerror = onerror;
	    if (e)
	      throw e;
	  }

	})();
	var absURLRegEx = /^[^\/]+:\/\//;

	function readMemberExpression(p, value) {
	  var pParts = p.split('.');
	  while (pParts.length)
	    value = value[pParts.shift()];
	  return value;
	}

	var baseURLCache = {};
	function getBaseURLObj() {
	  if (baseURLCache[this.baseURL])
	    return baseURLCache[this.baseURL];

	  // normalize baseURL if not already
	  if (this.baseURL[this.baseURL.length - 1] != '/')
	    this.baseURL += '/';

	  var baseURL = new URL(this.baseURL, baseURI);

	  this.baseURL = baseURL.href;

	  return (baseURLCache[this.baseURL] = baseURL);
	}

	function getMapMatch(map, name) {
	  var bestMatch, bestMatchLength = 0;

	  for (var p in map) {
	    if (name.substr(0, p.length) == p && (name.length == p.length || name[p.length] == '/')) {
	      var curMatchLength = p.split('/').length;
	      if (curMatchLength <= bestMatchLength)
	        continue;
	      bestMatch = p;
	      bestMatchLength = curMatchLength;
	    }
	  }

	  return bestMatch;
	}

	function setProduction(isProduction) {
	  this.set('@system-env', this.newModule({
	    browser: isBrowser,
	    node: !!this._nodeRequire,
	    production: isProduction,
	    'default': true
	  }));
	}

	var baseURIObj = new URL(baseURI);

	hookConstructor(function(constructor) {
	  return function() {
	    constructor.call(this);

	    // support baseURL
	    this.baseURL = baseURI.substr(0, baseURI.lastIndexOf('/') + 1);

	    // support map and paths
	    this.map = {};
	    this.paths = {};

	    // global behaviour flags
	    this.warnings = false;
	    this.defaultJSExtensions = false;
	    this.pluginFirst = false;
	    this.loaderErrorStack = false;

	    // by default load ".json" files as json
	    // leading * meta doesn't need normalization
	    // NB add this in next breaking release
	    // this.meta['*.json'] = { format: 'json' };

	    // support the empty module, as a concept
	    this.set('@empty', this.newModule({}));

	    setProduction.call(this, false);
	  };
	});

	// include the node require since we're overriding it
	if ("function" != 'undefined' && typeof process != 'undefined' && !process.browser)
	  SystemJSLoader.prototype._nodeRequire = __webpack_require__(729);

	var nodeCoreModules = ['assert', 'buffer', 'child_process', 'cluster', 'console', 'constants', 
	    'crypto', 'dgram', 'dns', 'domain', 'events', 'fs', 'http', 'https', 'module', 'net', 'os', 'path', 
	    'process', 'punycode', 'querystring', 'readline', 'repl', 'stream', 'string_decoder', 'sys', 'timers', 
	    'tls', 'tty', 'url', 'util', 'vm', 'zlib'];

	/*
	  Core SystemJS Normalization

	  If a name is relative, we apply URL normalization to the page
	  If a name is an absolute URL, we leave it as-is

	  Plain names (neither of the above) run through the map and paths
	  normalization phases.

	  The paths normalization phase applies last (paths extension), which
	  defines the `decanonicalize` function and normalizes everything into
	  a URL.
	 */

	function isPlain(name) {
	  return (name[0] != '.' || (!!name[1] && name[1] != '/' && name[1] != '.')) && name[0] != '/' && !name.match(absURLRegEx);
	}

	function urlResolve(name, parent) {
	  if (parent)
	    parent = parent.replace(/#/g, '%05');
	  return new URL(name, parent || baseURIObj).href.replace(/%05/g, '#');
	}

	// only applies to plain names
	function baseURLResolve(loader, name) {
	  return new URL(name, getBaseURLObj.call(loader)).href;
	}

	function coreResolve(name, parentName) {
	  // standard URL resolution
	  if (!isPlain(name))
	    return urlResolve(name, parentName);

	  // plain names not starting with './', '://' and '/' go through custom resolution
	  var mapMatch = getMapMatch(this.map, name);

	  if (mapMatch) {
	    name = this.map[mapMatch] + name.substr(mapMatch.length);

	    if (!isPlain(name))
	      return urlResolve(name);
	  }

	  if (this.has(name))
	    return name;
	  // dynamically load node-core modules when requiring `@node/fs` for example
	  if (name.substr(0, 6) == '@node/' && nodeCoreModules.indexOf(name.substr(6)) != -1) {
	    if (!this._nodeRequire)
	      throw new TypeError('Error loading ' + name + '. Can only load node core modules in Node.');
	    this.set(name, this.newModule(getESModule(this._nodeRequire(name.substr(6)))));
	    return name;
	  }

	  var pathed = applyPaths(this.paths, name);

	  if (pathed && !isPlain(pathed))
	    return urlResolve(pathed);

	  return baseURLResolve(this, pathed || name);
	}

	hook('normalize', function(normalize) {
	  return function(name, parentName, skipExt) {
	    var resolved = coreResolve.call(this, name, parentName);
	    if (!skipExt && this.defaultJSExtensions && resolved.substr(resolved.length - 3, 3) != '.js' && !isPlain(resolved))
	      resolved += '.js';
	    return resolved;
	  };
	});

	// percent encode just '#' in urls if using HTTP requests
	var httpRequest = typeof XMLHttpRequest != 'undefined';
	hook('locate', function(locate) {
	  return function(load) {
	    return Promise.resolve(locate.call(this, load))
	    .then(function(address) {
	      if (httpRequest)
	        return address.replace(/#/g, '%23');
	      return address;
	    });
	  };
	});

	/*
	 * Fetch with authorization
	 */
	hook('fetch', function() {
	  return function(load) {
	    return new Promise(function(resolve, reject) {
	      fetchTextFromURL(load.address, load.metadata.authorization, resolve, reject);
	    });
	  };
	});

	/*
	  __useDefault
	  
	  When a module object looks like:
	  newModule(
	    __useDefault: true,
	    default: 'some-module'
	  })

	  Then importing that module provides the 'some-module'
	  result directly instead of the full module.

	  Useful for eg module.exports = function() {}
	*/
	hook('import', function(systemImport) {
	  return function(name, parentName, parentAddress) {
	    if (parentName && parentName.name)
	      warn.call(this, 'SystemJS.import(name, { name: parentName }) is deprecated for SystemJS.import(name, parentName), while importing ' + name + ' from ' + parentName.name);
	    return systemImport.call(this, name, parentName, parentAddress).then(function(module) {
	      return module.__useDefault ? module['default'] : module;
	    });
	  };
	});

	/*
	 * Allow format: 'detect' meta to enable format detection
	 */
	hook('translate', function(systemTranslate) {
	  return function(load) {
	    if (load.metadata.format == 'detect')
	      load.metadata.format = undefined;
	    return systemTranslate.call(this, load);
	  };
	});


	/*
	 * JSON format support
	 *
	 * Supports loading JSON files as a module format itself
	 *
	 * Usage:
	 *
	 * SystemJS.config({
	 *   meta: {
	 *     '*.json': { format: 'json' }
	 *   }
	 * });
	 *
	 * Module is returned as if written:
	 *
	 * export default {JSON}
	 *
	 * No named exports are provided
	 *
	 * Files ending in ".json" are treated as json automatically by SystemJS
	 */
	hook('instantiate', function(instantiate) {
	  return function(load) {
	    if (load.metadata.format == 'json' && !this.builder) {
	      var entry = load.metadata.entry = createEntry();
	      entry.deps = [];
	      entry.execute = function() {
	        try {
	          return JSON.parse(load.source);
	        }
	        catch(e) {
	          throw new Error("Invalid JSON file " + load.name);
	        }
	      };
	    }
	  };
	})

	/*
	 Extend config merging one deep only

	  loader.config({
	    some: 'random',
	    config: 'here',
	    deep: {
	      config: { too: 'too' }
	    }
	  });

	  <=>

	  loader.some = 'random';
	  loader.config = 'here'
	  loader.deep = loader.deep || {};
	  loader.deep.config = { too: 'too' };


	  Normalizes meta and package configs allowing for:

	  SystemJS.config({
	    meta: {
	      './index.js': {}
	    }
	  });

	  To become

	  SystemJS.meta['https://thissite.com/index.js'] = {};

	  For easy normalization canonicalization with latest URL support.

	*/
	SystemJSLoader.prototype.env = 'development';

	var curCurScript;
	SystemJSLoader.prototype.config = function(cfg) {
	  var loader = this;

	  if ('loaderErrorStack' in cfg) {
	    curCurScript = $__curScript;
	    if (cfg.loaderErrorStack)
	      $__curScript = undefined;
	    else
	      $__curScript = curCurScript;
	  }

	  if ('warnings' in cfg)
	    loader.warnings = cfg.warnings;

	  // transpiler deprecation path
	  if (cfg.transpilerRuntime === false)
	    loader._loader.loadedTranspilerRuntime = true;

	  // always configure baseURL first
	  if (cfg.baseURL) {
	    var hasConfig = false;
	    function checkHasConfig(obj) {
	      for (var p in obj)
	        if (hasOwnProperty.call(obj, p))
	          return true;
	    }
	    if (checkHasConfig(loader.packages) || checkHasConfig(loader.meta) || checkHasConfig(loader.depCache) || checkHasConfig(loader.bundles) || checkHasConfig(loader.packageConfigPaths))
	      throw new TypeError('Incorrect configuration order. The baseURL must be configured with the first SystemJS.config call.');

	    loader.baseURL = cfg.baseURL;

	    // sanitize baseURL
	    getBaseURLObj.call(loader);
	  }

	  if (cfg.defaultJSExtensions) {
	    loader.defaultJSExtensions = cfg.defaultJSExtensions;
	    warn.call(loader, 'The defaultJSExtensions configuration option is deprecated, use packages configuration instead.');
	  }

	  if (cfg.pluginFirst)
	    loader.pluginFirst = cfg.pluginFirst;

	  if (cfg.production)
	    setProduction.call(loader, true);

	  if (cfg.paths) {
	    for (var p in cfg.paths)
	      loader.paths[p] = cfg.paths[p];
	  }

	  if (cfg.map) {
	    var objMaps = '';
	    for (var p in cfg.map) {
	      var v = cfg.map[p];

	      // object map backwards-compat into packages configuration
	      if (typeof v !== 'string') {
	        objMaps += (objMaps.length ? ', ' : '') + '"' + p + '"';

	        var defaultJSExtension = loader.defaultJSExtensions && p.substr(p.length - 3, 3) != '.js';
	        var prop = loader.decanonicalize(p);
	        if (defaultJSExtension && prop.substr(prop.length - 3, 3) == '.js')
	          prop = prop.substr(0, prop.length - 3);

	        // if a package main, revert it
	        var pkgMatch = '';
	        for (var pkg in loader.packages) {
	          if (prop.substr(0, pkg.length) == pkg 
	              && (!prop[pkg.length] || prop[pkg.length] == '/') 
	              && pkgMatch.split('/').length < pkg.split('/').length)
	            pkgMatch = pkg;
	        }
	        if (pkgMatch && loader.packages[pkgMatch].main)
	          prop = prop.substr(0, prop.length - loader.packages[pkgMatch].main.length - 1);

	        var pkg = loader.packages[prop] = loader.packages[prop] || {};
	        pkg.map = v;
	      }
	      else {
	        loader.map[p] = v;
	      }
	    }
	    if (objMaps)
	      warn.call(loader, 'The map configuration for ' + objMaps + ' uses object submaps, which is deprecated in global map.\nUpdate this to use package contextual map with configs like SystemJS.config({ packages: { "' + p + '": { map: {...} } } }).');
	  }

	  if (cfg.packageConfigPaths) {
	    var packageConfigPaths = [];
	    for (var i = 0; i < cfg.packageConfigPaths.length; i++) {
	      var path = cfg.packageConfigPaths[i];
	      var packageLength = Math.max(path.lastIndexOf('*') + 1, path.lastIndexOf('/'));
	      var defaultJSExtension = loader.defaultJSExtensions && path.substr(packageLength - 3, 3) != '.js';
	      var normalized = loader.decanonicalize(path.substr(0, packageLength));
	      if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) == '.js')
	        normalized = normalized.substr(0, normalized.length - 3);
	      packageConfigPaths[i] = normalized + path.substr(packageLength);
	    }
	    loader.packageConfigPaths = packageConfigPaths;
	  }

	  if (cfg.bundles) {
	    for (var p in cfg.bundles) {
	      var bundle = [];
	      for (var i = 0; i < cfg.bundles[p].length; i++) {
	        var defaultJSExtension = loader.defaultJSExtensions && cfg.bundles[p][i].substr(cfg.bundles[p][i].length - 3, 3) != '.js';
	        var normalizedBundleDep = loader.decanonicalize(cfg.bundles[p][i]);
	        if (defaultJSExtension && normalizedBundleDep.substr(normalizedBundleDep.length - 3, 3) == '.js')
	          normalizedBundleDep = normalizedBundleDep.substr(0, normalizedBundleDep.length - 3);
	        bundle.push(normalizedBundleDep);
	      }
	      loader.bundles[p] = bundle;
	    }
	  }

	  if (cfg.packages) {
	    for (var p in cfg.packages) {
	      if (p.match(/^([^\/]+:)?\/\/$/))
	        throw new TypeError('"' + p + '" is not a valid package name.');

	      var prop = coreResolve.call(loader, p);

	      // allow trailing slash in packages
	      if (prop[prop.length - 1] == '/')
	        prop = prop.substr(0, prop.length - 1);

	      loader.packages[prop] = loader.packages[prop] || {};

	      var pkg = cfg.packages[p];

	      // meta backwards compatibility
	      if (pkg.modules) {
	        warn.call(loader, 'Package ' + p + ' is configured with "modules", which is deprecated as it has been renamed to "meta".');
	        pkg.meta = pkg.modules;
	        delete pkg.modules;
	      }

	      if (typeof pkg.main == 'object') {
	        pkg.map = pkg.map || {};
	        pkg.map['./@main'] = pkg.main;
	        pkg.main['default'] = pkg.main['default'] || './';
	        pkg.main = '@main';
	      }

	      for (var q in pkg)
	        if (indexOf.call(packageProperties, q) == -1)
	          warn.call(loader, '"' + q + '" is not a valid package configuration option in package ' + p);

	      extendMeta(loader.packages[prop], pkg);
	    }
	  }

	  for (var c in cfg) {
	    var v = cfg[c];

	    if (c == 'baseURL' || c == 'map' || c == 'packages' || c == 'bundles' || c == 'paths' || c == 'warnings' || c == 'packageConfigPaths' || c == 'loaderErrorStack')
	      continue;

	    if (typeof v != 'object' || v instanceof Array) {
	      loader[c] = v;
	    }
	    else {
	      loader[c] = loader[c] || {};

	      for (var p in v) {
	        // base-level wildcard meta does not normalize to retain catch-all quality
	        if (c == 'meta' && p[0] == '*') {
	          loader[c][p] = v[p];
	        }
	        else if (c == 'meta') {
	          // meta can go through global map, with defaultJSExtensions adding
	          var resolved = coreResolve.call(loader, p);
	          if (loader.defaultJSExtensions && resolved.substr(resolved.length - 3, 3) != '.js' && !isPlain(resolved))
	            resolved += '.js';
	          loader[c][resolved] = v[p];
	        }
	        else if (c == 'depCache') {
	          var defaultJSExtension = loader.defaultJSExtensions && p.substr(p.length - 3, 3) != '.js';
	          var prop = loader.decanonicalize(p);
	          if (defaultJSExtension && prop.substr(prop.length - 3, 3) == '.js')
	            prop = prop.substr(0, prop.length - 3);
	          loader[c][prop] = v[p];
	        }
	        else {
	          loader[c][p] = v[p];
	        }
	      }
	    }
	  }
	};/*
	 * Package Configuration Extension
	 *
	 * Example:
	 *
	 * SystemJS.packages = {
	 *   jquery: {
	 *     main: 'index.js', // when not set, package name is requested directly
	 *     format: 'amd',
	 *     defaultExtension: 'ts', // defaults to 'js', can be set to false
	 *     modules: {
	 *       '*.ts': {
	 *         loader: 'typescript'
	 *       },
	 *       'vendor/sizzle.js': {
	 *         format: 'global'
	 *       }
	 *     },
	 *     map: {
	 *        // map internal require('sizzle') to local require('./vendor/sizzle')
	 *        sizzle: './vendor/sizzle.js',
	 *        // map any internal or external require of 'jquery/vendor/another' to 'another/index.js'
	 *        './vendor/another.js': './another/index.js',
	 *        // test.js / test -> lib/test.js
	 *        './test.js': './lib/test.js',
	 *
	 *        // environment-specific map configurations
	 *        './index.js': {
	 *          '~browser': './index-node.js'
	 *        }
	 *     },
	 *     // allows for setting package-prefixed depCache
	 *     // keys are normalized module names relative to the package itself
	 *     depCache: {
	 *       // import 'package/index.js' loads in parallel package/lib/test.js,package/vendor/sizzle.js
	 *       './index.js': ['./test'],
	 *       './test.js': ['external-dep'],
	 *       'external-dep/path.js': ['./another.js']
	 *     }
	 *   }
	 * };
	 *
	 * Then:
	 *   import 'jquery'                       -> jquery/index.js
	 *   import 'jquery/submodule'             -> jquery/submodule.js
	 *   import 'jquery/submodule.ts'          -> jquery/submodule.ts loaded as typescript
	 *   import 'jquery/vendor/another'        -> another/index.js
	 *
	 * Detailed Behaviours
	 * - main can have a leading "./" can be added optionally
	 * - map and defaultExtension are applied to the main
	 * - defaultExtension adds the extension only if the exact extension is not present
	 * - defaultJSExtensions applies after map when defaultExtension is not set
	 * - if a meta value is available for a module, map and defaultExtension are skipped
	 * - like global map, package map also applies to subpaths (sizzle/x, ./vendor/another/sub)
	 * - condition module map is '@env' module in package or '@system-env' globally
	 * - map targets support conditional interpolation ('./x': './x.#{|env}.js')
	 * - internal package map targets cannot use boolean conditionals
	 *
	 * Package Configuration Loading
	 *
	 * Not all packages may already have their configuration present in the System config
	 * For these cases, a list of packageConfigPaths can be provided, which when matched against
	 * a request, will first request a ".json" file by the package name to derive the package
	 * configuration from. This allows dynamic loading of non-predetermined code, a key use
	 * case in SystemJS.
	 *
	 * Example:
	 *
	 *   SystemJS.packageConfigPaths = ['packages/test/package.json', 'packages/*.json'];
	 *
	 *   // will first request 'packages/new-package/package.json' for the package config
	 *   // before completing the package request to 'packages/new-package/path'
	 *   SystemJS.import('packages/new-package/path');
	 *
	 *   // will first request 'packages/test/package.json' before the main
	 *   SystemJS.import('packages/test');
	 *
	 * When a package matches packageConfigPaths, it will always send a config request for
	 * the package configuration.
	 * The package name itself is taken to be the match up to and including the last wildcard
	 * or trailing slash.
	 * The most specific package config path will be used.
	 * Any existing package configurations for the package will deeply merge with the
	 * package config, with the existing package configurations taking preference.
	 * To opt-out of the package configuration request for a package that matches
	 * packageConfigPaths, use the { configured: true } package config option.
	 *
	 */
	(function() {

	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.packages = {};
	      this.packageConfigPaths = [];
	    };
	  });

	  function getPackage(loader, normalized) {
	    // use most specific package
	    var curPkg, curPkgLen = 0, pkgLen;
	    for (var p in loader.packages) {
	      if (normalized.substr(0, p.length) === p && (normalized.length === p.length || normalized[p.length] === '/')) {
	        pkgLen = p.split('/').length;
	        if (pkgLen > curPkgLen) {
	          curPkg = p;
	          curPkgLen = pkgLen;
	        }
	      }
	    }
	    return curPkg;
	  }

	  function addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions) {
	    // don't apply extensions to folders or if defaultExtension = false
	    if (!subPath || subPath[subPath.length - 1] == '/' || skipExtensions || pkg.defaultExtension === false)
	      return subPath;

	    // NB are you sure about this?
	    // skip if we have interpolation conditional syntax in subPath?
	    if (subPath.match(interpolationRegEx))
	      return subPath;

	    var metaMatch = false;

	    // exact meta or meta with any content after the last wildcard skips extension
	    if (pkg.meta)
	      getMetaMatches(pkg.meta, subPath, function(metaPattern, matchMeta, matchDepth) {
	        if (matchDepth == 0 || metaPattern.lastIndexOf('*') != metaPattern.length - 1)
	          return metaMatch = true;
	      });

	    // exact global meta or meta with any content after the last wildcard skips extension
	    if (!metaMatch && loader.meta)
	      getMetaMatches(loader.meta, pkgName + '/' + subPath, function(metaPattern, matchMeta, matchDepth) {
	        if (matchDepth == 0 || metaPattern.lastIndexOf('*') != metaPattern.length - 1)
	          return metaMatch = true;
	      });

	    if (metaMatch)
	      return subPath;

	    // work out what the defaultExtension is and add if not there already
	    // NB reconsider if default should really be ".js"?
	    var defaultExtension = '.' + (pkg.defaultExtension || 'js');
	    if (subPath.substr(subPath.length - defaultExtension.length) != defaultExtension)
	      return subPath + defaultExtension;
	    else
	      return subPath;
	  }

	  function applyPackageConfigSync(loader, pkg, pkgName, subPath, skipExtensions) {
	    // main
	    if (!subPath) {
	      if (pkg.main)
	        subPath = pkg.main.substr(0, 2) == './' ? pkg.main.substr(2) : pkg.main;
	      // also no submap if name is package itself (import 'pkg' -> 'path/to/pkg.js')
	      else
	        // NB can add a default package main convention here when defaultJSExtensions is deprecated
	        // if it becomes internal to the package then it would no longer be an exit path
	        return pkgName + (loader.defaultJSExtensions ? '.js' : '');
	    }

	    // map config checking without then with extensions
	    if (pkg.map) {
	      var mapPath = './' + subPath;

	      var mapMatch = getMapMatch(pkg.map, mapPath);

	      // we then check map with the default extension adding
	      if (!mapMatch) {
	        mapPath = './' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions);
	        if (mapPath != './' + subPath)
	          mapMatch = getMapMatch(pkg.map, mapPath);
	      }
	      if (mapMatch)
	        return doMapSync(loader, pkg, pkgName, mapMatch, mapPath, skipExtensions);
	    }

	    // normal package resolution
	    return pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions);
	  }

	  function validateMapping(mapMatch, mapped, pkgName) {
	    // disallow internal to subpath maps
	    if (mapMatch == '.')
	      throw new Error('Package ' + pkgName + ' has a map entry for "." which is not permitted.');
	    // disallow internal ./x -> ./x/y recursive maps
	    else if (mapped.substr(0, mapMatch.length) == mapMatch && (mapMatch[mapMatch.length - 1] != '/' && mapped[mapMatch.length] == '/'))
	      throw new Error('Package ' + pkgName + ' has a recursive map for "' + mapMatch + '" which is not permitted.');
	  }

	  function doMapSync(loader, pkg, pkgName, mapMatch, path, skipExtensions) {
	    var mapped = pkg.map[mapMatch];

	    if (typeof mapped == 'object')
	      throw new Error('Synchronous conditional normalization not supported sync normalizing ' + mapMatch + ' in ' + pkgName);

	    validateMapping(mapMatch, mapped, pkgName);

	    // ignore conditionals in sync
	    if (typeof mapped != 'string')
	      mapped = mapMatch = path;

	    validateMapping(mapMatch, mapped, pkgName);

	    // package map to main / base-level
	    if (mapped == '.')
	      mapped = pkgName;

	    // internal package map
	    else if (mapped.substr(0, 2) == './')
	      return pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, mapped.substr(2) + path.substr(mapMatch.length), skipExtensions);
	    
	    // external map reference
	    return loader.normalizeSync(mapped + path.substr(mapMatch.length), pkgName + '/');
	  }

	  function applyPackageConfig(loader, pkg, pkgName, subPath, skipExtensions) {
	    // main
	    if (!subPath) {
	      if (pkg.main)
	        subPath = pkg.main.substr(0, 2) == './' ? pkg.main.substr(2) : pkg.main;
	      // also no submap if name is package itself (import 'pkg' -> 'path/to/pkg.js')
	      else
	        // NB can add a default package main convention here when defaultJSExtensions is deprecated
	        // if it becomes internal to the package then it would no longer be an exit path
	        return Promise.resolve(pkgName + (loader.defaultJSExtensions ? '.js' : ''));
	    }

	    // map config checking without then with extensions
	    var mapPath, mapMatch;

	    if (pkg.map) {
	      mapPath = './' + subPath;
	      mapMatch = getMapMatch(pkg.map, mapPath);

	      // we then check map with the default extension adding
	      if (!mapMatch) {
	        mapPath = './' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions);
	        if (mapPath != './' + subPath)
	          mapMatch = getMapMatch(pkg.map, mapPath);
	      }
	    }

	    return (mapMatch ? doMap(loader, pkg, pkgName, mapMatch, mapPath, skipExtensions) : Promise.resolve())
	    .then(function(mapped) {
	      if (mapped)
	        return Promise.resolve(mapped);

	      // normal package resolution / fallback resolution for no conditional match
	      return Promise.resolve(pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, subPath, skipExtensions));
	    });
	  }

	  function doStringMap(loader, pkg, pkgName, mapMatch, mapped, path, skipExtensions) {
	    // NB the interpolation cases should strictly skip subsequent interpolation

	    // package map to main / base-level
	    if (mapped == '.')
	      mapped = pkgName;
	    
	    // internal package map
	    else if (mapped.substr(0, 2) == './')
	      return Promise.resolve(pkgName + '/' + addDefaultExtension(loader, pkg, pkgName, mapped.substr(2) + path.substr(mapMatch.length), skipExtensions))
	      .then(function(name) {
	        return interpolateConditional.call(loader, name, pkgName + '/');
	      });
	    
	    // external map reference
	    return loader.normalize(mapped + path.substr(mapMatch.length), pkgName + '/');
	  }

	  function doMap(loader, pkg, pkgName, mapMatch, path, skipExtensions) {
	    var mapped = pkg.map[mapMatch];

	    if (typeof mapped == 'string') {
	      validateMapping(mapMatch, mapped, pkgName);
	      return doStringMap(loader, pkg, pkgName, mapMatch, mapped, path, skipExtensions);
	    }

	    // we use a special conditional syntax to allow the builder to handle conditional branch points further
	    if (loader.builder)
	      return Promise.resolve(pkgName + '/#:' + path);

	    // map object -> conditional map
	    return loader['import'](pkg.map['@env'] || '@system-env', pkgName)
	    .then(function(env) {
	      // first map condition to match is used
	      for (var e in mapped) {
	        var negate = e[0] == '~';

	        var value = readMemberExpression(negate ? e.substr(1) : e, env);

	        if (!negate && value || negate && !value)
	          return mapped[e];
	      }
	    })
	    .then(function(mapped) {
	      if (mapped) {
	        if (typeof mapped != 'string')
	          throw new Error('Unable to map a package conditional to a package conditional.');
	        validateMapping(mapMatch, mapped, pkgName);
	        return doStringMap(loader, pkg, pkgName, mapMatch, mapped, path, skipExtensions);
	      }

	      // no environment match -> fallback to original subPath by returning undefined
	    });
	  }

	  // normalizeSync = decanonicalize + package resolution
	  SystemJSLoader.prototype.normalizeSync = SystemJSLoader.prototype.decanonicalize = SystemJSLoader.prototype.normalize;

	  // decanonicalize must JUST handle package defaultExtension: false case when defaultJSExtensions is set
	  // to be deprecated!
	  hook('decanonicalize', function(decanonicalize) {
	    return function(name, parentName) {
	      if (this.builder)
	        return decanonicalize.call(this, name, parentName, true);

	      var decanonicalized = decanonicalize.call(this, name, parentName);

	      if (!this.defaultJSExtensions)
	        return decanonicalized;
	    
	      var pkgName = getPackage(this, decanonicalized);

	      var pkg = this.packages[pkgName];
	      var defaultExtension = pkg && pkg.defaultExtension;

	      if (defaultExtension == undefined && pkg && pkg.meta)
	        getMetaMatches(pkg.meta, decanonicalized.substr(pkgName), function(metaPattern, matchMeta, matchDepth) {
	          if (matchDepth == 0 || metaPattern.lastIndexOf('*') != metaPattern.length - 1) {
	            defaultExtension = false;
	            return true;
	          }
	        });
	      
	      if ((defaultExtension === false || defaultExtension && defaultExtension != '.js') && name.substr(name.length - 3, 3) != '.js' && decanonicalized.substr(decanonicalized.length - 3, 3) == '.js')
	        decanonicalized = decanonicalized.substr(0, decanonicalized.length - 3);

	      return decanonicalized;
	    };
	  });

	  hook('normalizeSync', function(normalizeSync) {
	    return function(name, parentName, isPlugin) {
	      warn.call(this, 'SystemJS.normalizeSync has been deprecated for SystemJS.decanonicalize.');

	      var loader = this;
	      isPlugin = isPlugin === true;

	      // apply contextual package map first
	      // (we assume the parent package config has already been loaded)
	      if (parentName)
	        var parentPackageName = getPackage(loader, parentName) ||
	            loader.defaultJSExtensions && parentName.substr(parentName.length - 3, 3) == '.js' &&
	            getPackage(loader, parentName.substr(0, parentName.length - 3));

	      var parentPackage = parentPackageName && loader.packages[parentPackageName];

	      // ignore . since internal maps handled by standard package resolution
	      if (parentPackage && name[0] != '.') {
	        var parentMap = parentPackage.map;
	        var parentMapMatch = parentMap && getMapMatch(parentMap, name);

	        if (parentMapMatch && typeof parentMap[parentMapMatch] == 'string')
	          return doMapSync(loader, parentPackage, parentPackageName, parentMapMatch, name, isPlugin);
	      }

	      var defaultJSExtension = loader.defaultJSExtensions && name.substr(name.length - 3, 3) != '.js';

	      // apply map, core, paths, contextual package map
	      var normalized = normalizeSync.call(loader, name, parentName);

	      // undo defaultJSExtension
	      if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) != '.js')
	        defaultJSExtension = false;
	      if (defaultJSExtension)
	        normalized = normalized.substr(0, normalized.length - 3);

	      var pkgConfigMatch = getPackageConfigMatch(loader, normalized);
	      var pkgName = pkgConfigMatch && pkgConfigMatch.packageName || getPackage(loader, normalized);

	      if (!pkgName)
	        return normalized + (defaultJSExtension ? '.js' : '');

	      var subPath = normalized.substr(pkgName.length + 1);

	      return applyPackageConfigSync(loader, loader.packages[pkgName] || {}, pkgName, subPath, isPlugin);
	    };
	  });

	  hook('normalize', function(normalize) {
	    return function(name, parentName, isPlugin) {
	      var loader = this;
	      isPlugin = isPlugin === true;

	      return Promise.resolve()
	      .then(function() {
	        // apply contextual package map first
	        // (we assume the parent package config has already been loaded)
	        if (parentName)
	          var parentPackageName = getPackage(loader, parentName) ||
	              loader.defaultJSExtensions && parentName.substr(parentName.length - 3, 3) == '.js' &&
	              getPackage(loader, parentName.substr(0, parentName.length - 3));

	        var parentPackage = parentPackageName && loader.packages[parentPackageName];

	        // ignore . since internal maps handled by standard package resolution
	        if (parentPackage && name.substr(0, 2) != './') {
	          var parentMap = parentPackage.map;
	          var parentMapMatch = parentMap && getMapMatch(parentMap, name);

	          if (parentMapMatch)
	            return doMap(loader, parentPackage, parentPackageName, parentMapMatch, name, isPlugin);
	        }

	        return Promise.resolve();
	      })
	      .then(function(mapped) {
	        if (mapped)
	          return mapped;

	        var defaultJSExtension = loader.defaultJSExtensions && name.substr(name.length - 3, 3) != '.js';

	        // apply map, core, paths, contextual package map
	        var normalized = normalize.call(loader, name, parentName);

	        // undo defaultJSExtension
	        if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) != '.js')
	          defaultJSExtension = false;
	        if (defaultJSExtension)
	          normalized = normalized.substr(0, normalized.length - 3);

	        var pkgConfigMatch = getPackageConfigMatch(loader, normalized);
	        var pkgName = pkgConfigMatch && pkgConfigMatch.packageName || getPackage(loader, normalized);

	        if (!pkgName)
	          return Promise.resolve(normalized + (defaultJSExtension ? '.js' : ''));

	        var pkg = loader.packages[pkgName];

	        // if package is already configured or not a dynamic config package, use existing package config
	        var isConfigured = pkg && (pkg.configured || !pkgConfigMatch);
	        return (isConfigured ? Promise.resolve(pkg) : loadPackageConfigPath(loader, pkgName, pkgConfigMatch.configPath))
	        .then(function(pkg) {
	          var subPath = normalized.substr(pkgName.length + 1);

	          return applyPackageConfig(loader, pkg, pkgName, subPath, isPlugin);
	        });
	      });
	    };
	  });

	  // check if the given normalized name matches a packageConfigPath
	  // if so, loads the config
	  var packageConfigPaths = {};

	  // data object for quick checks against package paths
	  function createPkgConfigPathObj(path) {
	    var lastWildcard = path.lastIndexOf('*');
	    var length = Math.max(lastWildcard + 1, path.lastIndexOf('/'));
	    return {
	      length: length,
	      regEx: new RegExp('^(' + path.substr(0, length).replace(/[.+?^${}()|[\]\\]/g, '\\$&').replace(/\*/g, '[^\\/]+') + ')(\\/|$)'),
	      wildcard: lastWildcard != -1
	    };
	  }

	  // most specific match wins
	  function getPackageConfigMatch(loader, normalized) {
	    var pkgName, exactMatch = false, configPath;
	    for (var i = 0; i < loader.packageConfigPaths.length; i++) {
	      var packageConfigPath = loader.packageConfigPaths[i];
	      var p = packageConfigPaths[packageConfigPath] || (packageConfigPaths[packageConfigPath] = createPkgConfigPathObj(packageConfigPath));
	      if (normalized.length < p.length)
	        continue;
	      var match = normalized.match(p.regEx);
	      if (match && (!pkgName || (!(exactMatch && p.wildcard) && pkgName.length < match[1].length))) {
	        pkgName = match[1];
	        exactMatch = !p.wildcard;
	        configPath = pkgName + packageConfigPath.substr(p.length);
	      }
	    }

	    if (!pkgName)
	      return;

	    return {
	      packageName: pkgName,
	      configPath: configPath
	    };
	  }

	  function loadPackageConfigPath(loader, pkgName, pkgConfigPath) {
	    var configLoader = loader.pluginLoader || loader;

	    // NB remove this when json is default
	    (configLoader.meta[pkgConfigPath] = configLoader.meta[pkgConfigPath] || {}).format = 'json';
	    configLoader.meta[pkgConfigPath].loader = null;

	    return configLoader.load(pkgConfigPath)
	    .then(function() {
	      var cfg = configLoader.get(pkgConfigPath)['default'];

	      // support "systemjs" prefixing
	      if (cfg.systemjs)
	        cfg = cfg.systemjs;

	      // modules backwards compatibility
	      if (cfg.modules) {
	        cfg.meta = cfg.modules;
	        warn.call(loader, 'Package config file ' + pkgConfigPath + ' is configured with "modules", which is deprecated as it has been renamed to "meta".');
	      }

	      // remove any non-system properties if generic config file (eg package.json)
	      for (var p in cfg) {
	        if (indexOf.call(packageProperties, p) == -1)
	          delete cfg[p];
	      }

	      // deeply-merge (to first level) config with any existing package config
	      var pkg = loader.packages[pkgName] = loader.packages[pkgName] || {};
	      extendMeta(pkg, cfg, true);

	      // support external depCache
	      if (cfg.depCache) {
	        for (var d in cfg.depCache) {
	          var dNormalized;

	          if (d.substr(0, 2) == './')
	            dNormalized = pkgName + '/' + d.substr(2);
	          else
	            dNormalized = coreResolve.call(loader, d);
	          loader.depCache[dNormalized] = (loader.depCache[dNormalized] || []).concat(cfg.depCache[d]);
	        }
	        delete cfg.depCache;
	      }

	      // main object becomes main map
	      if (typeof pkg.main == 'object') {
	        pkg.map = pkg.map || {};
	        pkg.map['./@main'] = pkg.main;
	        pkg.main['default'] = pkg.main['default'] || './';
	        pkg.main = '@main';
	      }

	      return pkg;
	    });
	  }

	  function getMetaMatches(pkgMeta, subPath, matchFn) {
	    // wildcard meta
	    var meta = {};
	    var wildcardIndex;
	    for (var module in pkgMeta) {
	      // allow meta to start with ./ for flexibility
	      var dotRel = module.substr(0, 2) == './' ? './' : '';
	      if (dotRel)
	        module = module.substr(2);

	      wildcardIndex = module.indexOf('*');
	      if (wildcardIndex === -1)
	        continue;

	      if (module.substr(0, wildcardIndex) == subPath.substr(0, wildcardIndex)
	          && module.substr(wildcardIndex + 1) == subPath.substr(subPath.length - module.length + wildcardIndex + 1)) {
	        // alow match function to return true for an exit path
	        if (matchFn(module, pkgMeta[dotRel + module], module.split('/').length))
	          return;
	      }
	    }
	    // exact meta
	    var exactMeta = pkgMeta[subPath] && pkgMeta.hasOwnProperty && pkgMeta.hasOwnProperty(subPath) ? pkgMeta[subPath] : pkgMeta['./' + subPath];
	    if (exactMeta)
	      matchFn(exactMeta, exactMeta, 0);
	  }

	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      return Promise.resolve(locate.call(this, load))
	      .then(function(address) {
	        var pkgName = getPackage(loader, load.name);
	        if (pkgName) {
	          var pkg = loader.packages[pkgName];
	          var subPath = load.name.substr(pkgName.length + 1);

	          // format
	          if (pkg.format)
	            load.metadata.format = load.metadata.format || pkg.format;

	          var meta = {};
	          if (pkg.meta) {
	            var bestDepth = 0;

	            // NB support a main shorthand in meta here?
	            getMetaMatches(pkg.meta, subPath, function(metaPattern, matchMeta, matchDepth) {
	              if (matchDepth > bestDepth)
	                bestDepth = matchDepth;
	              extendMeta(meta, matchMeta, matchDepth && bestDepth > matchDepth);
	            });

	            extendMeta(load.metadata, meta);
	          }
	        }

	        return address;
	      });
	    };
	  });

	})();
	/*
	 * Script tag fetch
	 *
	 * When load.metadata.scriptLoad is true, we load via script tag injection.
	 */
	(function() {

	  if (typeof document != 'undefined')
	    var head = document.getElementsByTagName('head')[0];

	  var curSystem;
	  var curRequire;

	  // if doing worker executing, this is set to the load record being executed
	  var workerLoad = null;
	  
	  // interactive mode handling method courtesy RequireJS
	  var ieEvents = head && (function() {
	    var s = document.createElement('script');
	    var isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]';
	    return s.attachEvent && !(s.attachEvent.toString && s.attachEvent.toString().indexOf('[native code') < 0) && !isOpera;
	  })();

	  // IE interactive-only part
	  // we store loading scripts array as { script: <script>, load: {...} }
	  var interactiveLoadingScripts = [];
	  var interactiveScript;
	  function getInteractiveScriptLoad() {
	    if (interactiveScript && interactiveScript.script.readyState === 'interactive')
	      return interactiveScript.load;

	    for (var i = 0; i < interactiveLoadingScripts.length; i++)
	      if (interactiveLoadingScripts[i].script.readyState == 'interactive') {
	        interactiveScript = interactiveLoadingScripts[i];
	        return interactiveScript.load;
	      }
	  }
	  
	  // System.register, System.registerDynamic, AMD define pipeline
	  // this is called by the above methods when they execute
	  // we then run the reduceRegister_ collection function either immediately
	  // if we are in IE and know the currently executing script (interactive)
	  // or later if we need to wait for the synchronous load callback to know the script
	  var loadingCnt = 0;
	  var registerQueue = [];
	  hook('pushRegister_', function(pushRegister) {
	    return function(register) {
	      // if using eval-execution then skip
	      if (pushRegister.call(this, register))
	        return false;

	      // if using worker execution, then we're done
	      if (workerLoad)
	        this.reduceRegister_(workerLoad, register);

	      // detect if we know the currently executing load (IE)
	      // if so, immediately call reduceRegister
	      else if (ieEvents)
	        this.reduceRegister_(getInteractiveScriptLoad(), register);

	      // otherwise, add to our execution queue
	      // to call reduceRegister on sync script load event
	      else if (loadingCnt)
	        registerQueue.push(register);

	      // if we're not currently loading anything though
	      // then do the reduction against a null load
	      // (out of band named define or named register)
	      // note even in non-script environments, this catch is used
	      else
	        this.reduceRegister_(null, register);

	      return true;
	    };
	  });

	  function webWorkerImport(loader, load) {
	    return new Promise(function(resolve, reject) {
	      if (load.metadata.integrity)
	        reject(new Error('Subresource integrity checking is not supported in web workers.'));

	      workerLoad = load;
	      try {
	        importScripts(load.address);
	      }
	      catch(e) {
	        workerLoad = null;
	        reject(e);
	      }
	      workerLoad = null;

	      // if nothing registered, then something went wrong
	      if (!load.metadata.entry)
	        reject(new Error(load.address + ' did not call System.register or AMD define'));

	      resolve('');
	    });
	  }

	  // override fetch to use script injection
	  hook('fetch', function(fetch) {
	    return function(load) {
	      var loader = this;

	      if (load.metadata.format == 'json' || !load.metadata.scriptLoad || (!isBrowser && !isWorker))
	        return fetch.call(this, load);

	      if (isWorker)
	        return webWorkerImport(loader, load);

	      return new Promise(function(resolve, reject) {
	        var s = document.createElement('script');
	        
	        s.async = true;

	        if (load.metadata.crossOrigin)
	          s.crossOrigin = load.metadata.crossOrigin;

	        if (load.metadata.integrity)
	          s.setAttribute('integrity', load.metadata.integrity);

	        if (ieEvents) {
	          s.attachEvent('onreadystatechange', complete);
	          interactiveLoadingScripts.push({
	            script: s,
	            load: load
	          });
	        }
	        else {
	          s.addEventListener('load', complete, false);
	          s.addEventListener('error', error, false);
	        }

	        loadingCnt++;

	        curSystem = __global.System;
	        curRequire = __global.require;

	        s.src = load.address;
	        head.appendChild(s);

	        function complete(evt) {
	          if (s.readyState && s.readyState != 'loaded' && s.readyState != 'complete')
	            return;

	          loadingCnt--;

	          // complete call is sync on execution finish
	          // (in ie already done reductions)
	          if (!load.metadata.entry && !registerQueue.length) {
	            loader.reduceRegister_(load);
	          }
	          else if (!ieEvents) {
	            for (var i = 0; i < registerQueue.length; i++)
	              loader.reduceRegister_(load, registerQueue[i]);
	            registerQueue = [];
	          }

	          cleanup();

	          // if nothing registered, then something went wrong
	          if (!load.metadata.entry && !load.metadata.bundle)
	            reject(new Error(load.name + ' did not call System.register or AMD define. If loading a global module configure the global name via the meta exports property for script injection support.'));

	          resolve('');
	        }

	        function error(evt) {
	          cleanup();
	          reject(new Error('Unable to load script ' + load.address));
	        }

	        function cleanup() {
	          __global.System = curSystem;
	          __global.require = curRequire;

	          if (s.detachEvent) {
	            s.detachEvent('onreadystatechange', complete);
	            for (var i = 0; i < interactiveLoadingScripts.length; i++)
	              if (interactiveLoadingScripts[i].script == s) {
	                if (interactiveScript && interactiveScript.script == s)
	                  interactiveScript = null;
	                interactiveLoadingScripts.splice(i, 1);
	              }
	          }
	          else {
	            s.removeEventListener('load', complete, false);
	            s.removeEventListener('error', error, false);
	          }

	          head.removeChild(s);
	        }
	      });
	    };
	  });
	})();
	/*
	 * Instantiate registry extension
	 *
	 * Supports Traceur System.register 'instantiate' output for loading ES6 as ES5.
	 *
	 * - Creates the loader.register function
	 * - Also supports metadata.format = 'register' in instantiate for anonymous register modules
	 * - Also supports metadata.deps, metadata.execute and metadata.executingRequire
	 *     for handling dynamic modules alongside register-transformed ES6 modules
	 *
	 *
	 * The code here replicates the ES6 linking groups algorithm to ensure that
	 * circular ES6 compiled into System.register can work alongside circular AMD 
	 * and CommonJS, identically to the actual ES6 loader.
	 *
	 */


	/*
	 * Registry side table entries in loader.defined
	 * Registry Entry Contains:
	 *    - name
	 *    - deps 
	 *    - declare for declarative modules
	 *    - execute for dynamic modules, different to declarative execute on module
	 *    - executingRequire indicates require drives execution for circularity of dynamic modules
	 *    - declarative optional boolean indicating which of the above
	 *
	 * Can preload modules directly on SystemJS.defined['my/module'] = { deps, execute, executingRequire }
	 *
	 * Then the entry gets populated with derived information during processing:
	 *    - normalizedDeps derived from deps, created in instantiate
	 *    - groupIndex used by group linking algorithm
	 *    - evaluated indicating whether evaluation has happend
	 *    - module the module record object, containing:
	 *      - exports actual module exports
	 *
	 *    For dynamic we track the es module with:
	 *    - esModule actual es module value
	 *    - esmExports whether to extend the esModule with named exports
	 *      
	 *    Then for declarative only we track dynamic bindings with the 'module' records:
	 *      - name
	 *      - exports
	 *      - setters declarative setter functions
	 *      - dependencies, module records of dependencies
	 *      - importers, module records of dependents
	 *
	 * After linked and evaluated, entries are removed, declarative module records remain in separate
	 * module binding table
	 *
	 */

	var leadingCommentAndMetaRegEx = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)*\s*/;
	function detectRegisterFormat(source) {
	  var leadingCommentAndMeta = source.match(leadingCommentAndMetaRegEx);
	  return leadingCommentAndMeta && source.substr(leadingCommentAndMeta[0].length, 15) == 'System.register';
	}

	function createEntry() {
	  return {
	    name: null,
	    deps: null,
	    originalIndices: null,
	    declare: null,
	    execute: null,
	    executingRequire: false,
	    declarative: false,
	    normalizedDeps: null,
	    groupIndex: null,
	    evaluated: false,
	    module: null,
	    esModule: null,
	    esmExports: false
	  };
	}

	(function() {

	  /*
	   * There are two variations of System.register:
	   * 1. System.register for ES6 conversion (2-3 params) - System.register([name, ]deps, declare)
	   *    see https://github.com/ModuleLoader/es6-module-loader/wiki/System.register-Explained
	   *
	   * 2. System.registerDynamic for dynamic modules (3-4 params) - System.registerDynamic([name, ]deps, executingRequire, execute)
	   * the true or false statement 
	   *
	   * this extension implements the linking algorithm for the two variations identical to the spec
	   * allowing compiled ES6 circular references to work alongside AMD and CJS circular references.
	   *
	   */
	  SystemJSLoader.prototype.register = function(name, deps, declare) {
	    if (typeof name != 'string') {
	      declare = deps;
	      deps = name;
	      name = null;
	    }

	    // dynamic backwards-compatibility
	    // can be deprecated eventually
	    if (typeof declare == 'boolean')
	      return this.registerDynamic.apply(this, arguments);

	    var entry = createEntry();
	    // ideally wouldn't apply map config to bundle names but 
	    // dependencies go through map regardless so we can't restrict
	    // could reconsider in shift to new spec
	    entry.name = name && (this.decanonicalize || this.normalize).call(this, name);
	    entry.declarative = true;
	    entry.deps = deps;
	    entry.declare = declare;

	    this.pushRegister_({
	      amd: false,
	      entry: entry
	    });
	  };
	  SystemJSLoader.prototype.registerDynamic = function(name, deps, declare, execute) {
	    if (typeof name != 'string') {
	      execute = declare;
	      declare = deps;
	      deps = name;
	      name = null;
	    }

	    // dynamic
	    var entry = createEntry();
	    entry.name = name && (this.decanonicalize || this.normalize).call(this, name);
	    entry.deps = deps;
	    entry.execute = execute;
	    entry.executingRequire = declare;

	    this.pushRegister_({
	      amd: false,
	      entry: entry
	    });
	  };
	  hook('reduceRegister_', function() {
	    return function(load, register) {
	      if (!register)
	        return;

	      var entry = register.entry;
	      var curMeta = load && load.metadata;

	      // named register
	      if (entry.name) {
	        if (!(entry.name in this.defined))
	          this.defined[entry.name] = entry;

	        if (curMeta)
	          curMeta.bundle = true;
	      }
	      // anonymous register
	      if (!entry.name || load && entry.name == load.name) {
	        if (!curMeta)
	          throw new TypeError('Invalid System.register call. Anonymous System.register calls can only be made by modules loaded by SystemJS.import and not via script tags.');
	        if (curMeta.entry) {
	          if (curMeta.format == 'register')
	            throw new Error('Multiple anonymous System.register calls in module ' + load.name + '. If loading a bundle, ensure all the System.register calls are named.');
	          else
	            throw new Error('Module ' + load.name + ' interpreted as ' + curMeta.format + ' module format, but called System.register.');
	        }
	        if (!curMeta.format)
	          curMeta.format = 'register';
	        curMeta.entry = entry;
	      }
	    };
	  });

	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);

	      this.defined = {};
	      this._loader.moduleRecords = {};
	    };
	  });

	  function buildGroups(entry, loader, groups) {
	    groups[entry.groupIndex] = groups[entry.groupIndex] || [];

	    if (indexOf.call(groups[entry.groupIndex], entry) != -1)
	      return;

	    groups[entry.groupIndex].push(entry);

	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      var depEntry = loader.defined[depName];
	      
	      // not in the registry means already linked / ES6
	      if (!depEntry || depEntry.evaluated)
	        continue;
	      
	      // now we know the entry is in our unlinked linkage group
	      var depGroupIndex = entry.groupIndex + (depEntry.declarative != entry.declarative);

	      // the group index of an entry is always the maximum
	      if (depEntry.groupIndex === null || depEntry.groupIndex < depGroupIndex) {
	        
	        // if already in a group, remove from the old group
	        if (depEntry.groupIndex !== null) {
	          groups[depEntry.groupIndex].splice(indexOf.call(groups[depEntry.groupIndex], depEntry), 1);

	          // if the old group is empty, then we have a mixed depndency cycle
	          if (groups[depEntry.groupIndex].length == 0)
	            throw new Error("Mixed dependency cycle detected");
	        }

	        depEntry.groupIndex = depGroupIndex;
	      }

	      buildGroups(depEntry, loader, groups);
	    }
	  }

	  function link(name, loader) {
	    var startEntry = loader.defined[name];

	    // skip if already linked
	    if (startEntry.module)
	      return;

	    startEntry.groupIndex = 0;

	    var groups = [];

	    buildGroups(startEntry, loader, groups);

	    var curGroupDeclarative = !!startEntry.declarative == groups.length % 2;
	    for (var i = groups.length - 1; i >= 0; i--) {
	      var group = groups[i];
	      for (var j = 0; j < group.length; j++) {
	        var entry = group[j];

	        // link each group
	        if (curGroupDeclarative)
	          linkDeclarativeModule(entry, loader);
	        else
	          linkDynamicModule(entry, loader);
	      }
	      curGroupDeclarative = !curGroupDeclarative; 
	    }
	  }

	  // module binding records
	  function ModuleRecord() {}
	  defineProperty(ModuleRecord, 'toString', {
	    value: function() {
	      return 'Module';
	    }
	  });

	  function getOrCreateModuleRecord(name, moduleRecords) {
	    return moduleRecords[name] || (moduleRecords[name] = {
	      name: name,
	      dependencies: [],
	      exports: new ModuleRecord(), // start from an empty module and extend
	      importers: []
	    });
	  }

	  function linkDeclarativeModule(entry, loader) {
	    // only link if already not already started linking (stops at circular)
	    if (entry.module)
	      return;

	    var moduleRecords = loader._loader.moduleRecords;
	    var module = entry.module = getOrCreateModuleRecord(entry.name, moduleRecords);
	    var exports = entry.module.exports;

	    var declaration = entry.declare.call(__global, function(name, value) {
	      module.locked = true;

	      if (typeof name == 'object') {
	        for (var p in name)
	          exports[p] = name[p];
	      }
	      else {
	        exports[name] = value;
	      }

	      for (var i = 0, l = module.importers.length; i < l; i++) {
	        var importerModule = module.importers[i];
	        if (!importerModule.locked) {
	          var importerIndex = indexOf.call(importerModule.dependencies, module);
	          importerModule.setters[importerIndex](exports);
	        }
	      }

	      module.locked = false;
	      return value;
	    }, { id: entry.name });
	    
	    module.setters = declaration.setters;
	    module.execute = declaration.execute;

	    if (!module.setters || !module.execute) {
	      throw new TypeError('Invalid System.register form for ' + entry.name);
	    }

	    // now link all the module dependencies
	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      var depEntry = loader.defined[depName];
	      var depModule = moduleRecords[depName];

	      // work out how to set depExports based on scenarios...
	      var depExports;

	      if (depModule) {
	        depExports = depModule.exports;
	      }
	      // dynamic, already linked in our registry
	      else if (depEntry && !depEntry.declarative) {
	        depExports = depEntry.esModule;
	      }
	      // in the loader registry
	      else if (!depEntry) {
	        depExports = loader.get(depName);
	      }
	      // we have an entry -> link
	      else {
	        linkDeclarativeModule(depEntry, loader);
	        depModule = depEntry.module;
	        depExports = depModule.exports;
	      }

	      // only declarative modules have dynamic bindings
	      if (depModule && depModule.importers) {
	        depModule.importers.push(module);
	        module.dependencies.push(depModule);
	      }
	      else {
	        module.dependencies.push(null);
	      }
	      
	      // run setters for all entries with the matching dependency name
	      var originalIndices = entry.originalIndices[i];
	      for (var j = 0, len = originalIndices.length; j < len; ++j) {
	        var index = originalIndices[j];
	        if (module.setters[index]) {
	          module.setters[index](depExports);
	        }
	      }
	    }
	  }

	  // An analog to loader.get covering execution of all three layers (real declarative, simulated declarative, simulated dynamic)
	  function getModule(name, loader) {
	    var exports;
	    var entry = loader.defined[name];

	    if (!entry) {
	      exports = loader.get(name);
	      if (!exports)
	        throw new Error('Unable to load dependency ' + name + '.');
	    }

	    else {
	      if (entry.declarative)
	        ensureEvaluated(name, [], loader);
	    
	      else if (!entry.evaluated)
	        linkDynamicModule(entry, loader);

	      exports = entry.module.exports;
	    }

	    if ((!entry || entry.declarative) && exports && exports.__useDefault)
	      return exports['default'];
	    
	    return exports;
	  }

	  function linkDynamicModule(entry, loader) {
	    if (entry.module)
	      return;

	    var exports = {};

	    var module = entry.module = { exports: exports, id: entry.name };

	    // AMD requires execute the tree first
	    if (!entry.executingRequire) {
	      for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	        var depName = entry.normalizedDeps[i];
	        // we know we only need to link dynamic due to linking algorithm
	        var depEntry = loader.defined[depName];
	        if (depEntry)
	          linkDynamicModule(depEntry, loader);
	      }
	    }

	    // now execute
	    entry.evaluated = true;
	    var output = entry.execute.call(__global, function(name) {
	      for (var i = 0, l = entry.deps.length; i < l; i++) {
	        if (entry.deps[i] != name)
	          continue;
	        return getModule(entry.normalizedDeps[i], loader);
	      }
	      // try and normalize the dependency to see if we have another form
	      var nameNormalized = loader.normalizeSync(name, entry.name);
	      if (indexOf.call(entry.normalizedDeps, nameNormalized) != -1)
	        return getModule(nameNormalized, loader);

	      throw new Error('Module ' + name + ' not declared as a dependency of ' + entry.name);
	    }, exports, module);
	    
	    if (output)
	      module.exports = output;

	    // create the esModule object, which allows ES6 named imports of dynamics
	    exports = module.exports;

	    // __esModule flag treats as already-named
	    if (exports && (exports.__esModule || exports instanceof Module))
	      entry.esModule = exports;
	    // set module as 'default' export, then fake named exports by iterating properties
	    else if (entry.esmExports && exports !== __global)
	      entry.esModule = getESModule(exports);
	    // just use the 'default' export
	    else
	      entry.esModule = { 'default': exports };
	  }

	  /*
	   * Given a module, and the list of modules for this current branch,
	   *  ensure that each of the dependencies of this module is evaluated
	   *  (unless one is a circular dependency already in the list of seen
	   *  modules, in which case we execute it)
	   *
	   * Then we evaluate the module itself depth-first left to right 
	   * execution to match ES6 modules
	   */
	  function ensureEvaluated(moduleName, seen, loader) {
	    var entry = loader.defined[moduleName];

	    // if already seen, that means it's an already-evaluated non circular dependency
	    if (!entry || entry.evaluated || !entry.declarative)
	      return;

	    // this only applies to declarative modules which late-execute

	    seen.push(moduleName);

	    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
	      var depName = entry.normalizedDeps[i];
	      if (indexOf.call(seen, depName) == -1) {
	        if (!loader.defined[depName])
	          loader.get(depName);
	        else
	          ensureEvaluated(depName, seen, loader);
	      }
	    }

	    if (entry.evaluated)
	      return;

	    entry.evaluated = true;
	    entry.module.execute.call(__global);
	  }

	  // override the delete method to also clear the register caches
	  hook('delete', function(del) {
	    return function(name) {
	      delete this._loader.moduleRecords[name];
	      delete this.defined[name];
	      return del.call(this, name);
	    };
	  });

	  hook('fetch', function(fetch) {
	    return function(load) {
	      if (this.defined[load.name]) {
	        load.metadata.format = 'defined';
	        return '';
	      }

	      load.metadata.deps = load.metadata.deps || [];
	      
	      return fetch.call(this, load);
	    };
	  });

	  hook('translate', function(translate) {
	    // we run the meta detection here (register is after meta)
	    return function(load) {
	      load.metadata.deps = load.metadata.deps || [];
	      return Promise.resolve(translate.call(this, load)).then(function(source) {
	        // run detection for register format
	        if (load.metadata.format == 'register' || !load.metadata.format && detectRegisterFormat(load.source))
	          load.metadata.format = 'register';
	        return source;
	      });
	    };
	  });

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      if (load.metadata.format == 'detect')
	        load.metadata.format = undefined;

	      // assumes previous instantiate is sync
	      // (core json support)
	      instantiate.call(this, load);

	      var loader = this;

	      var entry;

	      // first we check if this module has already been defined in the registry
	      if (loader.defined[load.name]) {
	        entry = loader.defined[load.name];
	        // don't support deps for ES modules
	        if (!entry.declarative)
	          entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // picked up already by an anonymous System.register script injection
	      // or via the dynamic formats
	      else if (load.metadata.entry) {
	        entry = load.metadata.entry;
	        entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // Contains System.register calls
	      // (dont run bundles in the builder)
	      else if (!(loader.builder && load.metadata.bundle) 
	          && (load.metadata.format == 'register' || load.metadata.format == 'esm' || load.metadata.format == 'es6')) {
	        
	        if (typeof __exec != 'undefined')
	          __exec.call(loader, load);

	        if (!load.metadata.entry && !load.metadata.bundle)
	          throw new Error(load.name + ' detected as ' + load.metadata.format + ' but didn\'t execute.');

	        entry = load.metadata.entry;

	        // support metadata deps for System.register
	        if (entry && load.metadata.deps)
	          entry.deps = entry.deps.concat(load.metadata.deps);
	      }

	      // named bundles are just an empty module
	      if (!entry) {
	        entry = createEntry();
	        entry.deps = load.metadata.deps;
	        entry.execute = function() {};
	      }

	      // place this module onto defined for circular references
	      loader.defined[load.name] = entry;
	      
	      var grouped = group(entry.deps);
	      
	      entry.deps = grouped.names;
	      entry.originalIndices = grouped.indices;
	      entry.name = load.name;
	      entry.esmExports = load.metadata.esmExports !== false;

	      // first, normalize all dependencies
	      var normalizePromises = [];
	      for (var i = 0, l = entry.deps.length; i < l; i++)
	        normalizePromises.push(Promise.resolve(loader.normalize(entry.deps[i], load.name)));

	      return Promise.all(normalizePromises).then(function(normalizedDeps) {

	        entry.normalizedDeps = normalizedDeps;

	        return {
	          deps: entry.deps,
	          execute: function() {
	            // recursively ensure that the module and all its 
	            // dependencies are linked (with dependency group handling)
	            link(load.name, loader);

	            // now handle dependency execution in correct order
	            ensureEvaluated(load.name, [], loader);

	            // remove from the registry
	            loader.defined[load.name] = undefined;

	            // return the defined module object
	            return loader.newModule(entry.declarative ? entry.module.exports : entry.esModule);
	          }
	        };
	      });
	    };
	  });
	})();
	/*
	 * Extension to detect ES6 and auto-load Traceur or Babel for processing
	 */
	(function() {
	  // good enough ES6 module detection regex - format detections not designed to be accurate, but to handle the 99% use case
	  var esmRegEx = /(^\s*|[}\);\n]\s*)(import\s*(['"]|(\*\s+as\s+)?[^"'\(\)\n;]+\s*from\s*['"]|\{)|export\s+\*\s+from\s+["']|export\s*(\{|default|function|class|var|const|let|async\s+function))/;

	  var traceurRuntimeRegEx = /\$traceurRuntime\s*\./;
	  var babelHelpersRegEx = /babelHelpers\s*\./;

	  hook('translate', function(translate) {
	    return function(load) {
	      var loader = this;
	      return translate.call(loader, load)
	      .then(function(source) {
	        // detect & transpile ES6
	        if (load.metadata.format == 'esm' || load.metadata.format == 'es6' || !load.metadata.format && source.match(esmRegEx)) {
	          if (load.metadata.format == 'es6')
	            warn.call(loader, 'Module ' + load.name + ' has metadata setting its format to "es6", which is deprecated.\nThis should be updated to "esm".');

	          load.metadata.format = 'esm';

	          if (loader.transpiler === false) {
	            // we accept translation to esm for builds though to enable eg rollup optimizations
	            if (loader.builder)
	              return source;
	            throw new TypeError('Unable to dynamically transpile ES module as SystemJS.transpiler set to false.');
	          }

	          // setting _loader.loadedTranspiler = false tells the next block to
	          // do checks for setting transpiler metadata
	          loader._loader.loadedTranspiler = loader._loader.loadedTranspiler || false;
	          if (loader.pluginLoader)
	            loader.pluginLoader._loader.loadedTranspiler = loader._loader.loadedTranspiler || false;

	          // do transpilation
	          return (loader._loader.transpilerPromise || (
	            loader._loader.transpilerPromise = Promise.resolve(
	              __global[loader.transpiler == 'typescript' ? 'ts' : loader.transpiler] || (loader.pluginLoader || loader)['import'](loader.transpiler)
	          ))).then(function(transpiler) {
	            loader._loader.loadedTranspilerRuntime = true;

	            // translate hooks means this is a transpiler plugin instead of a raw implementation
	            if (transpiler.translate) {
	              // if transpiler is the same as the plugin loader, then don't run twice
	              if (transpiler == load.metadata.loaderModule)
	                return load.source;

	              // convert the source map into an object for transpilation chaining
	              if (typeof load.metadata.sourceMap == 'string')
	                load.metadata.sourceMap = JSON.parse(load.metadata.sourceMap);

	              return Promise.resolve(transpiler.translate.call(loader, load))
	              .then(function(source) {
	                // sanitize sourceMap if an object not a JSON string
	                var sourceMap = load.metadata.sourceMap;
	                if (sourceMap && typeof sourceMap == 'object') {
	                  var originalName = load.name.split('!')[0];
	                  
	                  // force set the filename of the original file
	                  sourceMap.file = originalName + '!transpiled';

	                  // force set the sources list if only one source
	                  if (!sourceMap.sources || sourceMap.sources.length <= 1)
	                    sourceMap.sources = [originalName];
	                }

	                if (load.metadata.format == 'esm' && !loader.builder && detectRegisterFormat(source))
	                  load.metadata.format = 'register';
	                return source;
	              });
	            }

	            // legacy builder support
	            if (loader.builder)
	              load.metadata.originalSource = load.source;
	            
	            // defined in es6-module-loader/src/transpile.js
	            return transpile.call(loader, load)
	            .then(function(source) {
	              // clear sourceMap as transpiler embeds it
	              load.metadata.sourceMap = undefined;
	              return source;
	            });            
	          });
	        }

	        // skip transpiler and transpiler runtime loading when transpiler is disabled
	        if (loader.transpiler === false)
	          return source;

	        // load the transpiler correctly
	        if (loader._loader.loadedTranspiler === false && (loader.transpiler == 'traceur' || loader.transpiler == 'typescript' || loader.transpiler == 'babel')
	            && load.name == loader.normalizeSync(loader.transpiler)) {

	          // always load transpiler as a global
	          if (source.length > 100 && !load.metadata.format) {
	            load.metadata.format = 'global';

	            if (loader.transpiler === 'traceur')
	              load.metadata.exports = 'traceur';
	            if (loader.transpiler === 'typescript')
	              load.metadata.exports = 'ts';
	          }

	          loader._loader.loadedTranspiler = true;
	        }

	        // load the transpiler runtime correctly
	        if (loader._loader.loadedTranspilerRuntime === false) {
	          if (load.name == loader.normalizeSync('traceur-runtime')
	              || load.name == loader.normalizeSync('babel/external-helpers*')) {
	            if (source.length > 100)
	              load.metadata.format = load.metadata.format || 'global';

	            loader._loader.loadedTranspilerRuntime = true;
	          }
	        }

	        // detect transpiler runtime usage to load runtimes
	        if ((load.metadata.format == 'register' || load.metadata.bundle) && loader._loader.loadedTranspilerRuntime !== true) {
	          if (!__global.$traceurRuntime && load.source.match(traceurRuntimeRegEx)) {
	            loader._loader.loadedTranspilerRuntime = loader._loader.loadedTranspilerRuntime || false;
	            return loader['import']('traceur-runtime').then(function() {
	              return source;
	            });
	          }
	          if (!__global.babelHelpers && load.source.match(babelHelpersRegEx)) {
	            loader._loader.loadedTranspilerRuntime = loader._loader.loadedTranspilerRuntime || false;
	            return loader['import']('babel/external-helpers').then(function() {
	              return source;
	            });
	          }
	        }

	        return source;
	      });
	    };
	  });

	})();
	/*
	  SystemJS Global Format

	  Supports
	    metadata.deps
	    metadata.globals
	    metadata.exports

	  Without metadata.exports, detects writes to the global object.
	*/
	var __globalName = typeof self != 'undefined' ? 'self' : 'global';

	hook('fetch', function(fetch) {
	  return function(load) {
	    if (load.metadata.exports && !load.metadata.format)
	      load.metadata.format = 'global';
	    return fetch.call(this, load);
	  };
	});

	// ideally we could support script loading for globals, but the issue with that is that
	// we can't do it with AMD support side-by-side since AMD support means defining the
	// global define, and global support means not definining it, yet we don't have any hook
	// into the "pre-execution" phase of a script tag being loaded to handle both cases
	hook('instantiate', function(instantiate) {
	  return function(load) {
	    var loader = this;

	    if (!load.metadata.format)
	      load.metadata.format = 'global';

	    // global is a fallback module format
	    if (load.metadata.format == 'global' && !load.metadata.registered) {

	      var entry = createEntry();

	      load.metadata.entry = entry;

	      entry.deps = [];

	      for (var g in load.metadata.globals) {
	        var gl = load.metadata.globals[g];
	        if (gl)
	          entry.deps.push(gl);
	      }

	      entry.execute = function(require, exports, module) {

	        var globals;
	        if (load.metadata.globals) {
	          globals = {};
	          for (var g in load.metadata.globals)
	            if (load.metadata.globals[g])
	              globals[g] = require(load.metadata.globals[g]);
	        }
	        
	        var exportName = load.metadata.exports;

	        if (exportName)
	          load.source += '\n' + __globalName + '["' + exportName + '"] = ' + exportName + ';';

	        var retrieveGlobal = loader.get('@@global-helpers').prepareGlobal(module.id, exportName, globals);

	        __exec.call(loader, load);

	        return retrieveGlobal();
	      }
	    }
	    return instantiate.call(this, load);
	  };
	});


	function getGlobalValue(exports) {
	  if (typeof exports == 'string')
	    return readMemberExpression(exports, __global);

	  if (!(exports instanceof Array))
	    throw new Error('Global exports must be a string or array.');

	  var globalValue = {};
	  var first = true;
	  for (var i = 0; i < exports.length; i++) {
	    var val = readMemberExpression(exports[i], __global);
	    if (first) {
	      globalValue['default'] = val;
	      first = false;
	    }
	    globalValue[exports[i].split('.').pop()] = val;
	  }
	  return globalValue;
	}

	hook('reduceRegister_', function(reduceRegister) {
	  return function(load, register) {
	    if (register || !load.metadata.exports)
	      return reduceRegister.call(this, load, register);

	    load.metadata.format = 'global';
	    var entry = load.metadata.entry = createEntry();
	    entry.deps = load.metadata.deps;
	    var globalValue = getGlobalValue(load.metadata.exports);
	    entry.execute = function() {
	      return globalValue;
	    };
	  };
	});

	hookConstructor(function(constructor) {
	  return function() {
	    var loader = this;
	    constructor.call(loader);

	    var hasOwnProperty = Object.prototype.hasOwnProperty;

	    // bare minimum ignores
	    var ignoredGlobalProps = ['_g', 'sessionStorage', 'localStorage', 'clipboardData', 'frames', 'frameElement', 'external', 
	      'mozAnimationStartTime', 'webkitStorageInfo', 'webkitIndexedDB', 'mozInnerScreenY', 'mozInnerScreenX'];

	    var globalSnapshot;

	    function forEachGlobal(callback) {
	      if (Object.keys)
	        Object.keys(__global).forEach(callback);
	      else
	        for (var g in __global) {
	          if (!hasOwnProperty.call(__global, g))
	            continue;
	          callback(g);
	        }
	    }

	    function forEachGlobalValue(callback) {
	      forEachGlobal(function(globalName) {
	        if (indexOf.call(ignoredGlobalProps, globalName) != -1)
	          return;
	        try {
	          var value = __global[globalName];
	        }
	        catch (e) {
	          ignoredGlobalProps.push(globalName);
	        }
	        callback(globalName, value);
	      });
	    }

	    loader.set('@@global-helpers', loader.newModule({
	      prepareGlobal: function(moduleName, exports, globals) {
	        // disable module detection
	        var curDefine = __global.define;
	        
	        __global.define = undefined;

	        // set globals
	        var oldGlobals;
	        if (globals) {
	          oldGlobals = {};
	          for (var g in globals) {
	            oldGlobals[g] = __global[g];
	            __global[g] = globals[g];
	          }
	        }

	        // store a complete copy of the global object in order to detect changes
	        if (!exports) {
	          globalSnapshot = {};

	          forEachGlobalValue(function(name, value) {
	            globalSnapshot[name] = value;
	          });
	        }

	        // return function to retrieve global
	        return function() {
	          var globalValue;

	          if (exports) {
	            globalValue = getGlobalValue(exports);
	          }
	          else {
	            globalValue = {};
	            var singleGlobal;
	            var multipleExports;

	            forEachGlobalValue(function(name, value) {
	              if (globalSnapshot[name] === value)
	                return;
	              if (typeof value == 'undefined')
	                return;
	              globalValue[name] = value;

	              if (typeof singleGlobal != 'undefined') {
	                if (!multipleExports && singleGlobal !== value)
	                  multipleExports = true;
	              }
	              else {
	                singleGlobal = value;
	              }
	            });
	            globalValue = multipleExports ? globalValue : singleGlobal;
	          }

	          // revert globals
	          if (oldGlobals) {
	            for (var g in oldGlobals)
	              __global[g] = oldGlobals[g];
	          }
	          __global.define = curDefine;

	          return globalValue;
	        };
	      }
	    }));
	  };
	});
	/*
	  SystemJS CommonJS Format
	*/
	(function() {
	  // CJS Module Format
	  // require('...') || exports[''] = ... || exports.asd = ... || module.exports = ...
	  var cjsExportsRegEx = /(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])(exports\s*(\[['"]|\.)|module(\.exports|\['exports'\]|\["exports"\])\s*(\[['"]|[=,\.]))/;
	  // RegEx adjusted from https://github.com/jbrantly/yabble/blob/master/lib/yabble.js#L339
	  var cjsRequireRegEx = /(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF."'])require\s*\(\s*("[^"\\]*(?:\\.[^"\\]*)*"|'[^'\\]*(?:\\.[^'\\]*)*')\s*\)/g;
	  var commentRegEx = /(^|[^\\])(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg;

	  var stringRegEx = /("[^"\\\n\r]*(\\.[^"\\\n\r]*)*"|'[^'\\\n\r]*(\\.[^'\\\n\r]*)*')/g;

	  // used to support leading #!/usr/bin/env in scripts as supported in Node
	  var hashBangRegEx = /^\#\!.*/;

	  function getCJSDeps(source) {
	    cjsRequireRegEx.lastIndex = commentRegEx.lastIndex = stringRegEx.lastIndex = 0;

	    var deps = [];

	    var match;

	    // track string and comment locations for unminified source    
	    var stringLocations = [], commentLocations = [];

	    function inLocation(locations, match) {
	      for (var i = 0; i < locations.length; i++)
	        if (locations[i][0] < match.index && locations[i][1] > match.index)
	          return true;
	      return false;
	    }

	    if (source.length / source.split('\n').length < 200) {
	      while (match = stringRegEx.exec(source))
	        stringLocations.push([match.index, match.index + match[0].length]);
	      
	      while (match = commentRegEx.exec(source)) {
	        // only track comments not starting in strings
	        if (!inLocation(stringLocations, match))
	          commentLocations.push([match.index, match.index + match[0].length]);
	      }
	    }

	    while (match = cjsRequireRegEx.exec(source)) {
	      // ensure we're not within a string or comment location
	      if (!inLocation(stringLocations, match) && !inLocation(commentLocations, match)) {
	        var dep = match[1].substr(1, match[1].length - 2);
	        // skip cases like require('" + file + "')
	        if (dep.match(/"|'/))
	          continue;
	        // trailing slash requires are removed as they don't map mains in SystemJS
	        if (dep[dep.length - 1] == '/')
	          dep = dep.substr(0, dep.length - 1);
	        deps.push(dep);
	      }
	    }

	    return deps;
	  }

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      var loader = this;
	      if (!load.metadata.format) {
	        cjsExportsRegEx.lastIndex = 0;
	        cjsRequireRegEx.lastIndex = 0;
	        if (cjsRequireRegEx.exec(load.source) || cjsExportsRegEx.exec(load.source))
	          load.metadata.format = 'cjs';
	      }

	      if (load.metadata.format == 'cjs') {
	        var metaDeps = load.metadata.deps;
	        var deps = load.metadata.cjsRequireDetection === false ? [] : getCJSDeps(load.source);

	        for (var g in load.metadata.globals)
	          if (load.metadata.globals[g])
	            deps.push(load.metadata.globals[g]);

	        var entry = createEntry();

	        load.metadata.entry = entry;

	        entry.deps = deps;
	        entry.executingRequire = true;
	        entry.execute = function(_require, exports, module) {
	          function require(name) {
	            if (name[name.length - 1] == '/')
	              name = name.substr(0, name.length - 1);
	            return _require.apply(this, arguments);
	          }
	          require.resolve = function(name) {
	            return loader.get('@@cjs-helpers').requireResolve(name, module.id);
	          };

	          // ensure meta deps execute first
	          if (!load.metadata.cjsDeferDepsExecute)
	            for (var i = 0; i < metaDeps.length; i++)
	              require(metaDeps[i]);

	          var pathVars = loader.get('@@cjs-helpers').getPathVars(module.id);
	          var __cjsWrapper = {
	            exports: exports,
	            args: [require, exports, module, pathVars.filename, pathVars.dirname, __global, __global]
	          };

	          var cjsWrapper = "(function(require, exports, module, __filename, __dirname, global, GLOBAL";

	          // add metadata.globals to the wrapper arguments
	          if (load.metadata.globals)
	            for (var g in load.metadata.globals) {
	              __cjsWrapper.args.push(require(load.metadata.globals[g]));
	              cjsWrapper += ", " + g;
	            }

	          // disable AMD detection
	          var define = __global.define;
	          __global.define = undefined;
	          __global.__cjsWrapper = __cjsWrapper;

	          load.source = cjsWrapper + ") {" + load.source.replace(hashBangRegEx, '') + "\n}).apply(__cjsWrapper.exports, __cjsWrapper.args);";

	          __exec.call(loader, load);

	          __global.__cjsWrapper = undefined;
	          __global.define = define;
	        };
	      }

	      return instantiate.call(loader, load);
	    };
	  });
	})();
	hookConstructor(function(constructor) {
	  return function() {
	    var loader = this;
	    constructor.call(loader);

	    if (typeof window != 'undefined' && typeof document != 'undefined' && window.location)
	      var windowOrigin = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');

	    function stripOrigin(path) {
	      if (path.substr(0, 8) == 'file:///')
	        return path.substr(7 + !!isWindows);
	      
	      if (windowOrigin && path.substr(0, windowOrigin.length) == windowOrigin)
	        return path.substr(windowOrigin.length);

	      return path;
	    }

	    loader.set('@@cjs-helpers', loader.newModule({
	      requireResolve: function(request, parentId) {
	        return stripOrigin(loader.normalizeSync(request, parentId));
	      },
	      getPathVars: function(moduleId) {
	        // remove any plugin syntax
	        var pluginIndex = moduleId.lastIndexOf('!');
	        var filename;
	        if (pluginIndex != -1)
	          filename = moduleId.substr(0, pluginIndex);
	        else
	          filename = moduleId;

	        var dirname = filename.split('/');
	        dirname.pop();
	        dirname = dirname.join('/');

	        return {
	          filename: stripOrigin(filename),
	          dirname: stripOrigin(dirname)
	        };
	      }
	    }))
	  };
	});/*
	 * AMD Helper function module
	 * Separated into its own file as this is the part needed for full AMD support in SFX builds
	 * NB since implementations have now diverged this can be merged back with amd.js
	 */

	hook('fetch', function(fetch) {
	  return function(load) {
	    // script load implies define global leak
	    if (load.metadata.scriptLoad && isBrowser)
	      __global.define = this.amdDefine;
	    return fetch.call(this, load);
	  };
	});
	 
	hookConstructor(function(constructor) {
	  return function() {
	    var loader = this;
	    constructor.call(this);

	    var commentRegEx = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg;
	    var cjsRequirePre = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])";
	    var cjsRequirePost = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)";
	    var fnBracketRegEx = /\(([^\)]*)\)/;
	    var wsRegEx = /^\s+|\s+$/g;
	    
	    var requireRegExs = {};

	    function getCJSDeps(source, requireIndex) {

	      // remove comments
	      source = source.replace(commentRegEx, '');

	      // determine the require alias
	      var params = source.match(fnBracketRegEx);
	      var requireAlias = (params[1].split(',')[requireIndex] || 'require').replace(wsRegEx, '');

	      // find or generate the regex for this requireAlias
	      var requireRegEx = requireRegExs[requireAlias] || (requireRegExs[requireAlias] = new RegExp(cjsRequirePre + requireAlias + cjsRequirePost, 'g'));

	      requireRegEx.lastIndex = 0;

	      var deps = [];

	      var match;
	      while (match = requireRegEx.exec(source))
	        deps.push(match[2] || match[3]);

	      return deps;
	    }

	    /*
	      AMD-compatible require
	      To copy RequireJS, set window.require = window.requirejs = loader.amdRequire
	    */
	    function require(names, callback, errback, referer) {
	      // in amd, first arg can be a config object... we just ignore
	      if (typeof names == 'object' && !(names instanceof Array))
	        return require.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));

	      // amd require
	      if (typeof names == 'string' && typeof callback == 'function')
	        names = [names];
	      if (names instanceof Array) {
	        var dynamicRequires = [];
	        for (var i = 0; i < names.length; i++)
	          dynamicRequires.push(loader['import'](names[i], referer));
	        Promise.all(dynamicRequires).then(function(modules) {
	          if (callback)
	            callback.apply(null, modules);
	        }, errback);
	      }

	      // commonjs require
	      else if (typeof names == 'string') {
	        var defaultJSExtension = loader.defaultJSExtensions && names.substr(names.length - 3, 3) != '.js';
	        var normalized = loader.decanonicalize(names, referer);
	        if (defaultJSExtension && normalized.substr(normalized.length - 3, 3) == '.js')
	          normalized = normalized.substr(0, normalized.length - 3);
	        var module = loader.get(normalized);
	        if (!module)
	          throw new Error('Module not already loaded loading "' + names + '" as ' + normalized + (referer ? ' from "' + referer + '".' : '.'));
	        return module.__useDefault ? module['default'] : module;
	      }

	      else
	        throw new TypeError('Invalid require');
	    }

	    function define(name, deps, factory) {
	      if (typeof name != 'string') {
	        factory = deps;
	        deps = name;
	        name = null;
	      }
	      if (!(deps instanceof Array)) {
	        factory = deps;
	        deps = ['require', 'exports', 'module'].splice(0, factory.length);
	      }

	      if (typeof factory != 'function')
	        factory = (function(factory) {
	          return function() { return factory; }
	        })(factory);

	      // in IE8, a trailing comma becomes a trailing undefined entry
	      if (deps[deps.length - 1] === undefined)
	        deps.pop();

	      // remove system dependencies
	      var requireIndex, exportsIndex, moduleIndex;
	      
	      if ((requireIndex = indexOf.call(deps, 'require')) != -1) {
	        
	        deps.splice(requireIndex, 1);

	        // only trace cjs requires for non-named
	        // named defines assume the trace has already been done
	        if (!name)
	          deps = deps.concat(getCJSDeps(factory.toString(), requireIndex));
	      }

	      if ((exportsIndex = indexOf.call(deps, 'exports')) != -1)
	        deps.splice(exportsIndex, 1);
	      
	      if ((moduleIndex = indexOf.call(deps, 'module')) != -1)
	        deps.splice(moduleIndex, 1);

	      function execute(req, exports, module) {
	        var depValues = [];
	        for (var i = 0; i < deps.length; i++)
	          depValues.push(req(deps[i]));

	        module.uri = module.id;

	        module.config = function() {};

	        // add back in system dependencies
	        if (moduleIndex != -1)
	          depValues.splice(moduleIndex, 0, module);
	        
	        if (exportsIndex != -1)
	          depValues.splice(exportsIndex, 0, exports);
	        
	        if (requireIndex != -1) {
	          function contextualRequire(names, callback, errback) {
	            if (typeof names == 'string' && typeof callback != 'function')
	              return req(names);
	            return require.call(loader, names, callback, errback, module.id);
	          }
	          contextualRequire.toUrl = function(name) {
	            // normalize without defaultJSExtensions
	            var defaultJSExtension = loader.defaultJSExtensions && name.substr(name.length - 3, 3) != '.js';
	            var url = loader.decanonicalize(name, module.id);
	            if (defaultJSExtension && url.substr(url.length - 3, 3) == '.js')
	              url = url.substr(0, url.length - 3);
	            return url;
	          };
	          depValues.splice(requireIndex, 0, contextualRequire);
	        }

	        // set global require to AMD require
	        var curRequire = __global.require;
	        __global.require = require;

	        var output = factory.apply(exportsIndex == -1 ? __global : exports, depValues);

	        __global.require = curRequire;

	        if (typeof output == 'undefined' && module)
	          output = module.exports;

	        if (typeof output != 'undefined')
	          return output;
	      }

	      var entry = createEntry();
	      entry.name = name && (loader.decanonicalize || loader.normalize).call(loader, name);
	      entry.deps = deps;
	      entry.execute = execute;

	      loader.pushRegister_({
	        amd: true,
	        entry: entry
	      });
	    }
	    define.amd = {};

	    // reduction function to attach defines to a load record
	    hook('reduceRegister_', function(reduceRegister) {
	      return function(load, register) {
	        // only handle AMD registers here
	        if (!register || !register.amd)
	          return reduceRegister.call(this, load, register);

	        var curMeta = load && load.metadata;
	        var entry = register.entry;

	        if (curMeta) {
	          if (!curMeta.format || curMeta.format == 'detect')
	            curMeta.format = 'amd';
	          else if (!entry.name && curMeta.format != 'amd')
	            throw new Error('AMD define called while executing ' + curMeta.format + ' module ' + load.name);
	        }

	        // anonymous define
	        if (!entry.name) {
	          if (!curMeta)
	            throw new TypeError('Unexpected anonymous AMD define.');

	          if (curMeta.entry && !curMeta.entry.name)
	            throw new Error('Multiple anonymous defines in module ' + load.name);
	          
	          curMeta.entry = entry;
	        }
	        // named define
	        else {
	          // if we don't have any other defines, 
	          // then let this be an anonymous define
	          // this is just to support single modules of the form:
	          // define('jquery')
	          // still loading anonymously
	          // because it is done widely enough to be useful
	          // as soon as there is more than one define, this gets removed though
	          if (curMeta) {
	            if (!curMeta.entry && !curMeta.bundle)
	              curMeta.entry = entry;
	            else if (curMeta.entry && curMeta.entry.name)
	              curMeta.entry = undefined;

	            // note this is now a bundle
	            curMeta.bundle = true;
	          }

	          // define the module through the register registry
	          if (!(entry.name in this.defined))
	            this.defined[entry.name] = entry;
	        }
	      };
	    });

	    loader.amdDefine = define;
	    loader.amdRequire = require;
	  };
	});/*
	  SystemJS AMD Format
	*/
	(function() {
	  // AMD Module Format Detection RegEx
	  // define([.., .., ..], ...)
	  // define(varName); || define(function(require, exports) {}); || define({})
	  var amdRegEx = /(?:^\uFEFF?|[^$_a-zA-Z\xA0-\uFFFF.])define\s*\(\s*("[^"]+"\s*,\s*|'[^']+'\s*,\s*)?\s*(\[(\s*(("[^"]+"|'[^']+')\s*,|\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*(\s*("[^"]+"|'[^']+')\s*,?)?(\s*(\/\/.*\r?\n|\/\*(.|\s)*?\*\/))*\s*\]|function\s*|{|[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*\))/;

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      var loader = this;
	      
	      if (load.metadata.format == 'amd' || !load.metadata.format && load.source.match(amdRegEx)) {
	        load.metadata.format = 'amd';
	        
	        if (!loader.builder && loader.execute !== false) {
	          var curDefine = __global.define;
	          __global.define = this.amdDefine;

	          try {
	            __exec.call(loader, load);
	          }
	          finally {
	            __global.define = curDefine;
	          }

	          if (!load.metadata.entry && !load.metadata.bundle)
	            throw new TypeError('AMD module ' + load.name + ' did not define');
	        }
	        else {
	          load.metadata.execute = function() {
	            return load.metadata.builderExecute.apply(this, arguments);
	          };
	        }
	      }

	      return instantiate.call(loader, load);
	    };
	  });

	})();
	/*
	  SystemJS Loader Plugin Support

	  Supports plugin loader syntax with "!", or via metadata.loader

	  The plugin name is loaded as a module itself, and can override standard loader hooks
	  for the plugin resource. See the plugin section of the systemjs readme.
	*/

	(function() {
	  function getParentName(loader, parentName) {
	    // if parent is a plugin, normalize against the parent plugin argument only
	    if (parentName) {
	      var parentPluginIndex;
	      if (loader.pluginFirst) {
	        if ((parentPluginIndex = parentName.lastIndexOf('!')) != -1)
	          return parentName.substr(parentPluginIndex + 1);
	      }
	      else {
	        if ((parentPluginIndex = parentName.indexOf('!')) != -1)
	          return parentName.substr(0, parentPluginIndex);
	      }

	      return parentName;
	    }
	  }

	  function parsePlugin(loader, name) {
	    var argumentName;
	    var pluginName;

	    var pluginIndex = name.lastIndexOf('!');

	    if (pluginIndex == -1)
	      return;

	    if (loader.pluginFirst) {
	      argumentName = name.substr(pluginIndex + 1);
	      pluginName = name.substr(0, pluginIndex);
	    }
	    else {
	      argumentName = name.substr(0, pluginIndex);
	      pluginName = name.substr(pluginIndex + 1) || argumentName.substr(argumentName.lastIndexOf('.') + 1);
	    }

	    return {
	      argument: argumentName,
	      plugin: pluginName
	    };
	  }

	  // put name back together after parts have been normalized
	  function combinePluginParts(loader, argumentName, pluginName, defaultExtension) {
	    if (defaultExtension && argumentName.substr(argumentName.length - 3, 3) == '.js')
	      argumentName = argumentName.substr(0, argumentName.length - 3);

	    if (loader.pluginFirst) {
	      return pluginName + '!' + argumentName;
	    }
	    else {
	      return argumentName + '!' + pluginName;
	    }
	  }

	  // note if normalize will add a default js extension
	  // if so, remove for backwards compat
	  // this is strange and sucks, but will be deprecated
	  function checkDefaultExtension(loader, arg) {
	    return loader.defaultJSExtensions && arg.substr(arg.length - 3, 3) != '.js'; 
	  }

	  function createNormalizeSync(normalizeSync) {
	    return function(name, parentName, isPlugin) {
	      var loader = this;
	      
	      parentName = getParentName(this, parentName);
	      var parsed = parsePlugin(loader, name);

	      if (!parsed)
	        return normalizeSync.call(this, name, parentName, isPlugin);

	      // if this is a plugin, normalize the plugin name and the argument
	      var argumentName = loader.normalizeSync(parsed.argument, parentName, true);
	      var pluginName = loader.normalizeSync(parsed.plugin, parentName, true);
	      return combinePluginParts(loader, argumentName, pluginName, checkDefaultExtension(loader, parsed.argument));
	    };
	  }
	  
	  hook('decanonicalize', createNormalizeSync);
	  hook('normalizeSync', createNormalizeSync);

	  hook('normalize', function(normalize) {
	    return function(name, parentName, isPlugin) {
	      var loader = this;

	      parentName = getParentName(this, parentName);

	      var parsed = parsePlugin(loader, name);

	      if (!parsed)
	        return normalize.call(loader, name, parentName, isPlugin);

	      return Promise.all([
	        loader.normalize(parsed.argument, parentName, true),
	        loader.normalize(parsed.plugin, parentName)
	      ])
	      .then(function(normalized) {
	        return combinePluginParts(loader, normalized[0], normalized[1], checkDefaultExtension(loader, parsed.argument));
	      });
	    }
	  });

	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;

	      var name = load.name;

	      // plugin syntax
	      var pluginSyntaxIndex;
	      if (loader.pluginFirst) {
	        if ((pluginSyntaxIndex = name.indexOf('!')) != -1) {
	          load.metadata.loader = name.substr(0, pluginSyntaxIndex);
	          load.name = name.substr(pluginSyntaxIndex + 1);
	        }
	      }
	      else {
	        if ((pluginSyntaxIndex = name.lastIndexOf('!')) != -1) {
	          load.metadata.loader = name.substr(pluginSyntaxIndex + 1);
	          load.name = name.substr(0, pluginSyntaxIndex);
	        }
	      }

	      return locate.call(loader, load)
	      .then(function(address) {
	        if (pluginSyntaxIndex != -1 || !load.metadata.loader)
	          return address;

	        // normalize plugin relative to parent in locate here when
	        // using plugin via loader metadata
	        return loader.normalize(load.metadata.loader, load.name)
	        .then(function(loaderNormalized) {
	          load.metadata.loader = loaderNormalized;
	          return address;
	        });
	      })
	      .then(function(address) {
	        var plugin = load.metadata.loader;

	        if (!plugin)
	          return address;

	        // don't allow a plugin to load itself
	        if (load.name == plugin)
	          throw new Error('Plugin ' + plugin + ' cannot load itself, make sure it is excluded from any wildcard meta configuration via a custom loader: false rule.');

	        // only fetch the plugin itself if this name isn't defined
	        if (loader.defined && loader.defined[name])
	          return address;

	        var pluginLoader = loader.pluginLoader || loader;

	        // load the plugin module and run standard locate
	        return pluginLoader['import'](plugin)
	        .then(function(loaderModule) {
	          // store the plugin module itself on the metadata
	          load.metadata.loaderModule = loaderModule;

	          load.address = address;
	          if (loaderModule.locate)
	            return loaderModule.locate.call(loader, load);

	          return address;
	        });
	      });
	    };
	  });

	  hook('fetch', function(fetch) {
	    return function(load) {
	      var loader = this;
	      if (load.metadata.loaderModule && load.metadata.loaderModule.fetch && load.metadata.format != 'defined') {
	        load.metadata.scriptLoad = false;
	        return load.metadata.loaderModule.fetch.call(loader, load, function(load) {
	          return fetch.call(loader, load);
	        });
	      }
	      else {
	        return fetch.call(loader, load);
	      }
	    };
	  });

	  hook('translate', function(translate) {
	    return function(load) {
	      var loader = this;
	      if (load.metadata.loaderModule && load.metadata.loaderModule.translate && load.metadata.format != 'defined') {
	        return Promise.resolve(load.metadata.loaderModule.translate.call(loader, load)).then(function(result) {
	          var sourceMap = load.metadata.sourceMap;

	          // sanitize sourceMap if an object not a JSON string
	          if (sourceMap) {
	            if (typeof sourceMap != 'object')
	              throw new Error('load.metadata.sourceMap must be set to an object.');

	            var originalName = load.name.split('!')[0];
	            
	            // force set the filename of the original file
	            sourceMap.file = originalName + '!transpiled';

	            // force set the sources list if only one source
	            if (!sourceMap.sources || sourceMap.sources.length <= 1)
	              sourceMap.sources = [originalName];
	          }

	          // if running on file:/// URLs, sourcesContent is necessary
	          // load.metadata.sourceMap.sourcesContent = [load.source];

	          if (typeof result == 'string')
	            load.source = result;
	          else
	            warn.call(this, 'Plugin ' + load.metadata.loader + ' should return the source in translate, instead of setting load.source directly. This support will be deprecated.');

	          return translate.call(loader, load);
	        });
	      }
	      else {
	        return translate.call(loader, load);
	      }
	    };
	  });

	  hook('instantiate', function(instantiate) {
	    return function(load) {
	      var loader = this;
	      var calledInstantiate = false;

	      if (load.metadata.loaderModule && load.metadata.loaderModule.instantiate && !loader.builder && load.metadata.format != 'defined')
	        return Promise.resolve(load.metadata.loaderModule.instantiate.call(loader, load, function(load) {
	          if (calledInstantiate)
	            throw new Error('Instantiate must only be called once.');
	          calledInstantiate = true;
	          return instantiate.call(loader, load);
	        })).then(function(result) {
	          if (calledInstantiate)
	            return result;

	          load.metadata.entry = createEntry();
	          load.metadata.entry.execute = function() {
	            return result;
	          }
	          load.metadata.entry.deps = load.metadata.deps;
	          load.metadata.format = 'defined';
	          return instantiate.call(loader, load);
	        });
	      else
	        return instantiate.call(loader, load);
	    };
	  });

	})();/*
	 * Conditions Extension
	 *
	 *   Allows a condition module to alter the resolution of an import via syntax:
	 *
	 *     import $ from 'jquery/#{browser}';
	 *
	 *   Will first load the module 'browser' via `SystemJS.import('browser')` and 
	 *   take the default export of that module.
	 *   If the default export is not a string, an error is thrown.
	 * 
	 *   We then substitute the string into the require to get the conditional resolution
	 *   enabling environment-specific variations like:
	 * 
	 *     import $ from 'jquery/ie'
	 *     import $ from 'jquery/firefox'
	 *     import $ from 'jquery/chrome'
	 *     import $ from 'jquery/safari'
	 *
	 *   It can be useful for a condition module to define multiple conditions.
	 *   This can be done via the `|` modifier to specify an export member expression:
	 *
	 *     import 'jquery/#{./browser.js|grade.version}'
	 *
	 *   Where the `grade` export `version` member in the `browser.js` module  is substituted.
	 *
	 *
	 * Boolean Conditionals
	 *
	 *   For polyfill modules, that are used as imports but have no module value,
	 *   a binary conditional allows a module not to be loaded at all if not needed:
	 *
	 *     import 'es5-shim#?./conditions.js|needs-es5shim'
	 *
	 *   These conditions can also be negated via:
	 *     
	 *     import 'es5-shim#?~./conditions.js|es6'
	 *
	 */

	  function parseCondition(condition) {
	    var conditionExport, conditionModule, negation;

	    var negation = condition[0] == '~';
	    var conditionExportIndex = condition.lastIndexOf('|');
	    if (conditionExportIndex != -1) {
	      conditionExport = condition.substr(conditionExportIndex + 1);
	      conditionModule = condition.substr(negation, conditionExportIndex - negation) || '@system-env';
	    }
	    else {
	      conditionExport = null;
	      conditionModule = condition.substr(negation);
	    }

	    return {
	      module: conditionModule,
	      prop: conditionExport,
	      negate: negation
	    };
	  }

	  function serializeCondition(conditionObj) {
	    return (conditionObj.negate ? '~' : '') + conditionObj.module + (conditionObj.prop ? '|' + conditionObj.prop : '');
	  }

	  function resolveCondition(conditionObj, parentName, bool) {
	    return this['import'](conditionObj.module, parentName)
	    .then(function(m) {
	      if (conditionObj.prop)
	        m = readMemberExpression(conditionObj.prop, m);
	      else if (typeof m == 'object' && m + '' == 'Module')
	        m = m['default'];

	      if (bool && typeof m != 'boolean')
	        throw new TypeError('Condition ' + serializeCondition(conditionObj) + ' did not resolve to a boolean.');

	      return conditionObj.negate ? !m : m;
	    });
	  }

	  var interpolationRegEx = /#\{[^\}]+\}/;
	  function interpolateConditional(name, parentName) {
	    // first we normalize the conditional
	    var conditionalMatch = name.match(interpolationRegEx);

	    if (!conditionalMatch)
	      return Promise.resolve(name);

	    var conditionObj = parseCondition(conditionalMatch[0].substr(2, conditionalMatch[0].length - 3));

	    // in builds, return normalized conditional
	    if (this.builder)
	      return this['normalize'](conditionObj.module, parentName)
	      .then(function(conditionModule) {
	        conditionObj.module = conditionModule;
	        return name.replace(interpolationRegEx, '#{' + serializeCondition(conditionObj) + '}');
	      });

	    return resolveCondition.call(this, conditionObj, parentName, false)
	    .then(function(conditionValue) {
	      if (typeof conditionValue !== 'string')
	        throw new TypeError('The condition value for ' + name + ' doesn\'t resolve to a string.');

	      if (conditionValue.indexOf('/') != -1)
	        throw new TypeError('Unabled to interpolate conditional ' + name + (parentName ? ' in ' + parentName : '') + '\n\tThe condition value ' + conditionValue + ' cannot contain a "/" separator.');

	      return name.replace(interpolationRegEx, conditionValue);
	    });
	  }

	  function booleanConditional(name, parentName) {
	    // first we normalize the conditional
	    var booleanIndex = name.lastIndexOf('#?');

	    if (booleanIndex == -1)
	      return Promise.resolve(name);

	    var conditionObj = parseCondition(name.substr(booleanIndex + 2));

	    // in builds, return normalized conditional
	    if (this.builder)
	      return this['normalize'](conditionObj.module, parentName)
	      .then(function(conditionModule) {
	        conditionObj.module = conditionModule;
	        return name.substr(0, booleanIndex) + '#?' + serializeCondition(conditionObj);
	      });

	    return resolveCondition.call(this, conditionObj, parentName, true)
	    .then(function(conditionValue) {
	      return conditionValue ? name.substr(0, booleanIndex) : '@empty';
	    });
	  }

	  // normalizeSync does not parse conditionals at all although it could
	  hook('normalize', function(normalize) {
	    return function(name, parentName, parentAddress) {
	      var loader = this;
	      return booleanConditional.call(loader, name, parentName)
	      .then(function(name) {
	        return normalize.call(loader, name, parentName, parentAddress);
	      })
	      .then(function(normalized) {
	        return interpolateConditional.call(loader, normalized, parentName);
	      });
	    };
	  });
	/*
	 * Alias Extension
	 *
	 * Allows a module to be a plain copy of another module by module name
	 *
	 * SystemJS.meta['mybootstrapalias'] = { alias: 'bootstrap' };
	 *
	 */
	(function() {
	  // aliases
	  hook('fetch', function(fetch) {
	    return function(load) {
	      var alias = load.metadata.alias;
	      var aliasDeps = load.metadata.deps || [];
	      if (alias) {
	        load.metadata.format = 'defined';
	        var entry = createEntry();
	        this.defined[load.name] = entry;
	        entry.declarative = true;
	        entry.deps = aliasDeps.concat([alias]);
	        entry.declare = function(_export) {
	          return {
	            setters: [function(module) {
	              for (var p in module)
	                _export(p, module[p]);
	              if (module.__useDefault)
	                entry.module.exports.__useDefault = true;
	            }],
	            execute: function() {}
	          };
	        };
	        return '';
	      }

	      return fetch.call(this, load);
	    };
	  });
	})();/*
	 * Meta Extension
	 *
	 * Sets default metadata on a load record (load.metadata) from
	 * loader.metadata via SystemJS.meta function.
	 *
	 *
	 * Also provides an inline meta syntax for module meta in source.
	 *
	 * Eg:
	 *
	 * loader.meta({
	 *   'my/module': { deps: ['jquery'] }
	 *   'my/*': { format: 'amd' }
	 * });
	 *
	 * Which in turn populates loader.metadata.
	 *
	 * load.metadata.deps and load.metadata.format will then be set
	 * for 'my/module'
	 *
	 * The same meta could be set with a my/module.js file containing:
	 *
	 * my/module.js
	 *   "format amd";
	 *   "deps[] jquery";
	 *   "globals.some value"
	 *   console.log('this is my/module');
	 *
	 * Configuration meta always takes preference to inline meta.
	 *
	 * Multiple matches in wildcards are supported and ammend the meta.
	 *
	 *
	 * The benefits of the function form is that paths are URL-normalized
	 * supporting say
	 *
	 * loader.meta({ './app': { format: 'cjs' } });
	 *
	 * Instead of needing to set against the absolute URL (https://site.com/app.js)
	 *
	 */

	(function() {

	  hookConstructor(function(constructor) {
	    return function() {
	      this.meta = {};
	      constructor.call(this);
	    };
	  });

	  hook('locate', function(locate) {
	    return function(load) {
	      var meta = this.meta;
	      var name = load.name;

	      // NB for perf, maybe introduce a fast-path wildcard lookup cache here
	      // which is checked first

	      // apply wildcard metas
	      var bestDepth = 0;
	      var wildcardIndex;
	      for (var module in meta) {
	        wildcardIndex = module.indexOf('*');
	        if (wildcardIndex === -1)
	          continue;
	        if (module.substr(0, wildcardIndex) === name.substr(0, wildcardIndex)
	            && module.substr(wildcardIndex + 1) === name.substr(name.length - module.length + wildcardIndex + 1)) {
	          var depth = module.split('/').length;
	          if (depth > bestDepth)
	            bestDepth = depth;
	          extendMeta(load.metadata, meta[module], bestDepth != depth);
	        }
	      }

	      // apply exact meta
	      if (meta[name])
	        extendMeta(load.metadata, meta[name]);

	      return locate.call(this, load);
	    };
	  });

	  // detect any meta header syntax
	  // only set if not already set
	  var metaRegEx = /^(\s*\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\s*\/\/[^\n]*|\s*"[^"]+"\s*;?|\s*'[^']+'\s*;?)+/;
	  var metaPartRegEx = /\/\*[^\*]*(\*(?!\/)[^\*]*)*\*\/|\/\/[^\n]*|"[^"]+"\s*;?|'[^']+'\s*;?/g;

	  function setMetaProperty(target, p, value) {
	    var pParts = p.split('.');
	    var curPart;
	    while (pParts.length > 1) {
	      curPart = pParts.shift();
	      target = target[curPart] = target[curPart] || {};
	    }
	    curPart = pParts.shift();
	    if (!(curPart in target))
	      target[curPart] = value;
	  }

	  hook('translate', function(translate) {
	    return function(load) {
	      // NB meta will be post-translate pending transpiler conversion to plugins
	      var meta = load.source.match(metaRegEx);
	      if (meta) {
	        var metaParts = meta[0].match(metaPartRegEx);

	        for (var i = 0; i < metaParts.length; i++) {
	          var curPart = metaParts[i];
	          var len = curPart.length;

	          var firstChar = curPart.substr(0, 1);
	          if (curPart.substr(len - 1, 1) == ';')
	            len--;

	          if (firstChar != '"' && firstChar != "'")
	            continue;

	          var metaString = curPart.substr(1, curPart.length - 3);
	          var metaName = metaString.substr(0, metaString.indexOf(' '));

	          if (metaName) {
	            var metaValue = metaString.substr(metaName.length + 1, metaString.length - metaName.length - 1);

	            if (metaName.substr(metaName.length - 2, 2) == '[]') {
	              metaName = metaName.substr(0, metaName.length - 2);
	              load.metadata[metaName] = load.metadata[metaName] || [];
	              load.metadata[metaName].push(metaValue);
	            }
	            else if (load.metadata[metaName] instanceof Array) {
	              // temporary backwards compat for previous "deps" syntax
	              warn.call(this, 'Module ' + load.name + ' contains deprecated "deps ' + metaValue + '" meta syntax.\nThis should be updated to "deps[] ' + metaValue + '" for pushing to array meta.');
	              load.metadata[metaName].push(metaValue);
	            }
	            else {
	              setMetaProperty(load.metadata, metaName, metaValue);
	            }
	          }
	          else {
	            load.metadata[metaString] = true;
	          }
	        }
	      }

	      return translate.call(this, load);
	    };
	  });
	})();
	/*
	  System bundles

	  Allows a bundle module to be specified which will be dynamically 
	  loaded before trying to load a given module.

	  For example:
	  SystemJS.bundles['mybundle'] = ['jquery', 'bootstrap/js/bootstrap']

	  Will result in a load to "mybundle" whenever a load to "jquery"
	  or "bootstrap/js/bootstrap" is made.

	  In this way, the bundle becomes the request that provides the module
	*/

	(function() {
	  // bundles support (just like RequireJS)
	  // bundle name is module name of bundle itself
	  // bundle is array of modules defined by the bundle
	  // when a module in the bundle is requested, the bundle is loaded instead
	  // of the form SystemJS.bundles['mybundle'] = ['jquery', 'bootstrap/js/bootstrap']
	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.bundles = {};
	      this._loader.loadedBundles = {};
	    };
	  });

	  // assign bundle metadata for bundle loads
	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      var matched = false;

	      if (!(load.name in loader.defined))
	        for (var b in loader.bundles) {
	          for (var i = 0; i < loader.bundles[b].length; i++) {
	            var curModule = loader.bundles[b][i];

	            if (curModule == load.name) {
	              matched = true;
	              break;
	            }

	            // wildcard in bundles does not include / boundaries
	            if (curModule.indexOf('*') != -1) {
	              var parts = curModule.split('*');
	              if (parts.length != 2) {
	                loader.bundles[b].splice(i--, 1);
	                continue;
	              }
	              
	              if (load.name.substring(0, parts[0].length) == parts[0] &&
	                  load.name.substr(load.name.length - parts[1].length, parts[1].length) == parts[1] &&
	                  load.name.substr(parts[0].length, load.name.length - parts[1].length - parts[0].length).indexOf('/') == -1) {
	                matched = true;
	                break;
	              }
	            }
	          }

	          if (matched)
	            return loader['import'](b)
	            .then(function() {
	              return locate.call(loader, load);
	            });
	        }

	      return locate.call(loader, load);
	    };
	  });
	})();
	/*
	 * Dependency Tree Cache
	 * 
	 * Allows a build to pre-populate a dependency trace tree on the loader of 
	 * the expected dependency tree, to be loaded upfront when requesting the
	 * module, avoinding the n round trips latency of module loading, where 
	 * n is the dependency tree depth.
	 *
	 * eg:
	 * SystemJS.depCache = {
	 *  'app': ['normalized', 'deps'],
	 *  'normalized': ['another'],
	 *  'deps': ['tree']
	 * };
	 * 
	 * SystemJS.import('app') 
	 * // simultaneously starts loading all of:
	 * // 'normalized', 'deps', 'another', 'tree'
	 * // before "app" source is even loaded
	 *
	 */

	(function() {
	  hookConstructor(function(constructor) {
	    return function() {
	      constructor.call(this);
	      this.depCache = {};
	    }
	  });

	  hook('locate', function(locate) {
	    return function(load) {
	      var loader = this;
	      // load direct deps, in turn will pick up their trace trees
	      var deps = loader.depCache[load.name];
	      if (deps)
	        for (var i = 0; i < deps.length; i++)
	          loader['import'](deps[i], load.name);

	      return locate.call(loader, load);
	    };
	  });
	})();
	  
	System = new SystemJSLoader();

	__global.SystemJS = System;
	System.version = '0.19.27 Standard';
	  // -- exporting --

	  if (true)
	    module.exports = Loader;

	  __global.Reflect = __global.Reflect || {};
	  __global.Reflect.Loader = __global.Reflect.Loader || Loader;
	  __global.Reflect.global = __global.Reflect.global || __global;
	  __global.LoaderPolyfill = Loader;

	  if (!System) {
	    System = new SystemLoader();
	    System.constructor = SystemLoader;
	  }

	  if (true)
	    module.exports = System;

	  __global.System = System;

	})(typeof self != 'undefined' ? self : global);}

	// auto-load Promise polyfill if needed in the browser
	var doPolyfill = typeof Promise === 'undefined';

	// document.write
	if (typeof document !== 'undefined') {
	  var scripts = document.getElementsByTagName('script');
	  $__curScript = scripts[scripts.length - 1];
	  if (doPolyfill) {
	    var curPath = $__curScript.src;
	    var basePath = curPath.substr(0, curPath.lastIndexOf('/') + 1);
	    window.systemJSBootstrap = bootstrap;
	    document.write(
	      '<' + 'script type="text/javascript" src="' + basePath + 'system-polyfills.js">' + '<' + '/script>'
	    );
	  }
	  else {
	    bootstrap();
	  }
	}
	// importScripts
	else if (typeof importScripts !== 'undefined') {
	  var basePath = '';
	  try {
	    throw new Error('_');
	  } catch (e) {
	    e.stack.replace(/(?:at|@).*(http.+):[\d]+:[\d]+/, function(m, url) {
	      $__curScript = { src: url };
	      basePath = url.replace(/\/[^\/]*$/, '/');
	    });
	  }
	  if (doPolyfill)
	    importScripts(basePath + 'system-polyfills.js');
	  bootstrap();
	}
	else {
	  $__curScript =  true ? { src: __filename } : null;
	  bootstrap();
	}


	})();
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(698), "/index.js"))

/***/ }
/******/ ]);